#####TASK##### Here
## name
navigation_inst_mdp__8
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
40
## number of prob state fluents
20
## number of preconds
0
## number of actions
5
## number of hashing functions
61
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(0)) and($a(0) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(40)) and($a(0) $s(36)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(1)) and($a(0) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(40)) and($a(0) $s(37)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x126, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(41)) and($a(0) $s(0)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x126, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(41)) and($a(0) $s(1)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(42)) and($a(0) $s(38)) and($a(3) $s(12))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(42)) and($a(0) $s(39)) and($a(3) $s(13))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x149, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(43)) and($a(0) $s(2)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x149, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(43)) and($a(0) $s(3)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x174, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(44)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x174, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(44)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x201, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(45)) and($a(0) $s(8)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x201, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(45)) and($a(0) $s(9)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(2) $s(46)) and($a(0) $s(4)) and($a(3) $s(20))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(46)) and($a(0) $s(5)) and($a(3) $s(21))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x230, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(47)) and($a(0) $s(10)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x230, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(47)) and($a(0) $s(11)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x261, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(48)) and($a(0) $s(14)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x261, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(48)) and($a(0) $s(15)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x294, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(49)) and($a(0) $s(16)) and($a(3) $s(22))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x294, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(49)) and($a(0) $s(17)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(20)) and($a(0) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(2) $s(50)) and($a(0) $s(12)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(21)) and($a(0) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(50)) and($a(0) $s(13)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x329, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(2) $s(51)) and($a(0) $s(18)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x329, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(51)) and($a(0) $s(19)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x366, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(2) $s(52)) and($a(0) $s(22)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x366, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(52)) and($a(0) $s(23)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x405, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(2) $s(53)) and($a(0) $s(24))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x405, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(27) : $c(1)) (or($s(27) and($a(2) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(53)) and($a(0) $s(25))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x41, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(2) $s(54)) and($a(0) $s(20)) and($a(3) $s(30))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x41, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(54)) and($a(0) $s(21)) and($a(3) $s(31))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x54, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(2) $s(55)) and($a(0) $s(28)) and($a(3) $s(34))) : $c(1)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x54, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(55)) and($a(0) $s(29)) and($a(3) $s(35))) : $c(1)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(32)) and($a(0) $s(32))) : $c(0)) (or(and($a(2) $s(56)) and($a(3) $s(38))) : $c(1)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(33)) and($a(0) $s(33))) : $c(0)) (or(and($a(1) $s(56)) and($a(3) $s(39))) : $c(1)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x69, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(2) $s(57)) and($a(0) $s(30)) and($a(3) $s(36))) : $c(1)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x69, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(57)) and($a(0) $s(31)) and($a(3) $s(37))) : $c(1)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x86, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(2) $s(58)) and($a(0) $s(34)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x86, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(58)) and($a(0) $s(35)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(2) $s(59)) and($a(0) $s(32)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(59)) and($a(0) $s(33)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40)) and($a(3) $s(40))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(1)) and($a(0) $s(58)) and($a(3) $s(41))) : Bernoulli($c(0.529362157869496))) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x126, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(3)) and($a(0) $s(40)) and($a(3) $s(43))) : Bernoulli($c(0.477572323558362))) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(5)) and($a(0) $s(59)) and($a(3) $s(46))) : Bernoulli($c(0.874014911290846))) ($c(1) : $s(42)) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x149, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(7)) and($a(0) $s(41)) and($a(3) $s(44))) : Bernoulli($c(0.448704042030793))) ($c(1) : $s(43)) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x174, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(9)) and($a(0) $s(43)) and($a(3) $s(45))) : Bernoulli($c(0.407939155831149))) ($c(1) : $s(44)) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x201, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(11)) and($a(0) $s(44)) and($a(3) $s(47))) : Bernoulli($c(0.369444596679195))) ($c(1) : $s(45)) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(13)) and($a(0) $s(42)) and($a(3) $s(50))) : Bernoulli($c(0.813817389603508))) ($c(1) : $s(46)) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x230, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(15)) and($a(0) $s(45)) and($a(3) $s(48))) : Bernoulli($c(0.31979205351519))) ($c(1) : $s(47)) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x261, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(17)) and($a(0) $s(47)) and($a(3) $s(49))) : Bernoulli($c(0.234891649041521))) ($c(1) : $s(48)) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x294, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(19)) and($a(0) $s(48)) and($a(3) $s(51))) : Bernoulli($c(0.227541108542171))) ($c(1) : $s(49)) )
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(50)) and($a(2) $s(50)) and($a(0) $s(50)) and($a(3) $s(50))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(21)) and($a(0) $s(46)) and($a(3) $s(54))) : Bernoulli($c(0.765231303968712))) ($c(1) : $s(50)) )
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x329, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(51)) and($a(2) $s(51)) and($a(0) $s(51)) and($a(3) $s(51))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(23)) and($a(0) $s(49)) and($a(3) $s(52))) : Bernoulli($c(0.181369565807185))) ($c(1) : $s(51)) )
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x366, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(52)) and($a(2) $s(52)) and($a(0) $s(52)) and($a(3) $s(52))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(25)) and($a(0) $s(51)) and($a(3) $s(53))) : Bernoulli($c(0.12892973878862))) ($c(1) : $s(52)) )
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x405, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(53)) and($a(2) $s(53)) and($a(3) $s(53))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(27)) and($a(0) $s(52))) : Bernoulli($c(0.05536517020511))) ($c(1) : $s(53)) )
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x41, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(54)) and($a(2) $s(54)) and($a(0) $s(54)) and($a(3) $s(54))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(29)) and($a(0) $s(50)) and($a(3) $s(55))) : Bernoulli($c(0.742453025555924))) ($c(1) : $s(54)) )
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x54, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(55)) and($a(2) $s(55)) and($a(0) $s(55)) and($a(3) $s(55))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(31)) and($a(0) $s(54)) and($a(3) $s(57))) : Bernoulli($c(0.699826093978788))) ($c(1) : $s(55)) )
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(56)) and($a(2) $s(56)) and($a(0) $s(56))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(33)) and($a(3) $s(59))) : Bernoulli($c(0.979876174591482))) ($c(1) : $s(56)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x69, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(57)) and($a(2) $s(57)) and($a(0) $s(57)) and($a(3) $s(57))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(35)) and($a(0) $s(55)) and($a(3) $s(58))) : Bernoulli($c(0.629675863702831))) ($c(1) : $s(57)) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x86, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(58)) and($a(2) $s(58)) and($a(0) $s(58)) and($a(3) $s(58))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(37)) and($a(0) $s(57)) and($a(3) $s(40))) : Bernoulli($c(0.599831176186471))) ($c(1) : $s(58)) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(59)) and($a(2) $s(59)) and($a(0) $s(59)) and($a(3) $s(59))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(39)) and($a(0) $s(56)) and($a(3) $s(42))) : Bernoulli($c(0.910410859180908))) ($c(1) : $s(59)) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(27)))
## min
-1
## max
0
## independent from actions
1
## hash index
60
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
4
0 5
2 5
36 5
40 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
4
1 5
3 5
37 5
40 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
4
0 10
2 10
6 5
41 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
4
1 10
3 10
7 5
41 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
4
4 5
12 5
38 5
42 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
4
5 5
13 5
39 5
42 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
4
2 20
6 10
8 5
43 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
4
3 20
7 10
9 5
43 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
4
6 20
8 10
10 5
44 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
4
7 20
9 10
11 5
44 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
4
8 20
10 10
14 5
45 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
4
9 20
11 10
15 5
45 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
4
4 10
12 10
20 5
46 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
4
5 10
13 10
21 5
46 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
4
10 20
14 10
16 5
47 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
4
11 20
15 10
17 5
47 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
4
14 20
16 10
18 5
48 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
4
15 20
17 10
19 5
48 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
4
16 20
18 10
22 5
49 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
4
17 20
19 10
23 5
49 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
4
12 20
20 10
28 5
50 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
4
13 20
21 10
29 5
50 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
4
18 20
22 10
24 5
51 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
4
19 20
23 10
25 5
51 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
4
22 20
24 10
26 5
52 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
4
23 20
25 10
27 5
52 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
3
24 20
26 10
53 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
61
0 20
1 20
2 40
3 40
4 20
5 20
6 40
7 40
8 40
9 40
10 40
11 40
12 40
13 40
14 40
15 40
16 40
17 40
18 40
19 40
20 20
21 20
22 40
23 40
24 40
25 20
26 20
27 10
28 10
29 10
30 5
31 5
32 5
33 5
34 5
35 5
36 10
37 10
38 10
39 10
40 20
41 20
42 20
43 20
44 20
45 20
46 20
47 20
48 20
49 20
50 20
51 20
52 20
53 10
54 5
55 5
56 5
57 5
58 5
59 5
60 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
4
20 40
28 20
30 10
54 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
4
21 40
29 20
31 10
54 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
4
28 40
30 20
34 10
55 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
4
29 40
31 20
35 10
55 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
3
32 10
38 20
56 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
3
33 10
39 20
56 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
4
30 40
34 20
36 20
57 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
4
31 40
35 20
37 20
57 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
4
0 40
34 40
36 40
58 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
4
1 40
35 40
37 40
58 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
4
4 40
32 20
38 40
59 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
4
5 40
33 20
39 40
59 20
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
5
0 80
1 80
40 40
41 40
58 40
## kleene state fluent hash keys (first line is the number of keys)
5
33676608 33732336
1 405
40 135
41 135
58 135

## index
1
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
5
2 80
3 80
40 80
41 80
43 40
## kleene state fluent hash keys (first line is the number of keys)
5
33373392 33667088
3 405
40 405
41 405
43 135

## index
2
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
5
4 80
5 80
42 40
46 40
59 40
## kleene state fluent hash keys (first line is the number of keys)
5
33459632 33441200
5 405
42 135
46 135
59 135

## index
3
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
5
6 80
7 80
41 160
43 80
44 40
## kleene state fluent hash keys (first line is the number of keys)
5
6 405
7 405
41 1215
43 405
44 135

## index
4
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
5
8 80
9 80
43 160
44 80
45 40
## kleene state fluent hash keys (first line is the number of keys)
5
33441200 33532960
9 405
43 1215
44 405
45 135

## index
5
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
5
10 80
11 80
44 160
45 80
47 40
## kleene state fluent hash keys (first line is the number of keys)
5
33496256 33588304
11 405
44 1215
45 405
47 135

## index
6
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
5
12 80
13 80
42 80
46 80
50 40
## kleene state fluent hash keys (first line is the number of keys)
5
33532960 33551392
13 405
42 405
46 405
50 135

## index
7
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
5
14 80
15 80
45 160
47 80
48 40
## kleene state fluent hash keys (first line is the number of keys)
5
33588304 33569776
15 405
45 1215
47 405
48 135

## index
8
## state hash key (for each value in the domain)
0 281474976710656
## state fluent hash keys (first line is the number of keys)
5
16 80
17 80
47 160
48 80
49 40
## kleene state fluent hash keys (first line is the number of keys)
5
33551392 33606688
17 405
47 1215
48 405
49 135

## index
9
## state hash key (for each value in the domain)
0 562949953421312
## state fluent hash keys (first line is the number of keys)
5
18 80
19 80
48 160
49 80
51 40
## kleene state fluent hash keys (first line is the number of keys)
5
33569776 33625072
19 405
48 1215
49 405
51 135

## index
10
## state hash key (for each value in the domain)
0 1125899906842624
## state fluent hash keys (first line is the number of keys)
5
20 80
21 80
46 160
50 80
54 40
## kleene state fluent hash keys (first line is the number of keys)
5
33606688 33625072
21 405
46 1215
50 405
54 135

## index
11
## state hash key (for each value in the domain)
0 2251799813685248
## state fluent hash keys (first line is the number of keys)
5
22 80
23 80
49 160
51 80
52 40
## kleene state fluent hash keys (first line is the number of keys)
5
33606688 33629952
23 405
49 1215
51 405
52 135

## index
12
## state hash key (for each value in the domain)
0 4503599627370496
## state fluent hash keys (first line is the number of keys)
5
24 80
25 40
51 160
52 80
53 20
## kleene state fluent hash keys (first line is the number of keys)
5
33625072 33666864
25 135
51 1215
52 405
53 45

## index
13
## state hash key (for each value in the domain)
0 9007199254740992
## state fluent hash keys (first line is the number of keys)
4
26 40
27 20
52 160
53 40
## kleene state fluent hash keys (first line is the number of keys)
4
33383904 135
27 45
52 1215
53 135

## index
14
## state hash key (for each value in the domain)
0 18014398509481984
## state fluent hash keys (first line is the number of keys)
5
28 80
29 80
50 160
54 80
55 40
## kleene state fluent hash keys (first line is the number of keys)
5
33629952 33676608
29 405
50 1215
54 405
55 135

## index
15
## state hash key (for each value in the domain)
0 36028797018963968
## state fluent hash keys (first line is the number of keys)
5
30 80
31 80
54 160
55 80
57 40
## kleene state fluent hash keys (first line is the number of keys)
5
33666864 33713520
31 405
54 1215
55 405
57 135

## index
16
## state hash key (for each value in the domain)
0 72057594037927936
## state fluent hash keys (first line is the number of keys)
4
32 40
33 40
56 40
59 80
## kleene state fluent hash keys (first line is the number of keys)
4
33404368 135
33 135
56 135
59 405

## index
17
## state hash key (for each value in the domain)
0 144115188075855872
## state fluent hash keys (first line is the number of keys)
5
34 80
35 80
55 160
57 80
58 80
## kleene state fluent hash keys (first line is the number of keys)
5
34 405
35 405
55 1215
57 405
58 405

## index
18
## state hash key (for each value in the domain)
0 288230376151711744
## state fluent hash keys (first line is the number of keys)
5
36 80
37 80
40 160
57 160
58 160
## kleene state fluent hash keys (first line is the number of keys)
5
36 405
37 405
40 1215
57 1215
58 1215

## index
19
## state hash key (for each value in the domain)
0 576460752303423488
## state fluent hash keys (first line is the number of keys)
5
38 80
39 80
42 160
56 80
59 160
## kleene state fluent hash keys (first line is the number of keys)
5
33713520 140510309432184
0 0
42 1215
56 405
59 1215

