#####TASK##### Here
## name
navigation_inst_mdp__10
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
40
## number of prob state fluents
60
## number of preconds
0
## number of actions
5
## number of hashing functions
101
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
0
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(0)) and($a(0) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(40)) and($a(0) $s(36)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(1)) and($a(0) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(42)) and($a(0) $s(37)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x126, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(43)) and($a(0) $s(0)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x126, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(45)) and($a(0) $s(1)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(46)) and($a(0) $s(38)) and($a(3) $s(12))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x14, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(48)) and($a(0) $s(39)) and($a(3) $s(13))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x149, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(49)) and($a(0) $s(2)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x149, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(51)) and($a(0) $s(3)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x174, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(52)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x174, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(54)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x201, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(55)) and($a(0) $s(8)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x201, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(57)) and($a(0) $s(9)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(2) $s(58)) and($a(0) $s(4)) and($a(3) $s(20))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x21, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(60)) and($a(0) $s(5)) and($a(3) $s(21))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x230, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(61)) and($a(0) $s(10)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x230, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(63)) and($a(0) $s(11)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x261, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(64)) and($a(0) $s(14)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x261, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(66)) and($a(0) $s(15)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x294, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(67)) and($a(0) $s(16)) and($a(3) $s(22))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x294, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(69)) and($a(0) $s(17)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(20)) and($a(0) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(2) $s(70)) and($a(0) $s(12)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x30, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(21)) and($a(0) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(72)) and($a(0) $s(13)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x329, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(2) $s(73)) and($a(0) $s(18)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x329, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(75)) and($a(0) $s(19)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x366, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(2) $s(76)) and($a(0) $s(22)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x366, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(78)) and($a(0) $s(23)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x405, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(2) $s(79)) and($a(0) $s(24))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x405, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(27) : $c(1)) (or($s(27) and($a(2) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(81)) and($a(0) $s(25))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x41, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(2) $s(82)) and($a(0) $s(20)) and($a(3) $s(30))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x41, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(84)) and($a(0) $s(21)) and($a(3) $s(31))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x54, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(2) $s(85)) and($a(0) $s(28)) and($a(3) $s(34))) : $c(1)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x54, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(87)) and($a(0) $s(29)) and($a(3) $s(35))) : $c(1)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(32)) and($a(0) $s(32))) : $c(0)) (or(and($a(2) $s(88)) and($a(3) $s(38))) : $c(1)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x6, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(33)) and($a(0) $s(33))) : $c(0)) (or(and($a(1) $s(90)) and($a(3) $s(39))) : $c(1)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x69, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(2) $s(91)) and($a(0) $s(30)) and($a(3) $s(36))) : $c(1)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x69, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(93)) and($a(0) $s(31)) and($a(3) $s(37))) : $c(1)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x86, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(2) $s(94)) and($a(0) $s(34)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x86, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(96)) and($a(0) $s(35)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(2) $s(97)) and($a(0) $s(32)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x9, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(99)) and($a(0) $s(33)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40)) and($a(3) $s(40))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(41)) and($a(0) $s(94)) and($a(3) $s(43))) : Bernoulli($c(0.549293104510166))) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(40)) and($a(2) $s(42)) and($a(0) $s(95)) and($a(3) $s(44))) : Bernoulli($c(0.52495170845405))) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x105, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(41)) and($a(2) $s(1)) and($a(0) $s(96)) and($a(3) $s(45))) : Bernoulli($c(0.532961177590646))) ($c(1) : $s(42)) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x126, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(44)) and($a(0) $s(40)) and($a(3) $s(49))) : Bernoulli($c(0.478165721324714))) ($c(1) : $s(43)) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x126, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(43)) and($a(2) $s(45)) and($a(0) $s(41)) and($a(3) $s(50))) : Bernoulli($c(0.497029932019742))) ($c(1) : $s(44)) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x126, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(44)) and($a(2) $s(3)) and($a(0) $s(42)) and($a(3) $s(51))) : Bernoulli($c(0.478242760328086))) ($c(1) : $s(45)) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(47)) and($a(0) $s(97)) and($a(3) $s(58))) : Bernoulli($c(0.847501977395855))) ($c(1) : $s(46)) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(46)) and($a(2) $s(48)) and($a(0) $s(98)) and($a(3) $s(59))) : Bernoulli($c(0.854160605978809))) ($c(1) : $s(47)) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x14, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(47)) and($a(2) $s(5)) and($a(0) $s(99)) and($a(3) $s(60))) : Bernoulli($c(0.884480116937898))) ($c(1) : $s(48)) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x149, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(50)) and($a(0) $s(43)) and($a(3) $s(52))) : Bernoulli($c(0.451928643999915))) ($c(1) : $s(49)) )
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x149, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(50)) and($a(2) $s(50)) and($a(0) $s(50)) and($a(3) $s(50))) : $c(0)) (or(and($a(1) $s(49)) and($a(2) $s(51)) and($a(0) $s(44)) and($a(3) $s(53))) : Bernoulli($c(0.443346579117995))) ($c(1) : $s(50)) )
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x149, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(51)) and($a(2) $s(51)) and($a(0) $s(51)) and($a(3) $s(51))) : $c(0)) (or(and($a(1) $s(50)) and($a(2) $s(7)) and($a(0) $s(45)) and($a(3) $s(54))) : Bernoulli($c(0.441061044602018))) ($c(1) : $s(51)) )
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x174, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(52)) and($a(2) $s(52)) and($a(0) $s(52)) and($a(3) $s(52))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(53)) and($a(0) $s(49)) and($a(3) $s(55))) : Bernoulli($c(0.386616020708492))) ($c(1) : $s(52)) )
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x174, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(53)) and($a(2) $s(53)) and($a(0) $s(53)) and($a(3) $s(53))) : $c(0)) (or(and($a(1) $s(52)) and($a(2) $s(54)) and($a(0) $s(50)) and($a(3) $s(56))) : Bernoulli($c(0.42091350485632))) ($c(1) : $s(53)) )
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x174, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(54)) and($a(2) $s(54)) and($a(0) $s(54)) and($a(3) $s(54))) : $c(0)) (or(and($a(1) $s(53)) and($a(2) $s(9)) and($a(0) $s(51)) and($a(3) $s(57))) : Bernoulli($c(0.375744729547908))) ($c(1) : $s(54)) )
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x201, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(55)) and($a(2) $s(55)) and($a(0) $s(55)) and($a(3) $s(55))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(56)) and($a(0) $s(52)) and($a(3) $s(61))) : Bernoulli($c(0.340588003495022))) ($c(1) : $s(55)) )
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x201, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(56)) and($a(2) $s(56)) and($a(0) $s(56)) and($a(3) $s(56))) : $c(0)) (or(and($a(1) $s(55)) and($a(2) $s(57)) and($a(0) $s(53)) and($a(3) $s(62))) : Bernoulli($c(0.352674931385799))) ($c(1) : $s(56)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x201, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(57)) and($a(2) $s(57)) and($a(0) $s(57)) and($a(3) $s(57))) : $c(0)) (or(and($a(1) $s(56)) and($a(2) $s(11)) and($a(0) $s(54)) and($a(3) $s(63))) : Bernoulli($c(0.345376135879441))) ($c(1) : $s(57)) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(58)) and($a(2) $s(58)) and($a(0) $s(58)) and($a(3) $s(58))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(59)) and($a(0) $s(46)) and($a(3) $s(70))) : Bernoulli($c(0.825867036651624))) ($c(1) : $s(58)) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(59)) and($a(2) $s(59)) and($a(0) $s(59)) and($a(3) $s(59))) : $c(0)) (or(and($a(1) $s(58)) and($a(2) $s(60)) and($a(0) $s(47)) and($a(3) $s(71))) : Bernoulli($c(0.809848033185852))) ($c(1) : $s(59)) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x21, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(60)) and($a(2) $s(60)) and($a(0) $s(60)) and($a(3) $s(60))) : $c(0)) (or(and($a(1) $s(59)) and($a(2) $s(13)) and($a(0) $s(48)) and($a(3) $s(72))) : Bernoulli($c(0.8283131367674))) ($c(1) : $s(60)) )
## hash index
60
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x230, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(61)) and($a(2) $s(61)) and($a(0) $s(61)) and($a(3) $s(61))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(62)) and($a(0) $s(55)) and($a(3) $s(64))) : Bernoulli($c(0.303243533561104))) ($c(1) : $s(61)) )
## hash index
61
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x230, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(62)) and($a(2) $s(62)) and($a(0) $s(62)) and($a(3) $s(62))) : $c(0)) (or(and($a(1) $s(61)) and($a(2) $s(63)) and($a(0) $s(56)) and($a(3) $s(65))) : Bernoulli($c(0.320312628375464))) ($c(1) : $s(62)) )
## hash index
62
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x230, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(63)) and($a(2) $s(63)) and($a(0) $s(63)) and($a(3) $s(63))) : $c(0)) (or(and($a(1) $s(62)) and($a(2) $s(15)) and($a(0) $s(57)) and($a(3) $s(66))) : Bernoulli($c(0.278142417634004))) ($c(1) : $s(63)) )
## hash index
63
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x261, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(64)) and($a(2) $s(64)) and($a(0) $s(64)) and($a(3) $s(64))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(65)) and($a(0) $s(61)) and($a(3) $s(67))) : Bernoulli($c(0.256734871942746))) ($c(1) : $s(64)) )
## hash index
64
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x261, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(65)) and($a(2) $s(65)) and($a(0) $s(65)) and($a(3) $s(65))) : $c(0)) (or(and($a(1) $s(64)) and($a(2) $s(66)) and($a(0) $s(62)) and($a(3) $s(68))) : Bernoulli($c(0.278111336807916))) ($c(1) : $s(65)) )
## hash index
65
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x261, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(66)) and($a(2) $s(66)) and($a(0) $s(66)) and($a(3) $s(66))) : $c(0)) (or(and($a(1) $s(65)) and($a(2) $s(17)) and($a(0) $s(63)) and($a(3) $s(69))) : Bernoulli($c(0.276076538426998))) ($c(1) : $s(66)) )
## hash index
66
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x294, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(67)) and($a(2) $s(67)) and($a(0) $s(67)) and($a(3) $s(67))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(68)) and($a(0) $s(64)) and($a(3) $s(73))) : Bernoulli($c(0.205850044657525))) ($c(1) : $s(67)) )
## hash index
67
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x294, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(68)) and($a(2) $s(68)) and($a(0) $s(68)) and($a(3) $s(68))) : $c(0)) (or(and($a(1) $s(67)) and($a(2) $s(69)) and($a(0) $s(65)) and($a(3) $s(74))) : Bernoulli($c(0.231064768085305))) ($c(1) : $s(68)) )
## hash index
68
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x294, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(69)) and($a(2) $s(69)) and($a(0) $s(69)) and($a(3) $s(69))) : $c(0)) (or(and($a(1) $s(68)) and($a(2) $s(19)) and($a(0) $s(66)) and($a(3) $s(75))) : Bernoulli($c(0.212864915301141))) ($c(1) : $s(69)) )
## hash index
69
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(70)) and($a(2) $s(70)) and($a(0) $s(70)) and($a(3) $s(70))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(71)) and($a(0) $s(58)) and($a(3) $s(82))) : Bernoulli($c(0.751970145949408))) ($c(1) : $s(70)) )
## hash index
70
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(71)) and($a(2) $s(71)) and($a(0) $s(71)) and($a(3) $s(71))) : $c(0)) (or(and($a(1) $s(70)) and($a(2) $s(72)) and($a(0) $s(59)) and($a(3) $s(83))) : Bernoulli($c(0.798904112056143))) ($c(1) : $s(71)) )
## hash index
71
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x30, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(72)) and($a(2) $s(72)) and($a(0) $s(72)) and($a(3) $s(72))) : $c(0)) (or(and($a(1) $s(71)) and($a(2) $s(21)) and($a(0) $s(60)) and($a(3) $s(84))) : Bernoulli($c(0.787286251881405))) ($c(1) : $s(72)) )
## hash index
72
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x329, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(73)) and($a(2) $s(73)) and($a(0) $s(73)) and($a(3) $s(73))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(74)) and($a(0) $s(67)) and($a(3) $s(76))) : Bernoulli($c(0.165520227661258))) ($c(1) : $s(73)) )
## hash index
73
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x329, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(74)) and($a(2) $s(74)) and($a(0) $s(74)) and($a(3) $s(74))) : $c(0)) (or(and($a(1) $s(73)) and($a(2) $s(75)) and($a(0) $s(68)) and($a(3) $s(77))) : Bernoulli($c(0.172328241316504))) ($c(1) : $s(74)) )
## hash index
74
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x329, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(75)) and($a(2) $s(75)) and($a(0) $s(75)) and($a(3) $s(75))) : $c(0)) (or(and($a(1) $s(74)) and($a(2) $s(23)) and($a(0) $s(69)) and($a(3) $s(78))) : Bernoulli($c(0.158292920475728))) ($c(1) : $s(75)) )
## hash index
75
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x366, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(76)) and($a(2) $s(76)) and($a(0) $s(76)) and($a(3) $s(76))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(77)) and($a(0) $s(73)) and($a(3) $s(79))) : Bernoulli($c(0.118622269383387))) ($c(1) : $s(76)) )
## hash index
76
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x366, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(77)) and($a(2) $s(77)) and($a(0) $s(77)) and($a(3) $s(77))) : $c(0)) (or(and($a(1) $s(76)) and($a(2) $s(78)) and($a(0) $s(74)) and($a(3) $s(80))) : Bernoulli($c(0.0982995814594784))) ($c(1) : $s(77)) )
## hash index
77
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x366, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(78)) and($a(2) $s(78)) and($a(0) $s(78)) and($a(3) $s(78))) : $c(0)) (or(and($a(1) $s(77)) and($a(2) $s(25)) and($a(0) $s(75)) and($a(3) $s(81))) : Bernoulli($c(0.126119692711846))) ($c(1) : $s(78)) )
## hash index
78
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x405, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(79)) and($a(2) $s(79)) and($a(3) $s(79))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(80)) and($a(0) $s(76))) : Bernoulli($c(0.0678806759809193))) ($c(1) : $s(79)) )
## hash index
79
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
40
## name
robot-at(x405, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(80)) and($a(2) $s(80)) and($a(3) $s(80))) : $c(0)) (or(and($a(1) $s(79)) and($a(2) $s(81)) and($a(0) $s(77))) : Bernoulli($c(0.0804706847687301))) ($c(1) : $s(80)) )
## hash index
80
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
41
## name
robot-at(x405, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(81)) and($a(2) $s(81)) and($a(3) $s(81))) : $c(0)) (or(and($a(1) $s(80)) and($a(2) $s(27)) and($a(0) $s(78))) : Bernoulli($c(0.0763329033200678))) ($c(1) : $s(81)) )
## hash index
81
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
42
## name
robot-at(x41, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(82)) and($a(2) $s(82)) and($a(0) $s(82)) and($a(3) $s(82))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(83)) and($a(0) $s(70)) and($a(3) $s(85))) : Bernoulli($c(0.710333172133879))) ($c(1) : $s(82)) )
## hash index
82
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
43
## name
robot-at(x41, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(83)) and($a(2) $s(83)) and($a(0) $s(83)) and($a(3) $s(83))) : $c(0)) (or(and($a(1) $s(82)) and($a(2) $s(84)) and($a(0) $s(71)) and($a(3) $s(86))) : Bernoulli($c(0.749755742163152))) ($c(1) : $s(83)) )
## hash index
83
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
44
## name
robot-at(x41, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(84)) and($a(2) $s(84)) and($a(0) $s(84)) and($a(3) $s(84))) : $c(0)) (or(and($a(1) $s(83)) and($a(2) $s(29)) and($a(0) $s(72)) and($a(3) $s(87))) : Bernoulli($c(0.720606729290203))) ($c(1) : $s(84)) )
## hash index
84
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
45
## name
robot-at(x54, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(85)) and($a(2) $s(85)) and($a(0) $s(85)) and($a(3) $s(85))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(86)) and($a(0) $s(82)) and($a(3) $s(91))) : Bernoulli($c(0.660127448506261))) ($c(1) : $s(85)) )
## hash index
85
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
46
## name
robot-at(x54, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(86)) and($a(2) $s(86)) and($a(0) $s(86)) and($a(3) $s(86))) : $c(0)) (or(and($a(1) $s(85)) and($a(2) $s(87)) and($a(0) $s(83)) and($a(3) $s(92))) : Bernoulli($c(0.660205884493495))) ($c(1) : $s(86)) )
## hash index
86
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
47
## name
robot-at(x54, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(87)) and($a(2) $s(87)) and($a(0) $s(87)) and($a(3) $s(87))) : $c(0)) (or(and($a(1) $s(86)) and($a(2) $s(31)) and($a(0) $s(84)) and($a(3) $s(93))) : Bernoulli($c(0.697313388466443))) ($c(1) : $s(87)) )
## hash index
87
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
48
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(88)) and($a(2) $s(88)) and($a(0) $s(88))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(89)) and($a(3) $s(97))) : Bernoulli($c(0.950619785115123))) ($c(1) : $s(88)) )
## hash index
88
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
49
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(89)) and($a(2) $s(89)) and($a(0) $s(89))) : $c(0)) (or(and($a(1) $s(88)) and($a(2) $s(90)) and($a(3) $s(98))) : Bernoulli($c(0.946186179295182))) ($c(1) : $s(89)) )
## hash index
89
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
50
## name
robot-at(x6, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(90)) and($a(2) $s(90)) and($a(0) $s(90))) : $c(0)) (or(and($a(1) $s(89)) and($a(2) $s(33)) and($a(3) $s(99))) : Bernoulli($c(0.946066239848733))) ($c(1) : $s(90)) )
## hash index
90
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
51
## name
robot-at(x69, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(91)) and($a(2) $s(91)) and($a(0) $s(91)) and($a(3) $s(91))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(92)) and($a(0) $s(85)) and($a(3) $s(94))) : Bernoulli($c(0.614548640717801))) ($c(1) : $s(91)) )
## hash index
91
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
52
## name
robot-at(x69, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(92)) and($a(2) $s(92)) and($a(0) $s(92)) and($a(3) $s(92))) : $c(0)) (or(and($a(1) $s(91)) and($a(2) $s(93)) and($a(0) $s(86)) and($a(3) $s(95))) : Bernoulli($c(0.623492973317441))) ($c(1) : $s(92)) )
## hash index
92
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
53
## name
robot-at(x69, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(93)) and($a(2) $s(93)) and($a(0) $s(93)) and($a(3) $s(93))) : $c(0)) (or(and($a(1) $s(92)) and($a(2) $s(35)) and($a(0) $s(87)) and($a(3) $s(96))) : Bernoulli($c(0.611890508254108))) ($c(1) : $s(93)) )
## hash index
93
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
54
## name
robot-at(x86, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(94)) and($a(2) $s(94)) and($a(0) $s(94)) and($a(3) $s(94))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(95)) and($a(0) $s(91)) and($a(3) $s(40))) : Bernoulli($c(0.579697950007884))) ($c(1) : $s(94)) )
## hash index
94
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
55
## name
robot-at(x86, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(95)) and($a(2) $s(95)) and($a(0) $s(95)) and($a(3) $s(95))) : $c(0)) (or(and($a(1) $s(94)) and($a(2) $s(96)) and($a(0) $s(92)) and($a(3) $s(41))) : Bernoulli($c(0.56649920550224))) ($c(1) : $s(95)) )
## hash index
95
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
56
## name
robot-at(x86, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(96)) and($a(2) $s(96)) and($a(0) $s(96)) and($a(3) $s(96))) : $c(0)) (or(and($a(1) $s(95)) and($a(2) $s(37)) and($a(0) $s(93)) and($a(3) $s(42))) : Bernoulli($c(0.598369345264999))) ($c(1) : $s(96)) )
## hash index
96
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
57
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(97)) and($a(2) $s(97)) and($a(0) $s(97)) and($a(3) $s(97))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(98)) and($a(0) $s(88)) and($a(3) $s(46))) : Bernoulli($c(0.908723433060866))) ($c(1) : $s(97)) )
## hash index
97
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
58
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(98)) and($a(2) $s(98)) and($a(0) $s(98)) and($a(3) $s(98))) : $c(0)) (or(and($a(1) $s(97)) and($a(2) $s(99)) and($a(0) $s(89)) and($a(3) $s(47))) : Bernoulli($c(0.935109259585213))) ($c(1) : $s(98)) )
## hash index
98
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
59
## name
robot-at(x9, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(99)) and($a(2) $s(99)) and($a(0) $s(99)) and($a(3) $s(99))) : $c(0)) (or(and($a(1) $s(98)) and($a(2) $s(39)) and($a(0) $s(90)) and($a(3) $s(48))) : Bernoulli($c(0.90196917627595))) ($c(1) : $s(99)) )
## hash index
99
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(27)))
## min
-1
## max
0
## independent from actions
1
## hash index
100
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
4
0 5
2 5
36 5
40 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1

## state fluent hash keys (first line is the number of keys)
4
1 5
3 5
37 5
42 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2

## state fluent hash keys (first line is the number of keys)
4
0 10
2 10
6 5
43 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3

## state fluent hash keys (first line is the number of keys)
4
1 10
3 10
7 5
45 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4

## state fluent hash keys (first line is the number of keys)
4
4 5
12 5
38 5
46 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5

## state fluent hash keys (first line is the number of keys)
4
5 5
13 5
39 5
48 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6

## state fluent hash keys (first line is the number of keys)
4
2 20
6 10
8 5
49 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7

## state fluent hash keys (first line is the number of keys)
4
3 20
7 10
9 5
51 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8

## state fluent hash keys (first line is the number of keys)
4
6 20
8 10
10 5
52 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9

## state fluent hash keys (first line is the number of keys)
4
7 20
9 10
11 5
54 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10

## state fluent hash keys (first line is the number of keys)
4
8 20
10 10
14 5
55 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11

## state fluent hash keys (first line is the number of keys)
4
9 20
11 10
15 5
57 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12

## state fluent hash keys (first line is the number of keys)
4
4 10
12 10
20 5
58 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13

## state fluent hash keys (first line is the number of keys)
4
5 10
13 10
21 5
60 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14

## state fluent hash keys (first line is the number of keys)
4
10 20
14 10
16 5
61 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15

## state fluent hash keys (first line is the number of keys)
4
11 20
15 10
17 5
63 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16

## state fluent hash keys (first line is the number of keys)
4
14 20
16 10
18 5
64 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17

## state fluent hash keys (first line is the number of keys)
4
15 20
17 10
19 5
66 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18

## state fluent hash keys (first line is the number of keys)
4
16 20
18 10
22 5
67 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19

## state fluent hash keys (first line is the number of keys)
4
17 20
19 10
23 5
69 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20

## state fluent hash keys (first line is the number of keys)
4
12 20
20 10
28 5
70 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21

## state fluent hash keys (first line is the number of keys)
4
13 20
21 10
29 5
72 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22

## state fluent hash keys (first line is the number of keys)
4
18 20
22 10
24 5
73 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23

## state fluent hash keys (first line is the number of keys)
4
19 20
23 10
25 5
75 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24

## state fluent hash keys (first line is the number of keys)
4
22 20
24 10
26 5
76 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25

## state fluent hash keys (first line is the number of keys)
4
23 20
25 10
27 5
78 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26

## state fluent hash keys (first line is the number of keys)
3
24 20
26 10
79 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27

## state fluent hash keys (first line is the number of keys)
101
0 20
1 20
2 40
3 40
4 20
5 20
6 40
7 40
8 40
9 40
10 40
11 40
12 40
13 40
14 40
15 40
16 40
17 40
18 40
19 40
20 20
21 20
22 40
23 40
24 40
25 20
26 20
27 10
28 10
29 10
30 5
31 5
32 5
33 5
34 5
35 5
36 10
37 10
38 10
39 10
40 10
41 5
42 10
43 10
44 5
45 10
46 10
47 5
48 10
49 10
50 5
51 10
52 10
53 5
54 10
55 10
56 5
57 10
58 10
59 5
60 10
61 10
62 5
63 10
64 10
65 5
66 10
67 10
68 5
69 10
70 10
71 5
72 10
73 10
74 5
75 10
76 10
77 5
78 10
79 10
80 5
81 5
82 5
83 5
84 5
85 5
86 5
87 5
88 5
89 5
90 5
91 5
92 5
93 5
94 5
95 5
96 5
97 5
98 5
99 5
100 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28

## state fluent hash keys (first line is the number of keys)
4
20 40
28 20
30 10
82 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29

## state fluent hash keys (first line is the number of keys)
4
21 40
29 20
31 10
84 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30

## state fluent hash keys (first line is the number of keys)
4
28 40
30 20
34 10
85 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31

## state fluent hash keys (first line is the number of keys)
4
29 40
31 20
35 10
87 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32

## state fluent hash keys (first line is the number of keys)
3
32 10
38 20
88 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33

## state fluent hash keys (first line is the number of keys)
3
33 10
39 20
90 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34

## state fluent hash keys (first line is the number of keys)
4
30 40
34 20
36 20
91 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35

## state fluent hash keys (first line is the number of keys)
4
31 40
35 20
37 20
93 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36

## state fluent hash keys (first line is the number of keys)
4
0 40
34 40
36 40
94 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37

## state fluent hash keys (first line is the number of keys)
4
1 40
35 40
37 40
96 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38

## state fluent hash keys (first line is the number of keys)
4
4 40
32 20
38 40
97 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39

## state fluent hash keys (first line is the number of keys)
4
5 40
33 20
39 40
99 10
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
5
0 80
40 20
41 10
43 20
94 20
## kleene state fluent hash keys (first line is the number of keys)
5
36541664 37057936
40 45
41 15
43 45
94 45

## index
1

## state fluent hash keys (first line is the number of keys)
5
40 40
41 20
42 20
44 10
95 10
## kleene state fluent hash keys (first line is the number of keys)
5
37039264 37077040
41 45
42 45
44 15
95 15

## index
2

## state fluent hash keys (first line is the number of keys)
5
1 80
41 40
42 40
45 20
96 20
## kleene state fluent hash keys (first line is the number of keys)
5
36541664 36262464
41 135
42 135
45 45
96 45

## index
3

## state fluent hash keys (first line is the number of keys)
5
2 80
40 80
43 40
44 20
49 20
## kleene state fluent hash keys (first line is the number of keys)
5
36115040 36262656
40 405
43 135
44 45
49 45

## index
4

## state fluent hash keys (first line is the number of keys)
5
41 80
43 80
44 40
45 40
50 10
## kleene state fluent hash keys (first line is the number of keys)
5
36262464 36299584
43 405
44 135
45 135
50 15

## index
5

## state fluent hash keys (first line is the number of keys)
5
3 80
42 80
44 80
45 80
51 20
## kleene state fluent hash keys (first line is the number of keys)
5
36262656 37095712
42 405
44 405
45 405
51 45

## index
6

## state fluent hash keys (first line is the number of keys)
5
4 80
46 20
47 10
58 20
97 20
## kleene state fluent hash keys (first line is the number of keys)
5
36299584 36225440
46 45
47 15
58 45
97 45

## index
7

## state fluent hash keys (first line is the number of keys)
5
46 40
47 20
48 20
59 10
98 10
## kleene state fluent hash keys (first line is the number of keys)
5
37077040 37133056
47 45
48 45
59 15
98 15

## index
8

## state fluent hash keys (first line is the number of keys)
5
5 80
47 40
48 40
60 20
99 20
## kleene state fluent hash keys (first line is the number of keys)
5
37095712 36318016
47 135
48 135
60 45
99 45

## index
9

## state fluent hash keys (first line is the number of keys)
5
6 80
43 160
49 40
50 20
52 20
## kleene state fluent hash keys (first line is the number of keys)
5
36225440 36355088
43 1215
49 135
50 45
52 45

## index
10

## state fluent hash keys (first line is the number of keys)
5
44 160
49 80
50 40
51 40
53 10
## kleene state fluent hash keys (first line is the number of keys)
5
44 1215
49 405
50 135
51 135
53 15

## index
11

## state fluent hash keys (first line is the number of keys)
5
7 80
45 160
50 80
51 80
54 20
## kleene state fluent hash keys (first line is the number of keys)
5
36318016 36373520
45 1215
50 405
51 405
54 45

## index
12

## state fluent hash keys (first line is the number of keys)
5
8 80
49 160
52 40
53 20
55 20
## kleene state fluent hash keys (first line is the number of keys)
5
36355088 36392176
49 1215
52 135
53 45
55 45

## index
13

## state fluent hash keys (first line is the number of keys)
5
50 160
52 80
53 40
54 40
56 10
## kleene state fluent hash keys (first line is the number of keys)
5
36373520 36410608
52 405
53 135
54 135
56 15

## index
14

## state fluent hash keys (first line is the number of keys)
5
9 80
51 160
53 80
54 80
57 20
## kleene state fluent hash keys (first line is the number of keys)
5
36392176 36484240
51 1215
53 405
54 405
57 45

## index
15

## state fluent hash keys (first line is the number of keys)
5
10 80
52 160
55 40
56 20
61 20
## kleene state fluent hash keys (first line is the number of keys)
5
36410608 36484432
52 1215
55 135
56 45
61 45

## index
16

## state fluent hash keys (first line is the number of keys)
5
53 160
55 80
56 40
57 40
62 10
## kleene state fluent hash keys (first line is the number of keys)
5
36484240 36653120
55 405
56 135
57 135
62 15

## index
17

## state fluent hash keys (first line is the number of keys)
5
11 80
54 160
56 80
57 80
63 20
## kleene state fluent hash keys (first line is the number of keys)
5
36690288 36065392
54 1215
56 405
57 405
63 45

## index
18

## state fluent hash keys (first line is the number of keys)
5
12 80
46 80
58 40
59 20
70 20
## kleene state fluent hash keys (first line is the number of keys)
5
36484432 36653360
46 405
58 135
59 45
70 45

## index
19

## state fluent hash keys (first line is the number of keys)
5
47 80
58 80
59 40
60 40
71 10
## kleene state fluent hash keys (first line is the number of keys)
5
36653120 36690288
58 405
59 135
60 135
71 15

## index
20

## state fluent hash keys (first line is the number of keys)
5
13 80
48 80
59 80
60 80
72 20
## kleene state fluent hash keys (first line is the number of keys)
5
36653360 36521360
48 405
59 405
60 405
72 45

## index
21

## state fluent hash keys (first line is the number of keys)
5
14 80
55 160
61 40
62 20
64 20
## kleene state fluent hash keys (first line is the number of keys)
5
14 405
55 1215
61 135
62 45
64 45

## index
22

## state fluent hash keys (first line is the number of keys)
5
56 160
61 80
62 40
63 40
65 10
## kleene state fluent hash keys (first line is the number of keys)
5
36521360 36597632
61 405
62 135
63 135
65 15

## index
23

## state fluent hash keys (first line is the number of keys)
5
15 80
57 160
62 80
63 80
66 20
## kleene state fluent hash keys (first line is the number of keys)
5
15 405
57 1215
62 405
63 405
66 45

## index
24

## state fluent hash keys (first line is the number of keys)
5
16 80
61 160
64 40
65 20
67 20
## kleene state fluent hash keys (first line is the number of keys)
5
36065392 36616160
61 1215
64 135
65 45
67 45

## index
25

## state fluent hash keys (first line is the number of keys)
5
62 160
64 80
65 40
66 40
68 10
## kleene state fluent hash keys (first line is the number of keys)
5
36597632 36634544
64 405
65 135
66 135
68 15

## index
26

## state fluent hash keys (first line is the number of keys)
5
17 80
63 160
65 80
66 80
69 20
## kleene state fluent hash keys (first line is the number of keys)
5
36616160 36708816
63 1215
65 405
66 405
69 45

## index
27

## state fluent hash keys (first line is the number of keys)
5
18 80
64 160
67 40
68 20
73 20
## kleene state fluent hash keys (first line is the number of keys)
5
36634544 36709008
64 1215
67 135
68 45
73 45

## index
28

## state fluent hash keys (first line is the number of keys)
5
65 160
67 80
68 40
69 40
74 10
## kleene state fluent hash keys (first line is the number of keys)
5
36708816 36745984
67 405
68 135
69 135
74 15

## index
29

## state fluent hash keys (first line is the number of keys)
5
19 80
66 160
68 80
69 80
75 20
## kleene state fluent hash keys (first line is the number of keys)
5
36709008 36152048
66 1215
68 405
69 405
75 45

## index
30

## state fluent hash keys (first line is the number of keys)
5
20 80
58 160
70 40
71 20
82 20
## kleene state fluent hash keys (first line is the number of keys)
5
36745984 36844112
58 1215
70 135
71 45
82 45

## index
31

## state fluent hash keys (first line is the number of keys)
5
59 160
70 80
71 40
72 40
83 10
## kleene state fluent hash keys (first line is the number of keys)
5
59 1215
70 405
71 135
72 135
83 15

## index
32

## state fluent hash keys (first line is the number of keys)
5
21 80
60 160
71 80
72 80
84 20
## kleene state fluent hash keys (first line is the number of keys)
5
36844112 36764416
60 1215
71 405
72 405
84 45

## index
33

## state fluent hash keys (first line is the number of keys)
5
22 80
67 160
73 40
74 20
76 20
## kleene state fluent hash keys (first line is the number of keys)
5
36880992 36782880
67 1215
73 135
74 45
76 45

## index
34

## state fluent hash keys (first line is the number of keys)
5
68 160
73 80
74 40
75 40
77 10
## kleene state fluent hash keys (first line is the number of keys)
5
36764416 36801408
73 405
74 135
75 135
77 15

## index
35

## state fluent hash keys (first line is the number of keys)
5
23 80
69 160
74 80
75 80
78 20
## kleene state fluent hash keys (first line is the number of keys)
5
36782880 36820560
69 1215
74 405
75 405
78 45

## index
36

## state fluent hash keys (first line is the number of keys)
5
24 80
73 160
76 40
77 20
79 20
## kleene state fluent hash keys (first line is the number of keys)
5
24 405
73 1215
76 135
77 45
79 45

## index
37

## state fluent hash keys (first line is the number of keys)
5
74 160
76 80
77 40
78 40
80 10
## kleene state fluent hash keys (first line is the number of keys)
5
36801408 36825312
76 405
77 135
78 135
80 15

## index
38

## state fluent hash keys (first line is the number of keys)
5
25 40
75 160
77 80
78 80
81 10
## kleene state fluent hash keys (first line is the number of keys)
5
25 135
75 1215
77 405
78 405
81 15

## index
39

## state fluent hash keys (first line is the number of keys)
4
26 40
76 160
79 40
80 20
## kleene state fluent hash keys (first line is the number of keys)
4
36077952 135
76 1215
79 135
80 45

## index
40

## state fluent hash keys (first line is the number of keys)
4
77 160
79 80
80 40
81 20
## kleene state fluent hash keys (first line is the number of keys)
4
36133520 1215
79 405
80 135
81 45

## index
41

## state fluent hash keys (first line is the number of keys)
4
27 20
78 160
80 80
81 40
## kleene state fluent hash keys (first line is the number of keys)
4
36151968 45
78 1215
80 405
81 135

## index
42

## state fluent hash keys (first line is the number of keys)
5
28 80
70 160
82 40
83 20
85 20
## kleene state fluent hash keys (first line is the number of keys)
5
36825312 36918048
70 1215
82 135
83 45
85 45

## index
43

## state fluent hash keys (first line is the number of keys)
5
71 160
82 80
83 40
84 40
86 10
## kleene state fluent hash keys (first line is the number of keys)
5
36899520 36983664
82 405
83 135
84 135
86 15

## index
44

## state fluent hash keys (first line is the number of keys)
5
29 80
72 160
83 80
84 80
87 20
## kleene state fluent hash keys (first line is the number of keys)
5
29 405
72 1215
83 405
84 405
87 45

## index
45

## state fluent hash keys (first line is the number of keys)
5
30 80
82 160
85 40
86 20
91 20
## kleene state fluent hash keys (first line is the number of keys)
5
36918048 37002272
82 1215
85 135
86 45
91 45

## index
46

## state fluent hash keys (first line is the number of keys)
5
83 160
85 80
86 40
87 40
92 10
## kleene state fluent hash keys (first line is the number of keys)
5
36983664 37020736
85 405
86 135
87 135
92 15

## index
47

## state fluent hash keys (first line is the number of keys)
5
31 80
84 160
86 80
87 80
93 20
## kleene state fluent hash keys (first line is the number of keys)
5
37002272 37039264
84 1215
86 405
87 405
93 45

## index
48

## state fluent hash keys (first line is the number of keys)
4
32 40
88 20
89 10
97 40
## kleene state fluent hash keys (first line is the number of keys)
4
36429184 135
88 45
89 15
97 135

## index
49

## state fluent hash keys (first line is the number of keys)
4
88 40
89 20
90 20
98 20
## kleene state fluent hash keys (first line is the number of keys)
4
0 135
89 45
90 45
98 45

## index
50

## state fluent hash keys (first line is the number of keys)
4
33 40
89 40
90 40
99 40
## kleene state fluent hash keys (first line is the number of keys)
4
36946112 135
89 135
90 135
99 135

## index
51

## state fluent hash keys (first line is the number of keys)
5
34 80
85 160
91 40
92 20
94 40
## kleene state fluent hash keys (first line is the number of keys)
5
37020736 37057936
85 1215
91 135
92 45
94 135

## index
52

## state fluent hash keys (first line is the number of keys)
5
86 160
91 80
92 40
93 40
95 20
## kleene state fluent hash keys (first line is the number of keys)
5
86 1215
91 405
92 135
93 135
95 45

## index
53

## state fluent hash keys (first line is the number of keys)
5
35 80
87 160
92 80
93 80
96 40
## kleene state fluent hash keys (first line is the number of keys)
5
37057936 37114240
87 1215
92 405
93 405
96 135

## index
54

## state fluent hash keys (first line is the number of keys)
5
36 80
40 160
91 160
94 80
95 40
## kleene state fluent hash keys (first line is the number of keys)
5
36 405
40 1215
91 1215
94 405
95 135

## index
55

## state fluent hash keys (first line is the number of keys)
5
41 160
92 160
94 160
95 80
96 80
## kleene state fluent hash keys (first line is the number of keys)
5
41 1215
92 1215
94 1215
95 405
96 405

## index
56

## state fluent hash keys (first line is the number of keys)
5
37 80
42 160
93 160
95 160
96 160
## kleene state fluent hash keys (first line is the number of keys)
5
37 405
42 1215
93 1215
95 1215
96 1215

## index
57

## state fluent hash keys (first line is the number of keys)
5
38 80
46 160
88 80
97 80
98 40
## kleene state fluent hash keys (first line is the number of keys)
5
38 405
46 1215
88 405
97 405
98 135

## index
58

## state fluent hash keys (first line is the number of keys)
5
47 160
89 80
97 160
98 80
99 80
## kleene state fluent hash keys (first line is the number of keys)
5
37114240 139867249679224
89 405
97 1215
98 405
99 405

## index
59

## state fluent hash keys (first line is the number of keys)
5
39 80
48 160
90 80
98 160
99 160
## kleene state fluent hash keys (first line is the number of keys)
5
39 405
48 1215
90 405
98 1215
99 1215

