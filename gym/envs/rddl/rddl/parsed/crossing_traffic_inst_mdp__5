#####TASK##### Here
## name
crossing_traffic_inst_mdp__5
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
37
## number of prob state fluents
3
## number of preconds
0
## number of actions
5
## number of hashing functions
41
## initial state
1 0 1 1 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
obstacle-at(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
$s(3)
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
1
## name
obstacle-at(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
$s(4)
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
2
## name
obstacle-at(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
$s(5)
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
3
## name
obstacle-at(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
$s(6)
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
4
## name
obstacle-at(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
$s(7)
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
5
## name
obstacle-at(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
$s(8)
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
6
## name
obstacle-at(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
$s(9)
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
7
## name
obstacle-at(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
$s(10)
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
8
## name
obstacle-at(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
$s(11)
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
9
## name
obstacle-at(x4, y2)
## number of values
2
## values
0 false
1 true
## formula
$s(37)
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
10
## name
obstacle-at(x4, y3)
## number of values
2
## values
0 false
1 true
## formula
$s(38)
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
11
## name
obstacle-at(x4, y4)
## number of values
2
## values
0 false
1 true
## formula
$s(39)
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
12
## name
robot-at(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(12)) : $c(0)) (and($a(2) $s(13) ~($s(0))) : $c(1)) (and($a(0) $s(12)) : $c(0)) (and($a(3) $s(17)) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(12)) : $c(1)) (and($a(1) $s(13)) : $c(0)) (and($a(2) $s(14) ~($s(1))) : $c(1)) (and($a(2) $s(13)) : $c(0)) (and($a(0) $s(13)) : $c(0)) (and($a(3) $s(18) ~($s(3))) : $c(1)) ($c(1) : and($s(13) ~($s(0)))) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(13) ~($s(0))) : $c(1)) (and($a(1) $s(14)) : $c(0)) (and($a(2) $s(15) ~($s(2))) : $c(1)) (and($a(2) $s(14)) : $c(0)) (and($a(0) $s(14)) : $c(0)) (and($a(3) $s(19) ~($s(4))) : $c(1)) ($c(1) : and($s(14) ~($s(1)))) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(14) ~($s(1))) : $c(1)) (and($a(1) $s(15)) : $c(0)) (and($a(2) $s(16)) : $c(1)) (and($a(2) $s(15)) : $c(0)) (and($a(0) $s(15)) : $c(0)) (and($a(3) $s(20) ~($s(5))) : $c(1)) ($c(1) : and($s(15) ~($s(2)))) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x1, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(15) ~($s(2))) : $c(1)) (and($a(2) $s(16)) : $c(0)) (and($a(0) $s(16)) : $c(0)) (and($a(3) $s(21)) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(17)) : $c(0)) (and($a(2) $s(18) ~($s(3))) : $c(1)) (and($a(0) $s(12)) : $c(1)) (and($a(0) $s(17)) : $c(0)) (and($a(3) $s(22)) : $c(1)) (and($a(3) $s(17)) : $c(0)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(17)) : $c(1)) (and($a(1) $s(18)) : $c(0)) (and($a(2) $s(19) ~($s(4))) : $c(1)) (and($a(2) $s(18)) : $c(0)) (and($a(0) $s(13) ~($s(0))) : $c(1)) (and($a(0) $s(18)) : $c(0)) (and($a(3) $s(23) ~($s(6))) : $c(1)) (and($a(3) $s(18)) : $c(0)) ($c(1) : and($s(18) ~($s(3)))) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(18) ~($s(3))) : $c(1)) (and($a(1) $s(19)) : $c(0)) (and($a(2) $s(20) ~($s(5))) : $c(1)) (and($a(2) $s(19)) : $c(0)) (and($a(0) $s(14) ~($s(1))) : $c(1)) (and($a(0) $s(19)) : $c(0)) (and($a(3) $s(24) ~($s(7))) : $c(1)) (and($a(3) $s(19)) : $c(0)) ($c(1) : and($s(19) ~($s(4)))) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(19) ~($s(4))) : $c(1)) (and($a(1) $s(20)) : $c(0)) (and($a(2) $s(21)) : $c(1)) (and($a(2) $s(20)) : $c(0)) (and($a(0) $s(15) ~($s(2))) : $c(1)) (and($a(0) $s(20)) : $c(0)) (and($a(3) $s(25) ~($s(8))) : $c(1)) (and($a(3) $s(20)) : $c(0)) ($c(1) : and($s(20) ~($s(5)))) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x2, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(20) ~($s(5))) : $c(1)) (and($a(2) $s(21)) : $c(0)) (and($a(0) $s(16)) : $c(1)) (and($a(0) $s(21)) : $c(0)) (and($a(3) $s(26)) : $c(1)) (and($a(3) $s(21)) : $c(0)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(22)) : $c(0)) (and($a(2) $s(23) ~($s(6))) : $c(1)) (and($a(0) $s(17)) : $c(1)) (and($a(0) $s(22)) : $c(0)) (and($a(3) $s(27)) : $c(1)) (and($a(3) $s(22)) : $c(0)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(22)) : $c(1)) (and($a(1) $s(23)) : $c(0)) (and($a(2) $s(24) ~($s(7))) : $c(1)) (and($a(2) $s(23)) : $c(0)) (and($a(0) $s(18) ~($s(3))) : $c(1)) (and($a(0) $s(23)) : $c(0)) (and($a(3) $s(28) ~($s(9))) : $c(1)) (and($a(3) $s(23)) : $c(0)) ($c(1) : and($s(23) ~($s(6)))) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(23) ~($s(6))) : $c(1)) (and($a(1) $s(24)) : $c(0)) (and($a(2) $s(25) ~($s(8))) : $c(1)) (and($a(2) $s(24)) : $c(0)) (and($a(0) $s(19) ~($s(4))) : $c(1)) (and($a(0) $s(24)) : $c(0)) (and($a(3) $s(29) ~($s(10))) : $c(1)) (and($a(3) $s(24)) : $c(0)) ($c(1) : and($s(24) ~($s(7)))) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(24) ~($s(7))) : $c(1)) (and($a(1) $s(25)) : $c(0)) (and($a(2) $s(26)) : $c(1)) (and($a(2) $s(25)) : $c(0)) (and($a(0) $s(20) ~($s(5))) : $c(1)) (and($a(0) $s(25)) : $c(0)) (and($a(3) $s(30) ~($s(11))) : $c(1)) (and($a(3) $s(25)) : $c(0)) ($c(1) : and($s(25) ~($s(8)))) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x3, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(25) ~($s(8))) : $c(1)) (and($a(2) $s(26)) : $c(0)) (and($a(0) $s(21)) : $c(1)) (and($a(0) $s(26)) : $c(0)) (and($a(3) $s(31)) : $c(1)) (and($a(3) $s(26)) : $c(0)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x4, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(27)) : $c(0)) (and($a(2) $s(28) ~($s(9))) : $c(1)) (and($a(0) $s(22)) : $c(1)) (and($a(0) $s(27)) : $c(0)) (and($a(3) $s(32)) : $c(1)) (and($a(3) $s(27)) : $c(0)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x4, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(27)) : $c(1)) (and($a(1) $s(28)) : $c(0)) (and($a(2) $s(29) ~($s(10))) : $c(1)) (and($a(2) $s(28)) : $c(0)) (and($a(0) $s(23) ~($s(6))) : $c(1)) (and($a(0) $s(28)) : $c(0)) (and($a(3) $s(33) ~($s(37))) : $c(1)) (and($a(3) $s(28)) : $c(0)) ($c(1) : and($s(28) ~($s(9)))) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x4, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(28) ~($s(9))) : $c(1)) (and($a(1) $s(29)) : $c(0)) (and($a(2) $s(30) ~($s(11))) : $c(1)) (and($a(2) $s(29)) : $c(0)) (and($a(0) $s(24) ~($s(7))) : $c(1)) (and($a(0) $s(29)) : $c(0)) (and($a(3) $s(34) ~($s(38))) : $c(1)) (and($a(3) $s(29)) : $c(0)) ($c(1) : and($s(29) ~($s(10)))) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x4, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(29) ~($s(10))) : $c(1)) (and($a(1) $s(30)) : $c(0)) (and($a(2) $s(31)) : $c(1)) (and($a(2) $s(30)) : $c(0)) (and($a(0) $s(25) ~($s(8))) : $c(1)) (and($a(0) $s(30)) : $c(0)) (and($a(3) $s(35) ~($s(39))) : $c(1)) (and($a(3) $s(30)) : $c(0)) ($c(1) : and($s(30) ~($s(11)))) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x4, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(30) ~($s(11))) : $c(1)) (and($a(2) $s(31)) : $c(0)) (and($a(0) $s(26)) : $c(1)) (and($a(0) $s(31)) : $c(0)) (and($a(3) $s(36)) : $c(1)) (and($a(3) $s(31)) : $c(0)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x5, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(32)) : $c(0)) (and($a(2) $s(33) ~($s(37))) : $c(1)) (and($a(0) $s(27)) : $c(1)) (and($a(3) $s(32)) : $c(0)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x5, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(32)) : $c(1)) (and($a(1) $s(33)) : $c(0)) (and($a(2) $s(34) ~($s(38))) : $c(1)) (and($a(2) $s(33)) : $c(0)) (and($a(0) $s(28) ~($s(9))) : $c(1)) (and($a(3) $s(33)) : $c(0)) ($c(1) : and($s(33) ~($s(37)))) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x5, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(33) ~($s(37))) : $c(1)) (and($a(1) $s(34)) : $c(0)) (and($a(2) $s(35) ~($s(39))) : $c(1)) (and($a(2) $s(34)) : $c(0)) (and($a(0) $s(29) ~($s(10))) : $c(1)) (and($a(3) $s(34)) : $c(0)) ($c(1) : and($s(34) ~($s(38)))) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x5, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(0)) (and($a(1) $s(34) ~($s(38))) : $c(1)) (and($a(1) $s(35)) : $c(0)) (and($a(2) $s(36)) : $c(1)) (and($a(2) $s(35)) : $c(0)) (and($a(0) $s(30) ~($s(11))) : $c(1)) (and($a(3) $s(35)) : $c(0)) ($c(1) : and($s(35) ~($s(39)))) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x5, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(36) : $c(1)) ($s(36) : $c(0)) (and($a(1) $s(35) ~($s(39))) : $c(1)) (and($a(2) $s(36)) : $c(0)) (and($a(0) $s(31)) : $c(1)) (and($a(3) $s(36)) : $c(0)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
obstacle-at(x5, y2)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
1
## name
obstacle-at(x5, y3)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
2
## name
obstacle-at(x5, y4)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0



#####REWARD#####
## formula
-($c(0) ~($s(36)))
## min
-1
## max
0
## independent from actions
1
## hash index
40
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
4
12 5
13 5
14 5
18 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
4
13 10
14 10
15 5
19 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
4
14 20
15 10
16 5
20 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
6
0 1
13 20
17 5
18 10
19 10
23 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
6
1 1
14 40
18 20
19 20
20 10
24 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
6
2 1
15 20
19 40
20 20
21 5
25 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
6
3 1
18 40
22 5
23 10
24 10
28 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
6
4 1
19 80
23 20
24 20
25 10
29 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
6
5 1
20 40
24 40
25 20
26 5
30 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
6
6 1
23 40
27 5
28 10
29 10
33 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
6
7 1
24 80
28 20
29 20
30 10
34 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
6
8 1
25 40
29 40
30 20
31 5
35 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
3
12 10
13 40
17 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
4
12 20
13 80
14 80
18 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
4
13 160
14 160
15 40
19 160
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
4
14 320
15 80
16 10
20 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
3
15 160
16 20
21 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
4
12 40
17 20
18 160
22 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
5
13 320
17 40
18 320
19 320
23 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
5
14 640
18 640
19 640
20 160
24 160
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
5
15 320
19 1280
20 320
21 20
25 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
4
16 40
20 640
21 40
26 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
4
17 80
22 20
23 160
27 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
5
18 1280
22 40
23 320
24 320
28 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
5
19 2560
23 640
24 640
25 160
29 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
5
20 1280
24 1280
25 320
26 20
30 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
4
21 80
25 640
26 40
31 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
4
22 80
27 20
28 80
32 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
5
23 1280
27 40
28 160
29 160
33 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
5
24 2560
28 320
29 320
30 80
34 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
5
25 1280
29 640
30 160
31 20
35 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
4
26 80
30 320
31 40
36 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
3
27 80
32 10
33 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
4
28 640
32 20
33 40
34 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
4
29 1280
33 80
34 40
35 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
4
30 640
34 80
35 40
36 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
26
12 80
13 640
14 1280
15 640
16 80
17 160
18 2560
19 5120
20 2560
21 160
22 160
23 2560
24 5120
25 2560
26 160
27 160
28 1280
29 2560
30 1280
31 80
32 40
33 160
34 160
35 80
36 20
40 1
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
5
9 1
28 2560
32 80
33 320
34 320
## kleene state fluent hash keys (first line is the number of keys)
5
28357200 28523888
28 98415
32 405
33 3645
34 3645

## index
1
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
5
10 1
29 5120
33 640
34 640
35 160
## kleene state fluent hash keys (first line is the number of keys)
5
10 1
29 295245
33 10935
34 10935
35 1215

## index
2
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
5
11 1
30 2560
34 1280
35 320
36 40
## kleene state fluent hash keys (first line is the number of keys)
5
28523888 140341299157880
30 98415
34 32805
35 3645
36 135

