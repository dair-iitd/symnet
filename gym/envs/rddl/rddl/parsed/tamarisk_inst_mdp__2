#####TASK##### Here
## name
tamarisk_inst_mdp__2
## horizon
40
## discount factor
1
## number of action fluents
8
## number of det state fluents
0
## number of prob state fluents
24
## number of preconds
0
## number of actions
9
## number of hashing functions
25
## initial state
0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 0 0 0 0 1 0 1 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
eradicate(r1)
## number of values
2
## values
0 false
1 true

## index
1
## name
eradicate(r2)
## number of values
2
## values
0 false
1 true

## index
2
## name
eradicate(r3)
## number of values
2
## values
0 false
1 true

## index
3
## name
eradicate(r4)
## number of values
2
## values
0 false
1 true

## index
4
## name
restore(r1)
## number of values
2
## values
0 false
1 true

## index
5
## name
restore(r2)
## number of values
2
## values
0 false
1 true

## index
6
## name
restore(r3)
## number of values
2
## values
0 false
1 true

## index
7
## name
restore(r4)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
native-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(12) $s(0)) : Bernoulli($c(0.2))) (and(~($s(12)) $s(0) $a(4)) : $c(1)) (and(~($s(12)) ~($s(0)) $a(4)) : Bernoulli($c(0.9))) ($s(0) : Bernoulli($c(0.95))) (and(~($s(12)) ~($s(0))) : Bernoulli($c(0.1))) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0

## index
1
## name
native-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(13) $s(1)) : Bernoulli($c(0.2))) (and(~($s(13)) $s(1) $a(4)) : $c(1)) (and(~($s(13)) ~($s(1)) $a(4)) : Bernoulli($c(0.9))) ($s(1) : Bernoulli($c(0.95))) (and(~($s(13)) ~($s(1))) : Bernoulli($c(0.1))) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0

## index
2
## name
native-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(14) $s(2)) : Bernoulli($c(0.2))) (and(~($s(14)) $s(2) $a(4)) : $c(1)) (and(~($s(14)) ~($s(2)) $a(4)) : Bernoulli($c(0.9))) ($s(2) : Bernoulli($c(0.95))) (and(~($s(14)) ~($s(2))) : Bernoulli($c(0.1))) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0

## index
3
## name
native-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(15) $s(3)) : Bernoulli($c(0.2))) (and(~($s(15)) $s(3) $a(5)) : $c(1)) (and(~($s(15)) ~($s(3)) $a(5)) : Bernoulli($c(0.9))) ($s(3) : Bernoulli($c(0.95))) (and(~($s(15)) ~($s(3))) : Bernoulli($c(0.1))) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0

## index
4
## name
native-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) $s(4)) : Bernoulli($c(0.2))) (and(~($s(16)) $s(4) $a(5)) : $c(1)) (and(~($s(16)) ~($s(4)) $a(5)) : Bernoulli($c(0.9))) ($s(4) : Bernoulli($c(0.95))) (and(~($s(16)) ~($s(4))) : Bernoulli($c(0.1))) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0

## index
5
## name
native-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) $s(5)) : Bernoulli($c(0.2))) (and(~($s(17)) $s(5) $a(5)) : $c(1)) (and(~($s(17)) ~($s(5)) $a(5)) : Bernoulli($c(0.9))) ($s(5) : Bernoulli($c(0.95))) (and(~($s(17)) ~($s(5))) : Bernoulli($c(0.1))) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0

## index
6
## name
native-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(6)) : Bernoulli($c(0.2))) (and(~($s(18)) $s(6) $a(6)) : $c(1)) (and(~($s(18)) ~($s(6)) $a(6)) : Bernoulli($c(0.9))) ($s(6) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(6))) : Bernoulli($c(0.1))) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0

## index
7
## name
native-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(7)) : Bernoulli($c(0.2))) (and(~($s(19)) $s(7) $a(6)) : $c(1)) (and(~($s(19)) ~($s(7)) $a(6)) : Bernoulli($c(0.9))) ($s(7) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(7))) : Bernoulli($c(0.1))) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0

## index
8
## name
native-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(8)) : Bernoulli($c(0.2))) (and(~($s(20)) $s(8) $a(6)) : $c(1)) (and(~($s(20)) ~($s(8)) $a(6)) : Bernoulli($c(0.9))) ($s(8) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(8))) : Bernoulli($c(0.1))) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0

## index
9
## name
native-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(9)) : Bernoulli($c(0.2))) (and(~($s(21)) $s(9) $a(7)) : $c(1)) (and(~($s(21)) ~($s(9)) $a(7)) : Bernoulli($c(0.9))) ($s(9) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(9))) : Bernoulli($c(0.1))) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
10
## name
native-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(10)) : Bernoulli($c(0.2))) (and(~($s(22)) $s(10) $a(7)) : $c(1)) (and(~($s(22)) ~($s(10)) $a(7)) : Bernoulli($c(0.9))) ($s(10) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(10))) : Bernoulli($c(0.1))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
11
## name
native-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(11)) : Bernoulli($c(0.2))) (and(~($s(23)) $s(11) $a(7)) : $c(1)) (and(~($s(23)) ~($s(11)) $a(7)) : Bernoulli($c(0.9))) ($s(11) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(11))) : Bernoulli($c(0.1))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
12
## name
tamarisk-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(12) $s(0)) : Bernoulli($c(0.8))) (and(~($s(12)) $a(0)) : $c(0)) (and($s(12) $a(0)) : Bernoulli($c(0.1))) ($s(12) : Bernoulli($c(0.95))) (and(~($s(12)) ~($s(0))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1

## index
13
## name
tamarisk-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(13) $s(1)) : Bernoulli($c(0.8))) (and(~($s(13)) $a(0)) : $c(0)) (and($s(13) $a(0)) : Bernoulli($c(0.1))) ($s(13) : Bernoulli($c(0.95))) (and(~($s(13)) ~($s(1))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1

## index
14
## name
tamarisk-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(14) $s(2)) : Bernoulli($c(0.8))) (and(~($s(14)) $a(0)) : $c(0)) (and($s(14) $a(0)) : Bernoulli($c(0.1))) ($s(14) : Bernoulli($c(0.95))) (and(~($s(14)) ~($s(2))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1

## index
15
## name
tamarisk-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(15) $s(3)) : Bernoulli($c(0.8))) (and(~($s(15)) $a(1)) : $c(0)) (and($s(15) $a(1)) : Bernoulli($c(0.1))) ($s(15) : Bernoulli($c(0.95))) (and(~($s(15)) ~($s(3))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0

## index
16
## name
tamarisk-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) $s(4)) : Bernoulli($c(0.8))) (and(~($s(16)) $a(1)) : $c(0)) (and($s(16) $a(1)) : Bernoulli($c(0.1))) ($s(16) : Bernoulli($c(0.95))) (and(~($s(16)) ~($s(4))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0

## index
17
## name
tamarisk-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) $s(5)) : Bernoulli($c(0.8))) (and(~($s(17)) $a(1)) : $c(0)) (and($s(17) $a(1)) : Bernoulli($c(0.1))) ($s(17) : Bernoulli($c(0.95))) (and(~($s(17)) ~($s(5))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0

## index
18
## name
tamarisk-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(6)) : Bernoulli($c(0.8))) (and(~($s(18)) $a(2)) : $c(0)) (and($s(18) $a(2)) : Bernoulli($c(0.1))) ($s(18) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(6))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
19
## name
tamarisk-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(7)) : Bernoulli($c(0.8))) (and(~($s(19)) $a(2)) : $c(0)) (and($s(19) $a(2)) : Bernoulli($c(0.1))) ($s(19) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(7))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
20
## name
tamarisk-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(8)) : Bernoulli($c(0.8))) (and(~($s(20)) $a(2)) : $c(0)) (and($s(20) $a(2)) : Bernoulli($c(0.1))) ($s(20) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(8))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
21
## name
tamarisk-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(9)) : Bernoulli($c(0.8))) (and(~($s(21)) $a(3)) : $c(0)) (and($s(21) $a(3)) : Bernoulli($c(0.1))) ($s(21) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(9))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
22
## name
tamarisk-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(10)) : Bernoulli($c(0.8))) (and(~($s(22)) $a(3)) : $c(0)) (and($s(22) $a(3)) : Bernoulli($c(0.1))) ($s(22) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(10))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
23
## name
tamarisk-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(11)) : Bernoulli($c(0.8))) (and(~($s(23)) $a(3)) : $c(0)) (and($s(23) $a(3)) : Bernoulli($c(0.1))) ($s(23) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(11))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0



#####REWARD#####
## formula
+(*(or($s(12) $s(13) $s(14)) $c(-5)) *(or($s(15) $s(16) $s(17)) $c(-5)) *(or($s(18) $s(19) $s(20)) $c(-5)) *(or($s(21) $s(22) $s(23)) $c(-5)) *($s(12) $c(-0.5)) *($s(13) $c(-0.5)) *($s(14) $c(-0.5)) *($s(15) $c(-0.5)) *($s(16) $c(-0.5)) *($s(17) $c(-0.5)) *($s(18) $c(-0.5)) *($s(19) $c(-0.5)) *($s(20) $c(-0.5)) *($s(21) $c(-0.5)) *($s(22) $c(-0.5)) *($s(23) $c(-0.5)) *(and(~($s(12)) ~($s(0))) $c(-0.25)) *(and(~($s(13)) ~($s(1))) $c(-0.25)) *(and(~($s(14)) ~($s(2))) $c(-0.25)) *(and(~($s(15)) ~($s(3))) $c(-0.25)) *(and(~($s(16)) ~($s(4))) $c(-0.25)) *(and(~($s(17)) ~($s(5))) $c(-0.25)) *(and(~($s(18)) ~($s(6))) $c(-0.25)) *(and(~($s(19)) ~($s(7))) $c(-0.25)) *(and(~($s(20)) ~($s(8))) $c(-0.25)) *(and(~($s(21)) ~($s(9))) $c(-0.25)) *(and(~($s(22)) ~($s(10))) $c(-0.25)) *(and(~($s(23)) ~($s(11))) $c(-0.25)) *($a(0) $c(-0.49)) *($a(1) $c(-0.49)) *($a(2) $c(-0.49)) *($a(3) $c(-0.49)) *($a(4) $c(-0.9)) *($a(5) $c(-0.9)) *($a(6) $c(-0.9)) *($a(7) $c(-0.9)) *(and($a(4) ~($s(12)) ~($s(0))) $c(-0.4)) *(and($a(4) ~($s(13)) ~($s(1))) $c(-0.4)) *(and($a(4) ~($s(14)) ~($s(2))) $c(-0.4)) *(and($a(5) ~($s(15)) ~($s(3))) $c(-0.4)) *(and($a(5) ~($s(16)) ~($s(4))) $c(-0.4)) *(and($a(5) ~($s(17)) ~($s(5))) $c(-0.4)) *(and($a(6) ~($s(18)) ~($s(6))) $c(-0.4)) *(and($a(6) ~($s(19)) ~($s(7))) $c(-0.4)) *(and($a(6) ~($s(20)) ~($s(8))) $c(-0.4)) *(and($a(7) ~($s(21)) ~($s(9))) $c(-0.4)) *(and($a(7) ~($s(22)) ~($s(10))) $c(-0.4)) *(and($a(7) ~($s(23)) ~($s(11))) $c(-0.4)))
## min
-31.1
## max
-0
## independent from actions
0
## hash index
24
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
1 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
12 2
24 9
## kleene state fluent hash keys (first line is the number of keys)
3
0 2
12 2
24 9

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
1 2
13 2
24 18
## kleene state fluent hash keys (first line is the number of keys)
3
13736704 2
13 2
24 27

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
2 2
14 2
24 36
## kleene state fluent hash keys (first line is the number of keys)
3
13736784 2
14 2
24 81

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
3 2
15 2
24 72
## kleene state fluent hash keys (first line is the number of keys)
3
13736864 2
15 2
24 243

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 2
16 2
24 144
## kleene state fluent hash keys (first line is the number of keys)
3
13735840 2
16 2
24 729

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
5 2
17 2
24 288
## kleene state fluent hash keys (first line is the number of keys)
3
13735920 2
17 2
24 2187

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 2
18 2
24 576
## kleene state fluent hash keys (first line is the number of keys)
3
13736000 2
18 2
24 6561

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
7 2
19 2
24 1152
## kleene state fluent hash keys (first line is the number of keys)
3
13736080 2
19 2
24 19683

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 2
20 2
24 2304
## kleene state fluent hash keys (first line is the number of keys)
3
13736160 2
20 2
24 59049

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 2
21 2
24 4608
## kleene state fluent hash keys (first line is the number of keys)
3
13736240 2
21 2
24 177147

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
10 2
22 2
24 9216
## kleene state fluent hash keys (first line is the number of keys)
3
13736320 2
22 2
24 531441

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
11 2
23 2
24 18432
## kleene state fluent hash keys (first line is the number of keys)
3
13738192 2
23 2
24 1594323

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
0 4
12 4
13 4
14 4
15 4
16 4
17 4
24 36864
## kleene state fluent hash keys (first line is the number of keys)
8
2093636472 12966016
12 6
13 6
14 6
15 6
16 6
17 6
24 4782969

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
1 4
12 8
13 8
14 8
15 8
16 8
17 8
24 73728
## kleene state fluent hash keys (first line is the number of keys)
8
12996976 13458880
12 18
13 18
14 18
15 18
16 18
17 18
24 14348907

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
2 4
12 16
13 16
14 16
15 16
16 16
17 16
24 147456
## kleene state fluent hash keys (first line is the number of keys)
8
2 6
12 54
13 54
14 54
15 54
16 54
17 54
24 43046721

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
3 4
12 32
13 32
14 32
15 32
16 32
17 32
18 4
19 4
20 4
24 294912
## kleene state fluent hash keys (first line is the number of keys)
11
3 6
12 162
13 162
14 162
15 162
16 162
17 162
18 6
19 6
20 6
24 129140163

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
4 4
12 64
13 64
14 64
15 64
16 64
17 64
18 8
19 8
20 8
24 589824
## kleene state fluent hash keys (first line is the number of keys)
11
4 6
12 486
13 486
14 486
15 486
16 486
17 486
18 18
19 18
20 18
24 387420489

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
5 4
12 128
13 128
14 128
15 128
16 128
17 128
18 16
19 16
20 16
24 1179648
## kleene state fluent hash keys (first line is the number of keys)
11
5 6
12 1458
13 1458
14 1458
15 1458
16 1458
17 1458
18 54
19 54
20 54
24 1162261467

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
6 4
15 256
16 256
17 256
18 32
19 32
20 32
21 4
22 4
23 4
24 2359296
## kleene state fluent hash keys (first line is the number of keys)
11
6 6
15 4374
16 4374
17 4374
18 162
19 162
20 162
21 6
22 6
23 6
24 3486784401

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
7 4
15 512
16 512
17 512
18 64
19 64
20 64
21 8
22 8
23 8
24 4718592
## kleene state fluent hash keys (first line is the number of keys)
11
13343312 13705072
15 13122
16 13122
17 13122
18 486
19 486
20 486
21 18
22 18
23 18
24 10460353203

## index
20
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
8 4
15 1024
16 1024
17 1024
18 128
19 128
20 128
21 16
22 16
23 16
24 9437184
## kleene state fluent hash keys (first line is the number of keys)
11
8 6
15 39366
16 39366
17 39366
18 1458
19 1458
20 1458
21 54
22 54
23 54
24 31381059609

## index
21
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
9 4
18 256
19 256
20 256
21 32
22 32
23 32
24 18874368
## kleene state fluent hash keys (first line is the number of keys)
8
13720688 139773214350200
18 4374
19 4374
20 4374
21 162
22 162
23 162
24 94143178827

## index
22
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
10 4
18 512
19 512
20 512
21 64
22 64
23 64
24 37748736
## kleene state fluent hash keys (first line is the number of keys)
8
10 6
18 13122
19 13122
20 13122
21 486
22 486
23 486
24 282429536481

## index
23
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
11 4
18 1024
19 1024
20 1024
21 128
22 128
23 128
24 75497472
## kleene state fluent hash keys (first line is the number of keys)
8
11 6
18 39366
19 39366
20 39366
21 1458
22 1458
23 1458
24 847288609443

