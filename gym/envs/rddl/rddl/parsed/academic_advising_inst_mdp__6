#####TASK##### Here
## name
academic_advising_inst_mdp__6
## horizon
40
## discount factor
1
## number of action fluents
20
## number of det state fluents
20
## number of prob state fluents
20
## number of preconds
0
## number of actions
211
## number of hashing functions
41
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
takeCourse(CS11)
## number of values
2
## values
0 false
1 true

## index
1
## name
takeCourse(CS12)
## number of values
2
## values
0 false
1 true

## index
2
## name
takeCourse(CS13)
## number of values
2
## values
0 false
1 true

## index
3
## name
takeCourse(CS14)
## number of values
2
## values
0 false
1 true

## index
4
## name
takeCourse(CS21)
## number of values
2
## values
0 false
1 true

## index
5
## name
takeCourse(CS22)
## number of values
2
## values
0 false
1 true

## index
6
## name
takeCourse(CS23)
## number of values
2
## values
0 false
1 true

## index
7
## name
takeCourse(CS24)
## number of values
2
## values
0 false
1 true

## index
8
## name
takeCourse(CS31)
## number of values
2
## values
0 false
1 true

## index
9
## name
takeCourse(CS32)
## number of values
2
## values
0 false
1 true

## index
10
## name
takeCourse(CS33)
## number of values
2
## values
0 false
1 true

## index
11
## name
takeCourse(CS34)
## number of values
2
## values
0 false
1 true

## index
12
## name
takeCourse(CS41)
## number of values
2
## values
0 false
1 true

## index
13
## name
takeCourse(CS42)
## number of values
2
## values
0 false
1 true

## index
14
## name
takeCourse(CS43)
## number of values
2
## values
0 false
1 true

## index
15
## name
takeCourse(CS44)
## number of values
2
## values
0 false
1 true

## index
16
## name
takeCourse(CS51)
## number of values
2
## values
0 false
1 true

## index
17
## name
takeCourse(CS52)
## number of values
2
## values
0 false
1 true

## index
18
## name
takeCourse(CS53)
## number of values
2
## values
0 false
1 true

## index
19
## name
takeCourse(CS54)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
taken(CS11)
## number of values
2
## values
0 false
1 true
## formula
or($s(0) $a(0))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 1
193 1
194 1
195 1
196 1
197 1
198 1
199 1
200 1
201 1
202 1
203 1
204 1
205 1
206 1
207 1
208 1
209 1
210 1

## index
1
## name
taken(CS12)
## number of values
2
## values
0 false
1 true
## formula
or($s(1) $a(1))
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 1
175 1
176 1
177 1
178 1
179 1
180 1
181 1
182 1
183 1
184 1
185 1
186 1
187 1
188 1
189 1
190 1
191 1
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 1

## index
2
## name
taken(CS13)
## number of values
2
## values
0 false
1 true
## formula
or($s(2) $a(2))
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 1
158 1
159 1
160 1
161 1
162 1
163 1
164 1
165 1
166 1
167 1
168 1
169 1
170 1
171 1
172 1
173 1
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 1
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 1
210 0

## index
3
## name
taken(CS14)
## number of values
2
## values
0 false
1 true
## formula
or($s(3) $a(3))
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 1
143 1
144 1
145 1
146 1
147 1
148 1
149 1
150 1
151 1
152 1
153 1
154 1
155 1
156 1
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 1
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 1
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 1
209 0
210 0

## index
4
## name
taken(CS21)
## number of values
2
## values
0 false
1 true
## formula
or($s(4) $a(4))
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 1
127 1
128 1
129 1
130 1
131 1
132 1
133 1
134 1
135 1
136 1
137 1
138 1
139 1
140 1
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 1
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 1
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 1
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 1
208 0
209 0
210 0

## index
5
## name
taken(CS22)
## number of values
2
## values
0 false
1 true
## formula
or($s(5) $a(5))
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 1
113 1
114 1
115 1
116 1
117 1
118 1
119 1
120 1
121 1
122 1
123 1
124 1
125 1
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 1
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 1
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 1
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 1
207 0
208 0
209 0
210 0

## index
6
## name
taken(CS23)
## number of values
2
## values
0 false
1 true
## formula
or($s(6) $a(6))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 1
100 1
101 1
102 1
103 1
104 1
105 1
106 1
107 1
108 1
109 1
110 1
111 1
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 1
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 1
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 1
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 1
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 1
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 1
206 0
207 0
208 0
209 0
210 0

## index
7
## name
taken(CS24)
## number of values
2
## values
0 false
1 true
## formula
or($s(7) $a(7))
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 1
88 1
89 1
90 1
91 1
92 1
93 1
94 1
95 1
96 1
97 1
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 1
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 1
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 1
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 1
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 1
205 0
206 0
207 0
208 0
209 0
210 0

## index
8
## name
taken(CS31)
## number of values
2
## values
0 false
1 true
## formula
or($s(8) $a(8))
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 1
77 1
78 1
79 1
80 1
81 1
82 1
83 1
84 1
85 1
86 1
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 1
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 1
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 1
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 1
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
9
## name
taken(CS32)
## number of values
2
## values
0 false
1 true
## formula
or($s(9) $a(9))
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 1
67 1
68 1
69 1
70 1
71 1
72 1
73 1
74 1
75 1
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 1
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 1
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 1
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 1
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 1
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 1
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
10
## name
taken(CS33)
## number of values
2
## values
0 false
1 true
## formula
or($s(10) $a(10))
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 1
58 1
59 1
60 1
61 1
62 1
63 1
64 1
65 1
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 1
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 1
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 1
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 1
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 1
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 1
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 1
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 1
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
11
## name
taken(CS34)
## number of values
2
## values
0 false
1 true
## formula
or($s(11) $a(11))
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 1
51 1
52 1
53 1
54 1
55 1
56 1
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 1
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 1
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 1
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 1
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 1
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 1
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 1
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 1
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 1
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
12
## name
taken(CS41)
## number of values
2
## values
0 false
1 true
## formula
or($s(12) $a(12))
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 1
44 1
45 1
46 1
47 1
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 1
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 1
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 1
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 1
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 1
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 1
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 1
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 1
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
13
## name
taken(CS42)
## number of values
2
## values
0 false
1 true
## formula
or($s(13) $a(13))
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 1
37 1
38 1
39 1
40 1
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 1
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 1
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 1
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 1
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 1
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 1
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
14
## name
taken(CS43)
## number of values
2
## values
0 false
1 true
## formula
or($s(14) $a(14))
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 1
33 1
34 1
35 1
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 1
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 1
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 1
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 1
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 1
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 1
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
15
## name
taken(CS44)
## number of values
2
## values
0 false
1 true
## formula
or($s(15) $a(15))
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 1
29 1
30 1
31 0
32 0
33 0
34 0
35 1
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 0
50 0
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 1
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 1
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 1
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 1
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 1
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 1
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
16
## name
taken(CS51)
## number of values
2
## values
0 false
1 true
## formula
or($s(16) $a(16))
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 1
26 1
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 1
40 0
41 0
42 0
43 0
44 0
45 1
46 0
47 0
48 0
49 0
50 0
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 1
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 1
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 1
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 1
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 1
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 1
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 1
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 1
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
17
## name
taken(CS52)
## number of values
2
## values
0 false
1 true
## formula
or($s(17) $a(17))
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 1
24 0
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 1
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 1
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 1
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 1
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 1
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 1
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 1
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 1
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
18
## name
taken(CS53)
## number of values
2
## values
0 false
1 true
## formula
or($s(18) $a(18))
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 1
24 0
25 1
26 0
27 0
28 1
29 0
30 0
31 0
32 1
33 0
34 0
35 0
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 1
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 1
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 1
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 1
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 1
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 1
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
19
## name
taken(CS54)
## number of values
2
## values
0 false
1 true
## formula
or($s(19) $a(19))
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 1
23 0
24 1
25 0
26 0
27 1
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 1
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 1
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 1
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 1
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 1
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 1
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 1
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 1
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
passed(CS11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(0) ~($s(20))) : Bernoulli($c(0.8))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 1
193 1
194 1
195 1
196 1
197 1
198 1
199 1
200 1
201 1
202 1
203 1
204 1
205 1
206 1
207 1
208 1
209 1
210 1

## index
1
## name
passed(CS12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(1) ~($s(21))) : Bernoulli($c(0.8))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 1
175 1
176 1
177 1
178 1
179 1
180 1
181 1
182 1
183 1
184 1
185 1
186 1
187 1
188 1
189 1
190 1
191 1
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 1

## index
2
## name
passed(CS13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(2) ~($s(22))) : Bernoulli($c(0.8))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 1
158 1
159 1
160 1
161 1
162 1
163 1
164 1
165 1
166 1
167 1
168 1
169 1
170 1
171 1
172 1
173 1
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 1
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 1
210 0

## index
3
## name
passed(CS14)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(3) ~($s(23))) : Bernoulli($c(0.8))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 1
143 1
144 1
145 1
146 1
147 1
148 1
149 1
150 1
151 1
152 1
153 1
154 1
155 1
156 1
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 1
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 1
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 1
209 0
210 0

## index
4
## name
passed(CS21)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(4) ~($s(24))) : Bernoulli(+(*(/(+($s(20) $s(21)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 1
127 1
128 1
129 1
130 1
131 1
132 1
133 1
134 1
135 1
136 1
137 1
138 1
139 1
140 1
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 1
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 1
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 1
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 1
208 0
209 0
210 0

## index
5
## name
passed(CS22)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(5) ~($s(25))) : Bernoulli(+(*(/(+($s(22) $s(23) $s(24)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 1
113 1
114 1
115 1
116 1
117 1
118 1
119 1
120 1
121 1
122 1
123 1
124 1
125 1
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 1
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 1
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 1
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 1
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 1
207 0
208 0
209 0
210 0

## index
6
## name
passed(CS23)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(6) ~($s(26))) : Bernoulli(+(*(/(+($s(20) $s(22) $s(24) $s(25)) $c(5)) $c(0.8)) $c(0.2)))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 1
100 1
101 1
102 1
103 1
104 1
105 1
106 1
107 1
108 1
109 1
110 1
111 1
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 1
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 1
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 1
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 1
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 1
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 1
206 0
207 0
208 0
209 0
210 0

## index
7
## name
passed(CS24)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(7) ~($s(27))) : Bernoulli(+(*(/(+($s(22) $s(23) $s(24)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 1
88 1
89 1
90 1
91 1
92 1
93 1
94 1
95 1
96 1
97 1
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 1
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 1
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 1
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 1
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 1
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 1
205 0
206 0
207 0
208 0
209 0
210 0

## index
8
## name
passed(CS31)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(8) ~($s(28))) : Bernoulli(+(*(/(+($s(26) $s(27)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 1
77 1
78 1
79 1
80 1
81 1
82 1
83 1
84 1
85 1
86 1
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 1
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 1
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 1
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 1
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 1
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 1
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
9
## name
passed(CS32)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(9) ~($s(29))) : Bernoulli(+(*(/(+($s(25) $s(27) $s(28)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 1
67 1
68 1
69 1
70 1
71 1
72 1
73 1
74 1
75 1
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 1
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 1
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 1
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 1
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 1
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 1
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 1
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
10
## name
passed(CS33)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(10) ~($s(30))) : Bernoulli(+(*(/(+($s(20) $s(27)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 1
58 1
59 1
60 1
61 1
62 1
63 1
64 1
65 1
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 1
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 1
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 1
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 1
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 1
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 1
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 1
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 1
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 1
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 1
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
11
## name
passed(CS34)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(11) ~($s(31))) : Bernoulli(+(*(/(+($s(23) $s(28) $s(29)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 1
51 1
52 1
53 1
54 1
55 1
56 1
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 1
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 1
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 1
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 1
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 1
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 1
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 1
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 1
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 1
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 1
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
12
## name
passed(CS41)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(12) ~($s(32))) : Bernoulli(+(*(/(+($s(20) $s(29)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 1
44 1
45 1
46 1
47 1
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 1
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 1
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 1
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 0
133 1
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 0
148 1
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 0
164 1
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 0
181 1
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 0
199 1
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
13
## name
passed(CS42)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(13) ~($s(33))) : Bernoulli(+(*(/(+($s(20) $s(22) $s(27)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 1
37 1
38 1
39 1
40 1
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 1
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 1
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 1
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 0
132 1
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 0
147 1
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 0
163 1
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 0
180 1
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 0
198 1
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
14
## name
passed(CS43)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(14) ~($s(34))) : Bernoulli(+(*(/(+($s(20) $s(22) $s(24) $s(29)) $c(5)) $c(0.8)) $c(0.2)))) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 1
33 1
34 1
35 1
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 1
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 1
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 1
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 0
131 1
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 0
146 1
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 0
162 1
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 0
179 1
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 0
197 1
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
15
## name
passed(CS44)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(15) ~($s(35))) : Bernoulli(+(*(/(+($s(30) $s(31)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 1
29 1
30 1
31 0
32 0
33 0
34 0
35 1
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 0
50 0
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 1
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 1
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 0
130 1
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 0
145 1
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 0
161 1
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 0
178 1
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 0
196 1
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
16
## name
passed(CS51)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(16) ~($s(36))) : Bernoulli(+(*(/(+($s(24) $s(31)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 1
26 1
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 1
40 0
41 0
42 0
43 0
44 0
45 1
46 0
47 0
48 0
49 0
50 0
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 1
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 1
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 1
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 0
129 1
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 0
144 1
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 0
160 1
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 0
177 1
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 0
195 1
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
17
## name
passed(CS52)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(17) ~($s(37))) : Bernoulli(+(*(/(+($s(21) $s(27) $s(29)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 1
24 0
25 0
26 1
27 0
28 0
29 1
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 1
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 1
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 1
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 1
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 0
128 1
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 0
143 1
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 0
159 1
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 0
176 1
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 0
194 1
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
18
## name
passed(CS53)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(18) ~($s(38))) : Bernoulli(+(*(/(+($s(24) $s(27)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 1
24 0
25 1
26 0
27 0
28 1
29 0
30 0
31 0
32 1
33 0
34 0
35 0
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 1
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 1
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 0
127 1
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 0
142 1
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 0
158 1
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 0
175 1
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 0
193 1
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0

## index
19
## name
passed(CS54)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(19) ~($s(39))) : Bernoulli(+(*(/(+($s(28) $s(32) $s(38)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 1
23 0
24 1
25 0
26 0
27 1
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 1
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 1
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 1
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 1
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0
121 0
122 0
123 0
124 0
125 0
126 1
127 0
128 0
129 0
130 0
131 0
132 0
133 0
134 0
135 0
136 0
137 0
138 0
139 0
140 0
141 1
142 0
143 0
144 0
145 0
146 0
147 0
148 0
149 0
150 0
151 0
152 0
153 0
154 0
155 0
156 0
157 1
158 0
159 0
160 0
161 0
162 0
163 0
164 0
165 0
166 0
167 0
168 0
169 0
170 0
171 0
172 0
173 0
174 1
175 0
176 0
177 0
178 0
179 0
180 0
181 0
182 0
183 0
184 0
185 0
186 0
187 0
188 0
189 0
190 0
191 0
192 1
193 0
194 0
195 0
196 0
197 0
198 0
199 0
200 0
201 0
202 0
203 0
204 0
205 0
206 0
207 0
208 0
209 0
210 0



#####REWARD#####
## formula
+(*(and($a(0) ~($s(0))) $c(-1)) *(and($a(1) ~($s(1))) $c(-1)) *(and($a(2) ~($s(2))) $c(-1)) *(and($a(3) ~($s(3))) $c(-1)) *(and($a(4) ~($s(4))) $c(-1)) *(and($a(5) ~($s(5))) $c(-1)) *(and($a(6) ~($s(6))) $c(-1)) *(and($a(7) ~($s(7))) $c(-1)) *(and($a(8) ~($s(8))) $c(-1)) *(and($a(9) ~($s(9))) $c(-1)) *(and($a(10) ~($s(10))) $c(-1)) *(and($a(11) ~($s(11))) $c(-1)) *(and($a(12) ~($s(12))) $c(-1)) *(and($a(13) ~($s(13))) $c(-1)) *(and($a(14) ~($s(14))) $c(-1)) *(and($a(15) ~($s(15))) $c(-1)) *(and($a(16) ~($s(16))) $c(-1)) *(and($a(17) ~($s(17))) $c(-1)) *(and($a(18) ~($s(18))) $c(-1)) *(and($a(19) ~($s(19))) $c(-1)) *(and($a(0) $s(0)) $c(-2)) *(and($a(1) $s(1)) $c(-2)) *(and($a(2) $s(2)) $c(-2)) *(and($a(3) $s(3)) $c(-2)) *(and($a(4) $s(4)) $c(-2)) *(and($a(5) $s(5)) $c(-2)) *(and($a(6) $s(6)) $c(-2)) *(and($a(7) $s(7)) $c(-2)) *(and($a(8) $s(8)) $c(-2)) *(and($a(9) $s(9)) $c(-2)) *(and($a(10) $s(10)) $c(-2)) *(and($a(11) $s(11)) $c(-2)) *(and($a(12) $s(12)) $c(-2)) *(and($a(13) $s(13)) $c(-2)) *(and($a(14) $s(14)) $c(-2)) *(and($a(15) $s(15)) $c(-2)) *(and($a(16) $s(16)) $c(-2)) *(and($a(17) $s(17)) $c(-2)) *(and($a(18) $s(18)) $c(-2)) *(and($a(19) $s(19)) $c(-2)) *(~(and($s(20) $s(24) $s(25) $s(26) $s(27) $s(28) $s(29) $s(30) $s(35) $s(38))) $c(-5)))
## min
-11
## max
-0
## independent from actions
0
## hash index
40
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20
21 21
22 22
23 23
24 24
25 25
26 26
27 27
28 28
29 29
30 30
31 31
32 32
33 33
34 34
35 35
36 36
37 37
38 38
39 39
40 40
41 41
42 42
43 43
44 44
45 45
46 46
47 47
48 48
49 49
50 50
51 51
52 52
53 53
54 54
55 55
56 56
57 57
58 58
59 59
60 60
61 61
62 62
63 63
64 64
65 65
66 66
67 67
68 68
69 69
70 70
71 71
72 72
73 73
74 74
75 75
76 76
77 77
78 78
79 79
80 80
81 81
82 82
83 83
84 84
85 85
86 86
87 87
88 88
89 89
90 90
91 91
92 92
93 93
94 94
95 95
96 96
97 97
98 98
99 99
100 100
101 101
102 102
103 103
104 104
105 105
106 106
107 107
108 108
109 109
110 110
111 111
112 112
113 113
114 114
115 115
116 116
117 117
118 118
119 119
120 120
121 121
122 122
123 123
124 124
125 125
126 126
127 127
128 128
129 129
130 130
131 131
132 132
133 133
134 134
135 135
136 136
137 137
138 138
139 139
140 140
141 141
142 142
143 143
144 144
145 145
146 146
147 147
148 148
149 149
150 150
151 151
152 152
153 153
154 154
155 155
156 156
157 157
158 158
159 159
160 160
161 161
162 162
163 163
164 164
165 165
166 166
167 167
168 168
169 169
170 170
171 171
172 172
173 173
174 174
175 175
176 176
177 177
178 178
179 179
180 180
181 181
182 182
183 183
184 184
185 185
186 186
187 187
188 188
189 189
190 190
191 191
192 192
193 193
194 194
195 195
196 196
197 197
198 198
199 199
200 200
201 201
202 202
203 203
204 204
205 205
206 206
207 207
208 208
209 209
210 210


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 
## relevant preconditions
0


## index
28
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 
## relevant preconditions
0


## index
29
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 
## relevant preconditions
0


## index
30
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
## relevant preconditions
0


## index
31
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 
## relevant preconditions
0


## index
32
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 
## relevant preconditions
0


## index
33
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 
## relevant preconditions
0


## index
34
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 
## relevant preconditions
0


## index
35
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 
## relevant preconditions
0


## index
36
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 
## relevant preconditions
0


## index
37
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
## relevant preconditions
0


## index
38
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 
## relevant preconditions
0


## index
39
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 
## relevant preconditions
0


## index
40
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
## relevant preconditions
0


## index
41
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 
## relevant preconditions
0


## index
42
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
43
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
44
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
45
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
46
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
47
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
48
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
49
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
50
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
51
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
52
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
53
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
54
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
55
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
56
## state
0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
57
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
58
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
59
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
60
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
61
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
62
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
63
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
64
## state
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
65
## state
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
66
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
67
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
68
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
69
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
70
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
71
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
72
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
73
## state
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
74
## state
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
75
## state
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
76
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
77
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
78
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
79
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
80
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
81
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
82
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
83
## state
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
84
## state
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
85
## state
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
86
## state
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
87
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
88
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
89
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
90
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
91
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
92
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
93
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
94
## state
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
95
## state
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
96
## state
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
97
## state
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
98
## state
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
99
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
100
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
101
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
102
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
103
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
104
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
105
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
106
## state
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
107
## state
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
108
## state
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
109
## state
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
110
## state
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
111
## state
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
112
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
113
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
114
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
115
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
116
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
117
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
118
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
119
## state
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
120
## state
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
121
## state
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
122
## state
0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
123
## state
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
124
## state
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
125
## state
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
126
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
127
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
128
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
129
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
130
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
131
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
132
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
133
## state
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
134
## state
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
135
## state
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
136
## state
0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
137
## state
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
138
## state
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
139
## state
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
140
## state
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
141
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
142
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
143
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
144
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
145
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
146
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
147
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
148
## state
0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
149
## state
0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
150
## state
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
151
## state
0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
152
## state
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
153
## state
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
154
## state
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
155
## state
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
156
## state
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
157
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
158
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
159
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
160
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
161
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
162
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
163
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
164
## state
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
165
## state
0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
166
## state
0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
167
## state
0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
168
## state
0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
169
## state
0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
170
## state
0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
171
## state
0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
172
## state
0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
173
## state
0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
174
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
175
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
176
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
177
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
178
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
179
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
180
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
181
## state
0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
182
## state
0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
183
## state
0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
184
## state
0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
185
## state
0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
186
## state
0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
187
## state
0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
188
## state
0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
189
## state
0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
190
## state
0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
191
## state
0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
192
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
193
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
194
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
195
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
196
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
197
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
198
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
199
## state
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
200
## state
1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
201
## state
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
202
## state
1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
203
## state
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
204
## state
1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
205
## state
1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
206
## state
1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
207
## state
1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
208
## state
1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
209
## state
1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
210
## state
1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
2
0 2
40 211
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
2
1 2
40 422
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
2
2 2
40 844
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
2
3 2
40 1688
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
2
4 2
40 3376
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
2
5 2
40 6752
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
2
6 2
40 13504
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
2
7 2
40 27008
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
2
8 2
40 54016
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
2
9 2
40 108032
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
2
10 2
40 216064
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
2
11 2
40 432128
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
2
12 2
40 864256
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
2
13 2
40 1728512
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
2
14 2
40 3457024
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
2
15 2
40 6914048
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
2
16 2
40 13828096
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
2
17 2
40 27656192
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
2
18 2
40 55312384
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
2
19 2
40 110624768
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
8
20 2
24 2
26 2
30 2
32 2
33 2
34 2
40 221249536
## kleene state fluent hash keys (first line is the number of keys)
8
87309176 14091936
24 2
26 2
30 2
32 2
33 2
34 2
40 735711508611

## index
1
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
3
21 2
24 4
37 2
## kleene state fluent hash keys (first line is the number of keys)
3
0 2
24 6
37 2

## index
2
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
6
22 2
25 2
26 4
27 2
33 4
34 4
## kleene state fluent hash keys (first line is the number of keys)
6
14091936 14113168
25 2
26 6
27 2
33 6
34 6

## index
3
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
4
23 2
25 4
27 4
31 2
## kleene state fluent hash keys (first line is the number of keys)
4
14101408 2
25 6
27 6
31 2

## index
4
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
8
24 8
25 8
26 8
27 8
34 8
36 2
38 2
40 442499072
## kleene state fluent hash keys (first line is the number of keys)
8
14081952 14085904
25 18
26 18
27 18
34 18
36 2
38 2
40 2207134525833

## index
5
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
4
25 16
26 16
29 2
40 884998144
## kleene state fluent hash keys (first line is the number of keys)
4
14065424 54
26 54
29 2
40 6621403577499

## index
6
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
3
26 32
28 2
40 1769996288
## kleene state fluent hash keys (first line is the number of keys)
3
14072240 162
28 2
40 19864210732497

## index
7
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
8
27 16
28 4
29 4
30 4
33 8
37 4
38 4
40 3539992576
## kleene state fluent hash keys (first line is the number of keys)
8
27 54
28 6
29 6
30 6
33 18
37 6
38 6
40 59592632197491

## index
8
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
5
28 8
29 8
31 4
39 2
40 7079985152
## kleene state fluent hash keys (first line is the number of keys)
5
14085904 14101488
29 18
31 6
39 2
40 178777896592473

## index
9
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
6
29 16
31 8
32 4
34 16
37 8
40 14159970304
## kleene state fluent hash keys (first line is the number of keys)
6
14113168 140664561220472
31 18
32 6
34 54
37 18
40 536333689777419

## index
10
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
3
30 8
35 2
40 28319940608
## kleene state fluent hash keys (first line is the number of keys)
3
14110416 18
35 2
40 1609001069332257

## index
11
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
3
31 16
35 4
36 4
## kleene state fluent hash keys (first line is the number of keys)
3
14078928 54
35 6
36 6

## index
12
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
2
32 8
39 4
## kleene state fluent hash keys (first line is the number of keys)
2
14113120 18
39 6

## index
13
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
1
33 16
## kleene state fluent hash keys (first line is the number of keys)
1
0 54

## index
14
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
1
34 32
## kleene state fluent hash keys (first line is the number of keys)
1
14002272 162

## index
15
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
2
35 8
40 56639881216
## kleene state fluent hash keys (first line is the number of keys)
2
14096448 18
40 4827003207996771

## index
16
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
1
36 8
## kleene state fluent hash keys (first line is the number of keys)
1
14002720 18

## index
17
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
1
37 16
## kleene state fluent hash keys (first line is the number of keys)
1
14061792 54

## index
18
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
3
38 8
39 8
40 113279762432
## kleene state fluent hash keys (first line is the number of keys)
3
14097664 18
39 18
40 14481009623990313

## index
19
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
1
39 16
## kleene state fluent hash keys (first line is the number of keys)
1
14050576 54

