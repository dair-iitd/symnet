#####TASK##### Here
## name
tamarisk_inst_mdp__6
## horizon
40
## discount factor
1
## number of action fluents
12
## number of det state fluents
0
## number of prob state fluents
36
## number of preconds
0
## number of actions
13
## number of hashing functions
37
## initial state
0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 0 1 1 0 0 1 0 1 0 0 1 1 1 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
eradicate(r1)
## number of values
2
## values
0 false
1 true

## index
1
## name
eradicate(r2)
## number of values
2
## values
0 false
1 true

## index
2
## name
eradicate(r3)
## number of values
2
## values
0 false
1 true

## index
3
## name
eradicate(r4)
## number of values
2
## values
0 false
1 true

## index
4
## name
eradicate(r5)
## number of values
2
## values
0 false
1 true

## index
5
## name
eradicate(r6)
## number of values
2
## values
0 false
1 true

## index
6
## name
restore(r1)
## number of values
2
## values
0 false
1 true

## index
7
## name
restore(r2)
## number of values
2
## values
0 false
1 true

## index
8
## name
restore(r3)
## number of values
2
## values
0 false
1 true

## index
9
## name
restore(r4)
## number of values
2
## values
0 false
1 true

## index
10
## name
restore(r5)
## number of values
2
## values
0 false
1 true

## index
11
## name
restore(r6)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
native-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(0)) : Bernoulli($c(0.2))) (and(~($s(18)) $s(0) $a(6)) : $c(1)) (and(~($s(18)) ~($s(0)) $a(6)) : Bernoulli($c(0.9))) ($s(0) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(0))) : Bernoulli($c(0.1))) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0

## index
1
## name
native-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(1)) : Bernoulli($c(0.2))) (and(~($s(19)) $s(1) $a(6)) : $c(1)) (and(~($s(19)) ~($s(1)) $a(6)) : Bernoulli($c(0.9))) ($s(1) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(1))) : Bernoulli($c(0.1))) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0

## index
2
## name
native-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(2)) : Bernoulli($c(0.2))) (and(~($s(20)) $s(2) $a(6)) : $c(1)) (and(~($s(20)) ~($s(2)) $a(6)) : Bernoulli($c(0.9))) ($s(2) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(2))) : Bernoulli($c(0.1))) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0

## index
3
## name
native-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(3)) : Bernoulli($c(0.2))) (and(~($s(21)) $s(3) $a(7)) : $c(1)) (and(~($s(21)) ~($s(3)) $a(7)) : Bernoulli($c(0.9))) ($s(3) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(3))) : Bernoulli($c(0.1))) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
4
## name
native-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(4)) : Bernoulli($c(0.2))) (and(~($s(22)) $s(4) $a(7)) : $c(1)) (and(~($s(22)) ~($s(4)) $a(7)) : Bernoulli($c(0.9))) ($s(4) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(4))) : Bernoulli($c(0.1))) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
5
## name
native-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(5)) : Bernoulli($c(0.2))) (and(~($s(23)) $s(5) $a(7)) : $c(1)) (and(~($s(23)) ~($s(5)) $a(7)) : Bernoulli($c(0.9))) ($s(5) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(5))) : Bernoulli($c(0.1))) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
6
## name
native-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(6)) : Bernoulli($c(0.2))) (and(~($s(24)) $s(6) $a(8)) : $c(1)) (and(~($s(24)) ~($s(6)) $a(8)) : Bernoulli($c(0.9))) ($s(6) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(6))) : Bernoulli($c(0.1))) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
7
## name
native-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(7)) : Bernoulli($c(0.2))) (and(~($s(25)) $s(7) $a(8)) : $c(1)) (and(~($s(25)) ~($s(7)) $a(8)) : Bernoulli($c(0.9))) ($s(7) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(7))) : Bernoulli($c(0.1))) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
8
## name
native-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(8)) : Bernoulli($c(0.2))) (and(~($s(26)) $s(8) $a(8)) : $c(1)) (and(~($s(26)) ~($s(8)) $a(8)) : Bernoulli($c(0.9))) ($s(8) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(8))) : Bernoulli($c(0.1))) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
9
## name
native-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(9)) : Bernoulli($c(0.2))) (and(~($s(27)) $s(9) $a(9)) : $c(1)) (and(~($s(27)) ~($s(9)) $a(9)) : Bernoulli($c(0.9))) ($s(9) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(9))) : Bernoulli($c(0.1))) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
10
## name
native-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(10)) : Bernoulli($c(0.2))) (and(~($s(28)) $s(10) $a(9)) : $c(1)) (and(~($s(28)) ~($s(10)) $a(9)) : Bernoulli($c(0.9))) ($s(10) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(10))) : Bernoulli($c(0.1))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
11
## name
native-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(11)) : Bernoulli($c(0.2))) (and(~($s(29)) $s(11) $a(9)) : $c(1)) (and(~($s(29)) ~($s(11)) $a(9)) : Bernoulli($c(0.9))) ($s(11) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(11))) : Bernoulli($c(0.1))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
12
## name
native-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(12)) : Bernoulli($c(0.2))) (and(~($s(30)) $s(12) $a(10)) : $c(1)) (and(~($s(30)) ~($s(12)) $a(10)) : Bernoulli($c(0.9))) ($s(12) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(12))) : Bernoulli($c(0.1))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
13
## name
native-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(13)) : Bernoulli($c(0.2))) (and(~($s(31)) $s(13) $a(10)) : $c(1)) (and(~($s(31)) ~($s(13)) $a(10)) : Bernoulli($c(0.9))) ($s(13) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(13))) : Bernoulli($c(0.1))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
14
## name
native-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(14)) : Bernoulli($c(0.2))) (and(~($s(32)) $s(14) $a(10)) : $c(1)) (and(~($s(32)) ~($s(14)) $a(10)) : Bernoulli($c(0.9))) ($s(14) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(14))) : Bernoulli($c(0.1))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
15
## name
native-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(15)) : Bernoulli($c(0.2))) (and(~($s(33)) $s(15) $a(11)) : $c(1)) (and(~($s(33)) ~($s(15)) $a(11)) : Bernoulli($c(0.9))) ($s(15) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(15))) : Bernoulli($c(0.1))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
16
## name
native-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(16)) : Bernoulli($c(0.2))) (and(~($s(34)) $s(16) $a(11)) : $c(1)) (and(~($s(34)) ~($s(16)) $a(11)) : Bernoulli($c(0.9))) ($s(16) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(16))) : Bernoulli($c(0.1))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
17
## name
native-at(s6s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(17)) : Bernoulli($c(0.2))) (and(~($s(35)) $s(17) $a(11)) : $c(1)) (and(~($s(35)) ~($s(17)) $a(11)) : Bernoulli($c(0.9))) ($s(17) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(17))) : Bernoulli($c(0.1))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0

## index
18
## name
tamarisk-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(0)) : Bernoulli($c(0.8))) (and(~($s(18)) $a(0)) : $c(0)) (and($s(18) $a(0)) : Bernoulli($c(0.1))) ($s(18) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(0))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1

## index
19
## name
tamarisk-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(1)) : Bernoulli($c(0.8))) (and(~($s(19)) $a(0)) : $c(0)) (and($s(19) $a(0)) : Bernoulli($c(0.1))) ($s(19) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(1))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1

## index
20
## name
tamarisk-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(2)) : Bernoulli($c(0.8))) (and(~($s(20)) $a(0)) : $c(0)) (and($s(20) $a(0)) : Bernoulli($c(0.1))) ($s(20) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(2))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1

## index
21
## name
tamarisk-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(3)) : Bernoulli($c(0.8))) (and(~($s(21)) $a(1)) : $c(0)) (and($s(21) $a(1)) : Bernoulli($c(0.1))) ($s(21) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(3))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0

## index
22
## name
tamarisk-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(4)) : Bernoulli($c(0.8))) (and(~($s(22)) $a(1)) : $c(0)) (and($s(22) $a(1)) : Bernoulli($c(0.1))) ($s(22) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(4))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0

## index
23
## name
tamarisk-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(5)) : Bernoulli($c(0.8))) (and(~($s(23)) $a(1)) : $c(0)) (and($s(23) $a(1)) : Bernoulli($c(0.1))) ($s(23) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(5))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0

## index
24
## name
tamarisk-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(6)) : Bernoulli($c(0.8))) (and(~($s(24)) $a(2)) : $c(0)) (and($s(24) $a(2)) : Bernoulli($c(0.1))) ($s(24) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(6))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0

## index
25
## name
tamarisk-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(7)) : Bernoulli($c(0.8))) (and(~($s(25)) $a(2)) : $c(0)) (and($s(25) $a(2)) : Bernoulli($c(0.1))) ($s(25) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(7))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0

## index
26
## name
tamarisk-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(8)) : Bernoulli($c(0.8))) (and(~($s(26)) $a(2)) : $c(0)) (and($s(26) $a(2)) : Bernoulli($c(0.1))) ($s(26) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(8))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0

## index
27
## name
tamarisk-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(9)) : Bernoulli($c(0.8))) (and(~($s(27)) $a(3)) : $c(0)) (and($s(27) $a(3)) : Bernoulli($c(0.1))) ($s(27) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(9))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0

## index
28
## name
tamarisk-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(10)) : Bernoulli($c(0.8))) (and(~($s(28)) $a(3)) : $c(0)) (and($s(28) $a(3)) : Bernoulli($c(0.1))) ($s(28) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(10))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0

## index
29
## name
tamarisk-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(11)) : Bernoulli($c(0.8))) (and(~($s(29)) $a(3)) : $c(0)) (and($s(29) $a(3)) : Bernoulli($c(0.1))) ($s(29) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(11))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0

## index
30
## name
tamarisk-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(12)) : Bernoulli($c(0.8))) (and(~($s(30)) $a(4)) : $c(0)) (and($s(30) $a(4)) : Bernoulli($c(0.1))) ($s(30) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(12))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0

## index
31
## name
tamarisk-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(13)) : Bernoulli($c(0.8))) (and(~($s(31)) $a(4)) : $c(0)) (and($s(31) $a(4)) : Bernoulli($c(0.1))) ($s(31) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(13))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0

## index
32
## name
tamarisk-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(14)) : Bernoulli($c(0.8))) (and(~($s(32)) $a(4)) : $c(0)) (and($s(32) $a(4)) : Bernoulli($c(0.1))) ($s(32) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(14))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0

## index
33
## name
tamarisk-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(15)) : Bernoulli($c(0.8))) (and(~($s(33)) $a(5)) : $c(0)) (and($s(33) $a(5)) : Bernoulli($c(0.1))) ($s(33) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(15))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0

## index
34
## name
tamarisk-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(16)) : Bernoulli($c(0.8))) (and(~($s(34)) $a(5)) : $c(0)) (and($s(34) $a(5)) : Bernoulli($c(0.1))) ($s(34) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(16))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0

## index
35
## name
tamarisk-at(s6s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(17)) : Bernoulli($c(0.8))) (and(~($s(35)) $a(5)) : $c(0)) (and($s(35) $a(5)) : Bernoulli($c(0.1))) ($s(35) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(17))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0



#####REWARD#####
## formula
+(*(or($s(18) $s(19) $s(20)) $c(-5)) *(or($s(21) $s(22) $s(23)) $c(-5)) *(or($s(24) $s(25) $s(26)) $c(-5)) *(or($s(27) $s(28) $s(29)) $c(-5)) *(or($s(30) $s(31) $s(32)) $c(-5)) *(or($s(33) $s(34) $s(35)) $c(-5)) *($s(18) $c(-0.5)) *($s(19) $c(-0.5)) *($s(20) $c(-0.5)) *($s(21) $c(-0.5)) *($s(22) $c(-0.5)) *($s(23) $c(-0.5)) *($s(24) $c(-0.5)) *($s(25) $c(-0.5)) *($s(26) $c(-0.5)) *($s(27) $c(-0.5)) *($s(28) $c(-0.5)) *($s(29) $c(-0.5)) *($s(30) $c(-0.5)) *($s(31) $c(-0.5)) *($s(32) $c(-0.5)) *($s(33) $c(-0.5)) *($s(34) $c(-0.5)) *($s(35) $c(-0.5)) *(and(~($s(18)) ~($s(0))) $c(-0.25)) *(and(~($s(19)) ~($s(1))) $c(-0.25)) *(and(~($s(20)) ~($s(2))) $c(-0.25)) *(and(~($s(21)) ~($s(3))) $c(-0.25)) *(and(~($s(22)) ~($s(4))) $c(-0.25)) *(and(~($s(23)) ~($s(5))) $c(-0.25)) *(and(~($s(24)) ~($s(6))) $c(-0.25)) *(and(~($s(25)) ~($s(7))) $c(-0.25)) *(and(~($s(26)) ~($s(8))) $c(-0.25)) *(and(~($s(27)) ~($s(9))) $c(-0.25)) *(and(~($s(28)) ~($s(10))) $c(-0.25)) *(and(~($s(29)) ~($s(11))) $c(-0.25)) *(and(~($s(30)) ~($s(12))) $c(-0.25)) *(and(~($s(31)) ~($s(13))) $c(-0.25)) *(and(~($s(32)) ~($s(14))) $c(-0.25)) *(and(~($s(33)) ~($s(15))) $c(-0.25)) *(and(~($s(34)) ~($s(16))) $c(-0.25)) *(and(~($s(35)) ~($s(17))) $c(-0.25)) *($a(0) $c(-0.49)) *($a(1) $c(-0.49)) *($a(2) $c(-0.49)) *($a(3) $c(-0.49)) *($a(4) $c(-0.49)) *($a(5) $c(-0.49)) *($a(6) $c(-0.9)) *($a(7) $c(-0.9)) *($a(8) $c(-0.9)) *($a(9) $c(-0.9)) *($a(10) $c(-0.9)) *($a(11) $c(-0.9)) *(and($a(6) ~($s(18)) ~($s(0))) $c(-0.4)) *(and($a(6) ~($s(19)) ~($s(1))) $c(-0.4)) *(and($a(6) ~($s(20)) ~($s(2))) $c(-0.4)) *(and($a(7) ~($s(21)) ~($s(3))) $c(-0.4)) *(and($a(7) ~($s(22)) ~($s(4))) $c(-0.4)) *(and($a(7) ~($s(23)) ~($s(5))) $c(-0.4)) *(and($a(8) ~($s(24)) ~($s(6))) $c(-0.4)) *(and($a(8) ~($s(25)) ~($s(7))) $c(-0.4)) *(and($a(8) ~($s(26)) ~($s(8))) $c(-0.4)) *(and($a(9) ~($s(27)) ~($s(9))) $c(-0.4)) *(and($a(9) ~($s(28)) ~($s(10))) $c(-0.4)) *(and($a(9) ~($s(29)) ~($s(11))) $c(-0.4)) *(and($a(10) ~($s(30)) ~($s(12))) $c(-0.4)) *(and($a(10) ~($s(31)) ~($s(13))) $c(-0.4)) *(and($a(10) ~($s(32)) ~($s(14))) $c(-0.4)) *(and($a(11) ~($s(33)) ~($s(15))) $c(-0.4)) *(and($a(11) ~($s(34)) ~($s(16))) $c(-0.4)) *(and($a(11) ~($s(35)) ~($s(17))) $c(-0.4)))
## min
-45.6
## max
-0
## independent from actions
0
## hash index
36
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
18 2
36 13
## kleene state fluent hash keys (first line is the number of keys)
3
0 2
18 2
36 13

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
1 2
19 2
36 26
## kleene state fluent hash keys (first line is the number of keys)
3
0 2
19 2
36 39

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
2 2
20 2
36 52
## kleene state fluent hash keys (first line is the number of keys)
3
40830304 2
20 2
36 117

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
3 2
21 2
36 104
## kleene state fluent hash keys (first line is the number of keys)
3
42310576 2
21 2
36 351

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 2
22 2
36 208
## kleene state fluent hash keys (first line is the number of keys)
3
42310656 2
22 2
36 1053

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
5 2
23 2
36 416
## kleene state fluent hash keys (first line is the number of keys)
3
42312384 2
23 2
36 3159

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 2
24 2
36 832
## kleene state fluent hash keys (first line is the number of keys)
3
42312464 2
24 2
36 9477

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
7 2
25 2
36 1664
## kleene state fluent hash keys (first line is the number of keys)
3
42312544 2
25 2
36 28431

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 2
26 2
36 3328
## kleene state fluent hash keys (first line is the number of keys)
3
42312624 2
26 2
36 85293

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 2
27 2
36 6656
## kleene state fluent hash keys (first line is the number of keys)
3
42312704 2
27 2
36 255879

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
10 2
28 2
36 13312
## kleene state fluent hash keys (first line is the number of keys)
3
42312784 2
28 2
36 767637

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
11 2
29 2
36 26624
## kleene state fluent hash keys (first line is the number of keys)
3
42310944 2
29 2
36 2302911

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
12 2
30 2
36 53248
## kleene state fluent hash keys (first line is the number of keys)
3
42311024 2
30 2
36 6908733

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
13 2
31 2
36 106496
## kleene state fluent hash keys (first line is the number of keys)
3
42311104 2
31 2
36 20726199

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
14 2
32 2
36 212992
## kleene state fluent hash keys (first line is the number of keys)
3
42311184 2
32 2
36 62178597

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
15 2
33 2
36 425984
## kleene state fluent hash keys (first line is the number of keys)
3
42311264 2
33 2
36 186535791

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
16 2
34 2
36 851968
## kleene state fluent hash keys (first line is the number of keys)
3
42311344 2
34 2
36 559607373

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
17 2
35 2
36 1703936
## kleene state fluent hash keys (first line is the number of keys)
3
42311424 2
35 2
36 1678822119

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
0 4
18 4
19 4
20 4
21 4
22 4
23 4
36 3407872
## kleene state fluent hash keys (first line is the number of keys)
8
-1597236360 41454496
18 6
19 6
20 6
21 6
22 6
23 6
36 5036466357

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
1 4
18 8
19 8
20 8
21 8
22 8
23 8
36 6815744
## kleene state fluent hash keys (first line is the number of keys)
8
41454496 41801824
18 18
19 18
20 18
21 18
22 18
23 18
36 15109399071

## index
20
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
2 4
18 16
19 16
20 16
21 16
22 16
23 16
36 13631488
## kleene state fluent hash keys (first line is the number of keys)
8
2 6
18 54
19 54
20 54
21 54
22 54
23 54
36 45328197213

## index
21
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
3 4
18 32
19 32
20 32
21 32
22 32
23 32
24 4
25 4
26 4
36 27262976
## kleene state fluent hash keys (first line is the number of keys)
11
40875744 40991872
18 162
19 162
20 162
21 162
22 162
23 162
24 6
25 6
26 6
36 135984591639

## index
22
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
4 4
18 64
19 64
20 64
21 64
22 64
23 64
24 8
25 8
26 8
36 54525952
## kleene state fluent hash keys (first line is the number of keys)
11
4 6
18 486
19 486
20 486
21 486
22 486
23 486
24 18
25 18
26 18
36 407953774917

## index
23
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
5 4
18 128
19 128
20 128
21 128
22 128
23 128
24 16
25 16
26 16
36 109051904
## kleene state fluent hash keys (first line is the number of keys)
11
5 6
18 1458
19 1458
20 1458
21 1458
22 1458
23 1458
24 54
25 54
26 54
36 1223861324751

## index
24
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
6 4
21 256
22 256
23 256
24 32
25 32
26 32
27 4
28 4
29 4
36 218103808
## kleene state fluent hash keys (first line is the number of keys)
11
40991872 42149152
21 4374
22 4374
23 4374
24 162
25 162
26 162
27 6
28 6
29 6
36 3671583974253

## index
25
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
7 4
21 512
22 512
23 512
24 64
25 64
26 64
27 8
28 8
29 8
36 436207616
## kleene state fluent hash keys (first line is the number of keys)
11
7 6
21 13122
22 13122
23 13122
24 486
25 486
26 486
27 18
28 18
29 18
36 11014751922759

## index
26
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
8 4
21 1024
22 1024
23 1024
24 128
25 128
26 128
27 16
28 16
29 16
36 872415232
## kleene state fluent hash keys (first line is the number of keys)
11
8 6
21 39366
22 39366
23 39366
24 1458
25 1458
26 1458
27 54
28 54
29 54
36 33044255768277

## index
27
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
9 4
24 256
25 256
26 256
27 32
28 32
29 32
30 4
31 4
32 4
36 1744830464
## kleene state fluent hash keys (first line is the number of keys)
11
41801824 42295232
24 4374
25 4374
26 4374
27 162
28 162
29 162
30 6
31 6
32 6
36 99132767304831

## index
28
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
10 4
24 512
25 512
26 512
27 64
28 64
29 64
30 8
31 8
32 8
36 3489660928
## kleene state fluent hash keys (first line is the number of keys)
11
10 6
24 13122
25 13122
26 13122
27 486
28 486
29 486
30 18
31 18
32 18
36 297398301914493

## index
29
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
11 4
24 1024
25 1024
26 1024
27 128
28 128
29 128
30 16
31 16
32 16
36 6979321856
## kleene state fluent hash keys (first line is the number of keys)
11
11 6
24 39366
25 39366
26 39366
27 1458
28 1458
29 1458
30 54
31 54
32 54
36 892194905743479

## index
30
## state hash key (for each value in the domain)
0 1073741824
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
12 4
27 256
28 256
29 256
30 32
31 32
32 32
33 4
34 4
35 4
36 13958643712
## kleene state fluent hash keys (first line is the number of keys)
11
42149152 42279616
27 4374
28 4374
29 4374
30 162
31 162
32 162
33 6
34 6
35 6
36 2676584717230437

## index
31
## state hash key (for each value in the domain)
0 2147483648
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
13 4
27 512
28 512
29 512
30 64
31 64
32 64
33 8
34 8
35 8
36 27917287424
## kleene state fluent hash keys (first line is the number of keys)
11
13 6
27 13122
28 13122
29 13122
30 486
31 486
32 486
33 18
34 18
35 18
36 8029754151691311

## index
32
## state hash key (for each value in the domain)
0 4294967296
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
14 4
27 1024
28 1024
29 1024
30 128
31 128
32 128
33 16
34 16
35 16
36 55834574848
## kleene state fluent hash keys (first line is the number of keys)
11
14 6
27 39366
28 39366
29 39366
30 1458
31 1458
32 1458
33 54
34 54
35 54
36 24089262455073933

## index
33
## state hash key (for each value in the domain)
0 8589934592
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
15 4
30 256
31 256
32 256
33 32
34 32
35 32
36 111669149696
## kleene state fluent hash keys (first line is the number of keys)
8
42295232 140572682361720
30 4374
31 4374
32 4374
33 162
34 162
35 162
36 72267787365221799

## index
34
## state hash key (for each value in the domain)
0 17179869184
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
16 4
30 512
31 512
32 512
33 64
34 64
35 64
36 223338299392
## kleene state fluent hash keys (first line is the number of keys)
8
16 6
30 13122
31 13122
32 13122
33 486
34 486
35 486
36 216803362095665397

## index
35
## state hash key (for each value in the domain)
0 34359738368
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
17 4
30 1024
31 1024
32 1024
33 128
34 128
35 128
36 446676598784
## kleene state fluent hash keys (first line is the number of keys)
8
17 6
30 39366
31 39366
32 39366
33 1458
34 1458
35 1458
36 650410086286996191

