#####TASK##### Here
## name
triangle_tireworld_inst_mdp__5
## horizon
40
## discount factor
1
## number of action fluents
66
## number of det state fluents
47
## number of prob state fluents
1
## number of preconds
0
## number of actions
67
## number of hashing functions
49
## initial state
0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
changetire
## number of values
2
## values
0 false
1 true

## index
1
## name
loadtire(la2a1)
## number of values
2
## values
0 false
1 true

## index
2
## name
loadtire(la2a2)
## number of values
2
## values
0 false
1 true

## index
3
## name
loadtire(la2a3)
## number of values
2
## values
0 false
1 true

## index
4
## name
loadtire(la2a4)
## number of values
2
## values
0 false
1 true

## index
5
## name
loadtire(la2a5)
## number of values
2
## values
0 false
1 true

## index
6
## name
loadtire(la2a6)
## number of values
2
## values
0 false
1 true

## index
7
## name
loadtire(la3a1)
## number of values
2
## values
0 false
1 true

## index
8
## name
loadtire(la3a5)
## number of values
2
## values
0 false
1 true

## index
9
## name
loadtire(la4a1)
## number of values
2
## values
0 false
1 true

## index
10
## name
loadtire(la4a2)
## number of values
2
## values
0 false
1 true

## index
11
## name
loadtire(la4a3)
## number of values
2
## values
0 false
1 true

## index
12
## name
loadtire(la4a4)
## number of values
2
## values
0 false
1 true

## index
13
## name
loadtire(la5a1)
## number of values
2
## values
0 false
1 true

## index
14
## name
loadtire(la5a3)
## number of values
2
## values
0 false
1 true

## index
15
## name
loadtire(la6a1)
## number of values
2
## values
0 false
1 true

## index
16
## name
loadtire(la6a2)
## number of values
2
## values
0 false
1 true

## index
17
## name
loadtire(la7a1)
## number of values
2
## values
0 false
1 true

## index
18
## name
move-car(la1a1, la1a2)
## number of values
2
## values
0 false
1 true

## index
19
## name
move-car(la1a1, la2a1)
## number of values
2
## values
0 false
1 true

## index
20
## name
move-car(la1a2, la1a3)
## number of values
2
## values
0 false
1 true

## index
21
## name
move-car(la1a2, la2a2)
## number of values
2
## values
0 false
1 true

## index
22
## name
move-car(la1a3, la1a4)
## number of values
2
## values
0 false
1 true

## index
23
## name
move-car(la1a3, la2a3)
## number of values
2
## values
0 false
1 true

## index
24
## name
move-car(la1a4, la1a5)
## number of values
2
## values
0 false
1 true

## index
25
## name
move-car(la1a4, la2a4)
## number of values
2
## values
0 false
1 true

## index
26
## name
move-car(la1a5, la1a6)
## number of values
2
## values
0 false
1 true

## index
27
## name
move-car(la1a5, la2a5)
## number of values
2
## values
0 false
1 true

## index
28
## name
move-car(la1a6, la1a7)
## number of values
2
## values
0 false
1 true

## index
29
## name
move-car(la1a6, la2a6)
## number of values
2
## values
0 false
1 true

## index
30
## name
move-car(la2a1, la1a2)
## number of values
2
## values
0 false
1 true

## index
31
## name
move-car(la2a1, la3a1)
## number of values
2
## values
0 false
1 true

## index
32
## name
move-car(la2a2, la1a3)
## number of values
2
## values
0 false
1 true

## index
33
## name
move-car(la2a3, la1a4)
## number of values
2
## values
0 false
1 true

## index
34
## name
move-car(la2a3, la3a3)
## number of values
2
## values
0 false
1 true

## index
35
## name
move-car(la2a4, la1a5)
## number of values
2
## values
0 false
1 true

## index
36
## name
move-car(la2a5, la1a6)
## number of values
2
## values
0 false
1 true

## index
37
## name
move-car(la2a5, la3a5)
## number of values
2
## values
0 false
1 true

## index
38
## name
move-car(la2a6, la1a7)
## number of values
2
## values
0 false
1 true

## index
39
## name
move-car(la3a1, la2a2)
## number of values
2
## values
0 false
1 true

## index
40
## name
move-car(la3a1, la3a2)
## number of values
2
## values
0 false
1 true

## index
41
## name
move-car(la3a1, la4a1)
## number of values
2
## values
0 false
1 true

## index
42
## name
move-car(la3a2, la3a3)
## number of values
2
## values
0 false
1 true

## index
43
## name
move-car(la3a2, la4a2)
## number of values
2
## values
0 false
1 true

## index
44
## name
move-car(la3a3, la2a4)
## number of values
2
## values
0 false
1 true

## index
45
## name
move-car(la3a3, la3a4)
## number of values
2
## values
0 false
1 true

## index
46
## name
move-car(la3a3, la4a3)
## number of values
2
## values
0 false
1 true

## index
47
## name
move-car(la3a4, la3a5)
## number of values
2
## values
0 false
1 true

## index
48
## name
move-car(la3a4, la4a4)
## number of values
2
## values
0 false
1 true

## index
49
## name
move-car(la3a5, la2a6)
## number of values
2
## values
0 false
1 true

## index
50
## name
move-car(la4a1, la3a2)
## number of values
2
## values
0 false
1 true

## index
51
## name
move-car(la4a1, la5a1)
## number of values
2
## values
0 false
1 true

## index
52
## name
move-car(la4a2, la3a3)
## number of values
2
## values
0 false
1 true

## index
53
## name
move-car(la4a3, la3a4)
## number of values
2
## values
0 false
1 true

## index
54
## name
move-car(la4a3, la5a3)
## number of values
2
## values
0 false
1 true

## index
55
## name
move-car(la4a4, la3a5)
## number of values
2
## values
0 false
1 true

## index
56
## name
move-car(la5a1, la4a2)
## number of values
2
## values
0 false
1 true

## index
57
## name
move-car(la5a1, la5a2)
## number of values
2
## values
0 false
1 true

## index
58
## name
move-car(la5a1, la6a1)
## number of values
2
## values
0 false
1 true

## index
59
## name
move-car(la5a2, la5a3)
## number of values
2
## values
0 false
1 true

## index
60
## name
move-car(la5a2, la6a2)
## number of values
2
## values
0 false
1 true

## index
61
## name
move-car(la5a3, la4a4)
## number of values
2
## values
0 false
1 true

## index
62
## name
move-car(la6a1, la5a2)
## number of values
2
## values
0 false
1 true

## index
63
## name
move-car(la6a1, la7a1)
## number of values
2
## values
0 false
1 true

## index
64
## name
move-car(la6a2, la5a3)
## number of values
2
## values
0 false
1 true

## index
65
## name
move-car(la7a1, la6a2)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
goal-reward-received
## number of values
2
## values
0 false
1 true
## formula
or($s(0) $s(25))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
1
## name
hasspare
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(0) $s(1)) : $c(0)) (or(and($a(1) $s(26) $s(2)) and($a(2) $s(27) $s(3)) and($a(3) $s(28) $s(4)) and($a(4) $s(29) $s(5)) and($a(5) $s(30) $s(6)) and($a(6) $s(31) $s(7)) and($a(7) $s(32) $s(8)) and($a(8) $s(36) $s(9)) and($a(9) $s(37) $s(10)) and($a(10) $s(38) $s(11)) and($a(11) $s(39) $s(12)) and($a(12) $s(40) $s(13)) and($a(13) $s(41) $s(14)) and($a(14) $s(43) $s(15)) and($a(15) $s(44) $s(16)) and($a(16) $s(45) $s(17)) and($a(17) $s(46) $s(18))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 2
51 3
52 4
53 5
54 6
55 7
56 8
57 9
58 10
59 11
60 12
61 13
62 14
63 15
64 16
65 17
66 18

## index
2
## name
spare-in(la2a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(1) $s(26) $s(2)) : $c(0)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 1
66 0

## index
3
## name
spare-in(la2a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(2) $s(27) $s(3)) : $c(0)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 1
65 0
66 0

## index
4
## name
spare-in(la2a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(3) $s(28) $s(4)) : $c(0)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 1
64 0
65 0
66 0

## index
5
## name
spare-in(la2a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(4) $s(29) $s(5)) : $c(0)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 1
63 0
64 0
65 0
66 0

## index
6
## name
spare-in(la2a5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(5) $s(30) $s(6)) : $c(0)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 0
65 0
66 0

## index
7
## name
spare-in(la2a6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(6) $s(31) $s(7)) : $c(0)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 0
64 0
65 0
66 0

## index
8
## name
spare-in(la3a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(7) $s(32) $s(8)) : $c(0)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 1
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
9
## name
spare-in(la3a5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(8) $s(36) $s(9)) : $c(0)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
10
## name
spare-in(la4a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(9) $s(37) $s(10)) : $c(0)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
11
## name
spare-in(la4a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(10) $s(38) $s(11)) : $c(0)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 1
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
12
## name
spare-in(la4a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(11) $s(39) $s(12)) : $c(0)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 1
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
13
## name
spare-in(la4a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(12) $s(40) $s(13)) : $c(0)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
14
## name
spare-in(la5a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(13) $s(41) $s(14)) : $c(0)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
15
## name
spare-in(la5a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(14) $s(43) $s(15)) : $c(0)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
16
## name
spare-in(la6a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(15) $s(44) $s(16)) : $c(0)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
17
## name
spare-in(la6a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(16) $s(45) $s(17)) : $c(0)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
18
## name
spare-in(la7a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(17) $s(46) $s(18)) : $c(0)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
19
## name
vehicle-at(la1a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(18) $s(19) $s(47)) and($a(19) $s(19) $s(47))) : $c(0)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 1
48 2
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
20
## name
vehicle-at(la1a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(18) $s(19) $s(47)) and($a(30) $s(26) $s(47))) : $c(1)) (or(and($a(20) $s(20) $s(47)) and($a(21) $s(20) $s(47))) : $c(0)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 1
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 2
46 3
47 0
48 4
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
21
## name
vehicle-at(la1a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(20) $s(20) $s(47)) and($a(32) $s(27) $s(47))) : $c(1)) (or(and($a(22) $s(21) $s(47)) and($a(23) $s(21) $s(47))) : $c(0)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 2
44 3
45 0
46 4
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
22
## name
vehicle-at(la1a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(22) $s(21) $s(47)) and($a(33) $s(28) $s(47))) : $c(1)) (or(and($a(24) $s(22) $s(47)) and($a(25) $s(22) $s(47))) : $c(0)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 2
42 3
43 0
44 4
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
23
## name
vehicle-at(la1a5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(24) $s(22) $s(47)) and($a(35) $s(29) $s(47))) : $c(1)) (or(and($a(26) $s(23) $s(47)) and($a(27) $s(23) $s(47))) : $c(0)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 2
40 3
41 0
42 4
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
24
## name
vehicle-at(la1a6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(26) $s(23) $s(47)) and($a(36) $s(30) $s(47))) : $c(1)) (or(and($a(28) $s(24) $s(47)) and($a(29) $s(24) $s(47))) : $c(0)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 0
35 0
36 0
37 2
38 3
39 0
40 4
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
25
## name
vehicle-at(la1a7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(28) $s(24) $s(47)) and($a(38) $s(31) $s(47))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 2
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
26
## name
vehicle-at(la2a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(19) $s(19) $s(47)) : $c(1)) (or(and($a(30) $s(26) $s(47)) and($a(31) $s(26) $s(47))) : $c(0)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 1
36 2
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 3
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
27
## name
vehicle-at(la2a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(21) $s(20) $s(47)) and($a(39) $s(32) $s(47))) : $c(1)) (and($a(32) $s(27) $s(47)) : $c(0)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 0
33 0
34 2
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 3
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
28
## name
vehicle-at(la2a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(23) $s(21) $s(47)) : $c(1)) (or(and($a(33) $s(28) $s(47)) and($a(34) $s(28) $s(47))) : $c(0)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 1
33 2
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 3
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
29
## name
vehicle-at(la2a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(25) $s(22) $s(47)) and($a(44) $s(34) $s(47))) : $c(1)) (and($a(35) $s(29) $s(47)) : $c(0)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 2
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 3
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
30
## name
vehicle-at(la2a5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(27) $s(23) $s(47)) : $c(1)) (or(and($a(36) $s(30) $s(47)) and($a(37) $s(30) $s(47))) : $c(0)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 1
30 2
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 3
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
31
## name
vehicle-at(la2a6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(29) $s(24) $s(47)) and($a(49) $s(36) $s(47))) : $c(1)) (and($a(38) $s(31) $s(47)) : $c(0)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 2
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 3
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
32
## name
vehicle-at(la3a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(31) $s(26) $s(47)) : $c(1)) (or(and($a(39) $s(32) $s(47)) and($a(40) $s(32) $s(47)) and($a(41) $s(32) $s(47))) : $c(0)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 2
27 3
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 4
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
33
## name
vehicle-at(la3a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(40) $s(32) $s(47)) and($a(50) $s(37) $s(47))) : $c(1)) (or(and($a(42) $s(33) $s(47)) and($a(43) $s(33) $s(47))) : $c(0)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 2
24 3
25 0
26 4
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
34
## name
vehicle-at(la3a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(34) $s(28) $s(47)) and($a(42) $s(33) $s(47)) and($a(52) $s(38) $s(47))) : $c(1)) (or(and($a(44) $s(34) $s(47)) and($a(45) $s(34) $s(47)) and($a(46) $s(34) $s(47))) : $c(0)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 2
21 3
22 4
23 0
24 5
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 6
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
35
## name
vehicle-at(la3a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(45) $s(34) $s(47)) and($a(53) $s(39) $s(47))) : $c(1)) (or(and($a(47) $s(35) $s(47)) and($a(48) $s(35) $s(47))) : $c(0)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 2
19 3
20 0
21 4
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
36
## name
vehicle-at(la3a5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(37) $s(30) $s(47)) and($a(47) $s(35) $s(47)) and($a(55) $s(40) $s(47))) : $c(1)) (and($a(49) $s(36) $s(47)) : $c(0)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 2
18 0
19 3
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 4
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
37
## name
vehicle-at(la4a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(41) $s(32) $s(47)) : $c(1)) (or(and($a(50) $s(37) $s(47)) and($a(51) $s(37) $s(47))) : $c(0)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 2
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 3
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
38
## name
vehicle-at(la4a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(43) $s(33) $s(47)) and($a(56) $s(41) $s(47))) : $c(1)) (and($a(52) $s(38) $s(47)) : $c(0)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 2
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 3
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
39
## name
vehicle-at(la4a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(46) $s(34) $s(47)) : $c(1)) (or(and($a(53) $s(39) $s(47)) and($a(54) $s(39) $s(47))) : $c(0)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 2
14 0
15 0
16 0
17 0
18 0
19 0
20 3
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
40
## name
vehicle-at(la4a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(48) $s(35) $s(47)) and($a(61) $s(43) $s(47))) : $c(1)) (and($a(55) $s(40) $s(47)) : $c(0)) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 2
12 0
13 0
14 0
15 0
16 0
17 0
18 3
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
41
## name
vehicle-at(la5a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(51) $s(37) $s(47)) : $c(1)) (or(and($a(56) $s(41) $s(47)) and($a(57) $s(41) $s(47)) and($a(58) $s(41) $s(47))) : $c(0)) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 2
10 3
11 0
12 0
13 0
14 0
15 4
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
42
## name
vehicle-at(la5a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(57) $s(41) $s(47)) and($a(62) $s(44) $s(47))) : $c(1)) (or(and($a(59) $s(42) $s(47)) and($a(60) $s(42) $s(47))) : $c(0)) ($c(1) : $s(42)) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 2
7 3
8 0
9 4
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
43
## name
vehicle-at(la5a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(54) $s(39) $s(47)) and($a(59) $s(42) $s(47)) and($a(64) $s(45) $s(47))) : $c(1)) (and($a(61) $s(43) $s(47)) : $c(0)) ($c(1) : $s(43)) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 2
6 0
7 3
8 0
9 0
10 0
11 0
12 4
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
44
## name
vehicle-at(la6a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(58) $s(41) $s(47)) : $c(1)) (or(and($a(62) $s(44) $s(47)) and($a(63) $s(44) $s(47))) : $c(0)) ($c(1) : $s(44)) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 2
5 0
6 0
7 0
8 3
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
45
## name
vehicle-at(la6a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(60) $s(42) $s(47)) and($a(65) $s(46) $s(47))) : $c(1)) (and($a(64) $s(45) $s(47)) : $c(0)) ($c(1) : $s(45)) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 0
4 0
5 0
6 3
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0

## index
46
## name
vehicle-at(la7a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(63) $s(44) $s(47)) : $c(1)) (and($a(65) $s(46) $s(47)) : $c(0)) ($c(1) : $s(46)) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
not-flattire
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(18) $s(19) $s(47)) and($a(19) $s(19) $s(47)) and($a(20) $s(20) $s(47)) and($a(21) $s(20) $s(47)) and($a(22) $s(21) $s(47)) and($a(23) $s(21) $s(47)) and($a(24) $s(22) $s(47)) and($a(25) $s(22) $s(47)) and($a(26) $s(23) $s(47)) and($a(27) $s(23) $s(47)) and($a(28) $s(24) $s(47)) and($a(29) $s(24) $s(47)) and($a(30) $s(26) $s(47)) and($a(31) $s(26) $s(47)) and($a(32) $s(27) $s(47)) and($a(33) $s(28) $s(47)) and($a(34) $s(28) $s(47)) and($a(35) $s(29) $s(47)) and($a(36) $s(30) $s(47)) and($a(37) $s(30) $s(47)) and($a(38) $s(31) $s(47)) and($a(39) $s(32) $s(47)) and($a(40) $s(32) $s(47)) and($a(41) $s(32) $s(47)) and($a(42) $s(33) $s(47)) and($a(43) $s(33) $s(47)) and($a(44) $s(34) $s(47)) and($a(45) $s(34) $s(47)) and($a(46) $s(34) $s(47)) and($a(47) $s(35) $s(47)) and($a(48) $s(35) $s(47)) and($a(49) $s(36) $s(47)) and($a(50) $s(37) $s(47)) and($a(51) $s(37) $s(47)) and($a(52) $s(38) $s(47)) and($a(53) $s(39) $s(47)) and($a(54) $s(39) $s(47)) and($a(55) $s(40) $s(47)) and($a(56) $s(41) $s(47)) and($a(57) $s(41) $s(47)) and($a(58) $s(41) $s(47)) and($a(59) $s(42) $s(47)) and($a(60) $s(42) $s(47)) and($a(61) $s(43) $s(47)) and($a(62) $s(44) $s(47)) and($a(63) $s(44) $s(47)) and($a(64) $s(45) $s(47)) and($a(65) $s(46) $s(47))) : Bernoulli($c(0.3))) (and($a(0) $s(1)) : $c(1)) ($c(1) : $s(47)) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20
21 21
22 22
23 23
24 24
25 25
26 26
27 27
28 28
29 29
30 30
31 31
32 32
33 33
34 34
35 35
36 36
37 37
38 38
39 39
40 40
41 41
42 42
43 43
44 44
45 45
46 46
47 47
48 48
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 49



#####REWARD#####
## formula
switch( (and(~($s(0)) $s(25)) : $c(100)) ($s(0) : $c(0)) ($c(1) : $c(-1)) )
## min
-1
## max
100
## independent from actions
1
## hash index
48
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
28
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
29
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
30
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
31
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
32
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
33
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
34
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
35
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
36
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
37
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
38
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
39
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
40
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
41
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
42
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
43
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
44
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
45
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
46
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
47
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
48
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
49
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
50
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
51
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
52
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
53
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
54
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
55
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
56
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
57
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
58
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
59
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
60
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
61
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
62
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
63
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
64
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
65
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
66
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
2
0 1
48 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
2
1 19
47 50
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
2
1 38
2 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
2
1 76
3 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
2
1 152
4 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
2
1 304
5 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
2
1 608
6 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
2
1 1216
7 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
2
1 2432
8 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
2
1 4864
9 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
2
1 9728
10 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
2
1 19456
11 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
2
1 38912
12 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
2
1 77824
13 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
2
1 155648
14 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
2
1 311296
15 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
2
1 622592
16 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
2
1 1245184
17 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
2
1 2490368
18 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
4
19 3
20 5
26 4
47 100
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
4
20 10
21 5
27 4
47 200
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
4
21 10
22 5
28 4
47 400
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
4
22 10
23 5
29 4
47 800
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
4
23 10
24 5
30 4
47 1600
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
4
24 10
25 3
31 4
47 3200
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
3
0 2
25 6
48 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
6
1 4980736
2 4
20 20
26 8
32 5
47 6400
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
5
1 9961472
3 4
21 20
27 8
47 12800
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
6
1 19922944
4 4
22 20
28 8
34 7
47 25600
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
5
1 39845888
5 4
23 20
29 8
47 51200
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
6
1 79691776
6 4
24 20
30 8
36 5
47 102400
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
5
1 159383552
7 4
25 12
31 8
47 204800
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
7
1 318767104
8 4
27 16
32 10
33 5
37 4
47 409600
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
4
33 10
34 14
38 4
47 819200
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
5
29 16
34 28
35 5
39 4
47 1638400
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
4
35 10
36 10
40 4
47 3276800
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
5
1 637534208
9 4
31 16
36 20
47 6553600
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
6
1 1275068416
10 4
33 20
37 8
41 5
47 13107200
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
5
1 2550136832
11 4
34 56
38 8
47 26214400
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
6
1 5100273664
12 4
35 20
39 8
43 5
47 52428800
## kleene state fluent hash keys (first line is the number of keys)
0

## index
40
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
5
1 10200547328
13 4
36 40
40 8
47 104857600
## kleene state fluent hash keys (first line is the number of keys)
0

## index
41
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
7
1 20401094656
14 4
38 16
41 10
42 5
44 4
47 209715200
## kleene state fluent hash keys (first line is the number of keys)
0

## index
42
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
4
42 10
43 10
45 4
47 419430400
## kleene state fluent hash keys (first line is the number of keys)
0

## index
43
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
5
1 40802189312
15 4
40 16
43 20
47 838860800
## kleene state fluent hash keys (first line is the number of keys)
0

## index
44
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
6
1 81604378624
16 4
42 20
44 8
46 3
47 1677721600
## kleene state fluent hash keys (first line is the number of keys)
0

## index
45
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
5
1 163208757248
17 4
43 40
45 8
47 3355443200
## kleene state fluent hash keys (first line is the number of keys)
0

## index
46
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
5
1 326417514496
18 4
45 16
46 6
47 6710886400
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
29
19 6
20 40
21 40
22 40
23 40
24 40
25 24
26 16
27 32
28 16
29 32
30 16
31 32
32 20
33 40
34 112
35 40
36 80
37 16
38 32
39 16
40 32
41 20
42 40
43 80
44 16
45 32
46 12
47 13421772800
## kleene state fluent hash keys (first line is the number of keys)
29
31440640 140329611803512
20 135
21 135
22 135
23 135
24 135
25 81
26 36
27 108
28 36
29 108
30 36
31 108
32 45
33 135
34 567
35 135
36 405
37 36
38 108
39 36
40 108
41 45
42 135
43 405
44 36
45 108
46 27
47 1143839622748050

