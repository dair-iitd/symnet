#####TASK##### Here
## name
academic_advising_inst_mdp__4
## horizon
40
## discount factor
1
## number of action fluents
15
## number of det state fluents
15
## number of prob state fluents
15
## number of preconds
0
## number of actions
121
## number of hashing functions
31
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
takeCourse(CS11)
## number of values
2
## values
0 false
1 true

## index
1
## name
takeCourse(CS12)
## number of values
2
## values
0 false
1 true

## index
2
## name
takeCourse(CS13)
## number of values
2
## values
0 false
1 true

## index
3
## name
takeCourse(CS21)
## number of values
2
## values
0 false
1 true

## index
4
## name
takeCourse(CS22)
## number of values
2
## values
0 false
1 true

## index
5
## name
takeCourse(CS23)
## number of values
2
## values
0 false
1 true

## index
6
## name
takeCourse(CS31)
## number of values
2
## values
0 false
1 true

## index
7
## name
takeCourse(CS32)
## number of values
2
## values
0 false
1 true

## index
8
## name
takeCourse(CS33)
## number of values
2
## values
0 false
1 true

## index
9
## name
takeCourse(CS41)
## number of values
2
## values
0 false
1 true

## index
10
## name
takeCourse(CS42)
## number of values
2
## values
0 false
1 true

## index
11
## name
takeCourse(CS43)
## number of values
2
## values
0 false
1 true

## index
12
## name
takeCourse(CS51)
## number of values
2
## values
0 false
1 true

## index
13
## name
takeCourse(CS52)
## number of values
2
## values
0 false
1 true

## index
14
## name
takeCourse(CS53)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
taken(CS11)
## number of values
2
## values
0 false
1 true
## formula
or($s(0) $a(0))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 1
108 1
109 1
110 1
111 1
112 1
113 1
114 1
115 1
116 1
117 1
118 1
119 1
120 1

## index
1
## name
taken(CS12)
## number of values
2
## values
0 false
1 true
## formula
or($s(1) $a(1))
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 1
95 1
96 1
97 1
98 1
99 1
100 1
101 1
102 1
103 1
104 1
105 1
106 1
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1

## index
2
## name
taken(CS13)
## number of values
2
## values
0 false
1 true
## formula
or($s(2) $a(2))
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 1
84 1
85 1
86 1
87 1
88 1
89 1
90 1
91 1
92 1
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 1
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 1
120 0

## index
3
## name
taken(CS21)
## number of values
2
## values
0 false
1 true
## formula
or($s(3) $a(3))
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 1
72 1
73 1
74 1
75 1
76 1
77 1
78 1
79 1
80 1
81 1
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 1
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 1
119 0
120 0

## index
4
## name
taken(CS22)
## number of values
2
## values
0 false
1 true
## formula
or($s(4) $a(4))
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 1
63 1
64 1
65 1
66 1
67 1
68 1
69 1
70 1
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 1
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 1
118 0
119 0
120 0

## index
5
## name
taken(CS23)
## number of values
2
## values
0 false
1 true
## formula
or($s(5) $a(5))
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 1
53 1
54 1
55 1
56 1
57 1
58 1
59 1
60 1
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 1
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 1
117 0
118 0
119 0
120 0

## index
6
## name
taken(CS31)
## number of values
2
## values
0 false
1 true
## formula
or($s(6) $a(6))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 1
47 1
48 1
49 1
50 1
51 1
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 1
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 1
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 1
116 0
117 0
118 0
119 0
120 0

## index
7
## name
taken(CS32)
## number of values
2
## values
0 false
1 true
## formula
or($s(7) $a(7))
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 1
38 1
39 1
40 1
41 1
42 1
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 1
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 1
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 1
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 1
115 0
116 0
117 0
118 0
119 0
120 0

## index
8
## name
taken(CS33)
## number of values
2
## values
0 false
1 true
## formula
or($s(8) $a(8))
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 1
33 1
34 1
35 1
36 1
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 1
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 1
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
9
## name
taken(CS41)
## number of values
2
## values
0 false
1 true
## formula
or($s(9) $a(9))
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 1
28 1
29 1
30 1
31 0
32 0
33 0
34 0
35 0
36 1
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 1
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 1
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 1
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
10
## name
taken(CS42)
## number of values
2
## values
0 false
1 true
## formula
or($s(10) $a(10))
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 1
24 1
25 1
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 0
35 1
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 1
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 1
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 1
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 1
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
11
## name
taken(CS43)
## number of values
2
## values
0 false
1 true
## formula
or($s(11) $a(11))
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 1
21 1
22 0
23 0
24 0
25 1
26 0
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 0
44 0
45 0
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 1
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 1
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 1
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
12
## name
taken(CS51)
## number of values
2
## values
0 false
1 true
## formula
or($s(12) $a(12))
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 1
19 0
20 0
21 1
22 0
23 0
24 1
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 1
40 0
41 0
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 1
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 1
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
13
## name
taken(CS52)
## number of values
2
## values
0 false
1 true
## formula
or($s(13) $a(13))
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 1
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 1
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 1
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 1
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
14
## name
taken(CS53)
## number of values
2
## values
0 false
1 true
## formula
or($s(14) $a(14))
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 1
18 0
19 1
20 0
21 0
22 1
23 0
24 0
25 0
26 1
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 1
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 1
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
passed(CS11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(0) ~($s(15))) : Bernoulli($c(0.8))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 1
108 1
109 1
110 1
111 1
112 1
113 1
114 1
115 1
116 1
117 1
118 1
119 1
120 1

## index
1
## name
passed(CS12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(1) ~($s(16))) : Bernoulli($c(0.8))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 1
95 1
96 1
97 1
98 1
99 1
100 1
101 1
102 1
103 1
104 1
105 1
106 1
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 1

## index
2
## name
passed(CS13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(2) ~($s(17))) : Bernoulli($c(0.8))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 1
84 1
85 1
86 1
87 1
88 1
89 1
90 1
91 1
92 1
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 1
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 1
120 0

## index
3
## name
passed(CS21)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(3) ~($s(18))) : Bernoulli(+(*(/(+($s(15) $s(16) $s(17)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 1
72 1
73 1
74 1
75 1
76 1
77 1
78 1
79 1
80 1
81 1
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 1
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 1
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 1
119 0
120 0

## index
4
## name
passed(CS22)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(4) ~($s(19))) : Bernoulli(+(*(/(+($s(16) $s(17) $s(18)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 1
63 1
64 1
65 1
66 1
67 1
68 1
69 1
70 1
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 1
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 1
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 1
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 1
118 0
119 0
120 0

## index
5
## name
passed(CS23)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(5) ~($s(20))) : Bernoulli(+(*(/(+($s(17) $s(18) $s(19)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 1
53 1
54 1
55 1
56 1
57 1
58 1
59 1
60 1
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 1
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 1
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 1
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 1
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 1
117 0
118 0
119 0
120 0

## index
6
## name
passed(CS31)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(6) ~($s(21))) : Bernoulli(+(*(/(+($s(18) $s(19) $s(20)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 1
46 1
47 1
48 1
49 1
50 1
51 1
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 1
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 1
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 1
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 1
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 1
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 1
116 0
117 0
118 0
119 0
120 0

## index
7
## name
passed(CS32)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(7) ~($s(22))) : Bernoulli(+(*(/(+($s(15) $s(19) $s(21)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 1
38 1
39 1
40 1
41 1
42 1
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 0
51 1
52 0
53 0
54 0
55 0
56 0
57 0
58 0
59 1
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 0
68 1
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 0
78 1
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 0
89 1
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 0
101 1
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 0
114 1
115 0
116 0
117 0
118 0
119 0
120 0

## index
8
## name
passed(CS33)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(8) ~($s(23))) : Bernoulli(+(*(/(+($s(17) $s(18) $s(20)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 1
33 1
34 1
35 1
36 1
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0
50 1
51 0
52 0
53 0
54 0
55 0
56 0
57 0
58 1
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 0
67 1
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 0
77 1
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 0
88 1
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 0
100 1
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 0
113 1
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
9
## name
passed(CS41)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(9) ~($s(24))) : Bernoulli(+(*(/(+($s(15) $s(17) $s(19) $s(20)) $c(5)) $c(0.8)) $c(0.2)))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 1
28 1
29 1
30 1
31 0
32 0
33 0
34 0
35 0
36 1
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 1
50 0
51 0
52 0
53 0
54 0
55 0
56 0
57 1
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 0
66 1
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 0
76 1
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 0
87 1
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 0
99 1
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 0
112 1
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
10
## name
passed(CS42)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(10) ~($s(25))) : Bernoulli(+(*(/(+($s(15) $s(18) $s(22)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 1
24 1
25 1
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 0
35 1
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 1
49 0
50 0
51 0
52 0
53 0
54 0
55 0
56 1
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 0
65 1
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 0
75 1
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 0
86 1
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 0
98 1
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 0
111 1
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
11
## name
passed(CS43)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(11) ~($s(26))) : Bernoulli(+(*(/(+($s(22) $s(25)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 1
21 1
22 0
23 0
24 0
25 1
26 0
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 0
44 0
45 0
46 0
47 1
48 0
49 0
50 0
51 0
52 0
53 0
54 0
55 1
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 0
64 1
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 0
74 1
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 0
85 1
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 0
97 1
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 0
110 1
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
12
## name
passed(CS51)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(12) ~($s(27))) : Bernoulli(+(*(/(+($s(20) $s(23)) $c(3)) $c(0.8)) $c(0.2)))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 1
19 0
20 0
21 1
22 0
23 0
24 1
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 1
40 0
41 0
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 0
50 0
51 0
52 0
53 0
54 1
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 0
63 1
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 0
73 1
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 0
84 1
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 0
96 1
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 0
109 1
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
13
## name
passed(CS52)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(13) ~($s(28))) : Bernoulli(+(*(/(+($s(15) $s(21) $s(25)) $c(4)) $c(0.8)) $c(0.2)))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 1
19 0
20 1
21 0
22 0
23 1
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 1
46 0
47 0
48 0
49 0
50 0
51 0
52 0
53 1
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 0
62 1
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 0
72 1
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 0
83 1
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 0
95 1
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 0
108 1
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0

## index
14
## name
passed(CS53)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(14) ~($s(29))) : Bernoulli(+(*(/(+($s(17) $s(24) $s(27) $s(28)) $c(5)) $c(0.8)) $c(0.2)))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 1
18 0
19 1
20 0
21 0
22 1
23 0
24 0
25 0
26 1
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0
50 0
51 0
52 1
53 0
54 0
55 0
56 0
57 0
58 0
59 0
60 0
61 1
62 0
63 0
64 0
65 0
66 0
67 0
68 0
69 0
70 0
71 1
72 0
73 0
74 0
75 0
76 0
77 0
78 0
79 0
80 0
81 0
82 1
83 0
84 0
85 0
86 0
87 0
88 0
89 0
90 0
91 0
92 0
93 0
94 1
95 0
96 0
97 0
98 0
99 0
100 0
101 0
102 0
103 0
104 0
105 0
106 0
107 1
108 0
109 0
110 0
111 0
112 0
113 0
114 0
115 0
116 0
117 0
118 0
119 0
120 0



#####REWARD#####
## formula
+(*(and($a(0) ~($s(0))) $c(-1)) *(and($a(1) ~($s(1))) $c(-1)) *(and($a(2) ~($s(2))) $c(-1)) *(and($a(3) ~($s(3))) $c(-1)) *(and($a(4) ~($s(4))) $c(-1)) *(and($a(5) ~($s(5))) $c(-1)) *(and($a(6) ~($s(6))) $c(-1)) *(and($a(7) ~($s(7))) $c(-1)) *(and($a(8) ~($s(8))) $c(-1)) *(and($a(9) ~($s(9))) $c(-1)) *(and($a(10) ~($s(10))) $c(-1)) *(and($a(11) ~($s(11))) $c(-1)) *(and($a(12) ~($s(12))) $c(-1)) *(and($a(13) ~($s(13))) $c(-1)) *(and($a(14) ~($s(14))) $c(-1)) *(and($a(0) $s(0)) $c(-2)) *(and($a(1) $s(1)) $c(-2)) *(and($a(2) $s(2)) $c(-2)) *(and($a(3) $s(3)) $c(-2)) *(and($a(4) $s(4)) $c(-2)) *(and($a(5) $s(5)) $c(-2)) *(and($a(6) $s(6)) $c(-2)) *(and($a(7) $s(7)) $c(-2)) *(and($a(8) $s(8)) $c(-2)) *(and($a(9) $s(9)) $c(-2)) *(and($a(10) $s(10)) $c(-2)) *(and($a(11) $s(11)) $c(-2)) *(and($a(12) $s(12)) $c(-2)) *(and($a(13) $s(13)) $c(-2)) *(and($a(14) $s(14)) $c(-2)) *(~(and($s(15) $s(16) $s(21) $s(22) $s(23) $s(28) $s(29))) $c(-5)))
## min
-11
## max
-0
## independent from actions
0
## hash index
30
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20
21 21
22 22
23 23
24 24
25 25
26 26
27 27
28 28
29 29
30 30
31 31
32 32
33 33
34 34
35 35
36 36
37 37
38 38
39 39
40 40
41 41
42 42
43 43
44 44
45 45
46 46
47 47
48 48
49 49
50 50
51 51
52 52
53 53
54 54
55 55
56 56
57 57
58 58
59 59
60 60
61 61
62 62
63 63
64 64
65 65
66 66
67 67
68 68
69 69
70 70
71 71
72 72
73 73
74 74
75 75
76 76
77 77
78 78
79 79
80 80
81 81
82 82
83 83
84 84
85 85
86 86
87 87
88 88
89 89
90 90
91 91
92 92
93 93
94 94
95 95
96 96
97 97
98 98
99 99
100 100
101 101
102 102
103 103
104 104
105 105
106 106
107 107
108 108
109 109
110 110
111 111
112 112
113 113
114 114
115 115
116 116
117 117
118 118
119 119
120 120


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 
## relevant preconditions
0


## index
28
## state
0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 
## relevant preconditions
0


## index
29
## state
0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 
## relevant preconditions
0


## index
30
## state
0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 
## relevant preconditions
0


## index
31
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 
## relevant preconditions
0


## index
32
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 
## relevant preconditions
0


## index
33
## state
0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 
## relevant preconditions
0


## index
34
## state
0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 
## relevant preconditions
0


## index
35
## state
0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 
## relevant preconditions
0


## index
36
## state
0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 
## relevant preconditions
0


## index
37
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
38
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
39
## state
0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
40
## state
0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
41
## state
0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
42
## state
0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
43
## state
0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
44
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
45
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
46
## state
0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
47
## state
0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
48
## state
0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
49
## state
0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
50
## state
0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
51
## state
0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
52
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
53
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
54
## state
0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
55
## state
0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
56
## state
0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
57
## state
0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
58
## state
0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
59
## state
0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
60
## state
0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
61
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
62
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
63
## state
0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
64
## state
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
65
## state
0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
66
## state
0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
67
## state
0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
68
## state
0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
69
## state
0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
70
## state
0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
71
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
72
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
73
## state
0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
74
## state
0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
75
## state
0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
76
## state
0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
77
## state
0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
78
## state
0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
79
## state
0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
80
## state
0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
81
## state
0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
82
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
83
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
84
## state
0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
85
## state
0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
86
## state
0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
87
## state
0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
88
## state
0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
89
## state
0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
90
## state
0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
91
## state
0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
92
## state
0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
93
## state
0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
94
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
95
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
96
## state
0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
97
## state
0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
98
## state
0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
99
## state
0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
100
## state
0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
101
## state
0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
102
## state
0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
103
## state
0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
104
## state
0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
105
## state
0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
106
## state
0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
107
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
108
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
109
## state
1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
110
## state
1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
111
## state
1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
112
## state
1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
113
## state
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
114
## state
1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
115
## state
1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
116
## state
1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
117
## state
1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
118
## state
1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
119
## state
1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
120
## state
1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
0 2
30 121
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 2
30 242
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
2 2
30 484
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
3 2
30 968
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
4 2
30 1936
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
5 2
30 3872
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
6 2
30 7744
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
7 2
30 15488
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
8 2
30 30976
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
9 2
30 61952
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
10 2
30 123904
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
11 2
30 247808
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
12 2
30 495616
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
13 2
30 991232
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
14 2
30 1982464
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
15 2
18 2
22 2
24 2
25 2
28 2
30 3964928
## kleene state fluent hash keys (first line is the number of keys)
7
29368000 29042352
18 2
22 2
24 2
25 2
28 2
30 1736217747

## index
1
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
16 2
18 4
19 2
30 7929856
## kleene state fluent hash keys (first line is the number of keys)
4
0 2
18 6
19 2
30 5208653241

## index
2
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
17 2
18 8
19 4
20 2
23 2
24 4
29 2
## kleene state fluent hash keys (first line is the number of keys)
7
29050656 29047664
18 18
19 6
20 2
23 2
24 6
29 2

## index
3
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
18 16
19 8
20 4
21 2
23 4
25 4
## kleene state fluent hash keys (first line is the number of keys)
6
18 54
19 18
20 6
21 2
23 6
25 6

## index
4
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
19 16
20 8
21 4
22 4
24 8
## kleene state fluent hash keys (first line is the number of keys)
5
29042352 29055152
20 18
21 6
22 6
24 18

## index
5
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
20 16
21 8
23 8
24 16
27 2
## kleene state fluent hash keys (first line is the number of keys)
5
20 54
21 18
23 18
24 54
27 2

## index
6
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
21 16
22 8
28 4
30 15859712
## kleene state fluent hash keys (first line is the number of keys)
4
29029696 54
22 18
28 6
30 15625959723

## index
7
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 16
25 8
26 2
30 31719424
## kleene state fluent hash keys (first line is the number of keys)
4
29058400 54
25 18
26 2
30 46877879169

## index
8
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
23 16
27 4
30 63438848
## kleene state fluent hash keys (first line is the number of keys)
3
29052928 54
27 6
30 140633637507

## index
9
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
24 32
29 4
## kleene state fluent hash keys (first line is the number of keys)
2
29067168 162
29 6

## index
10
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
25 16
26 4
28 8
## kleene state fluent hash keys (first line is the number of keys)
3
29065776 54
26 6
28 18

## index
11
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
1
26 8
## kleene state fluent hash keys (first line is the number of keys)
1
0 18

## index
12
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
27 8
29 8
## kleene state fluent hash keys (first line is the number of keys)
2
29065856 18
29 18

## index
13
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
28 16
29 16
30 126877696
## kleene state fluent hash keys (first line is the number of keys)
3
29058480 54
29 54
30 421900912521

## index
14
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
29 32
30 253755392
## kleene state fluent hash keys (first line is the number of keys)
2
29035952 162
30 1265702737563

