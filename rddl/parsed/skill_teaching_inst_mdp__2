#####TASK##### Here
## name
skill_teaching_inst_mdp__2
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
8
## number of prob state fluents
4
## number of preconds
0
## number of actions
5
## number of hashing functions
13
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
askProb(s0)
## number of values
2
## values
0 false
1 true

## index
1
## name
askProb(s1)
## number of values
2
## values
0 false
1 true

## index
2
## name
giveHint(s0)
## number of values
2
## values
0 false
1 true

## index
3
## name
giveHint(s1)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
hintDelayVar(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(6)) ~($s(7)) $a(2))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0

## index
1
## name
hintDelayVar(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(6)) ~($s(7)) $a(3))
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0

## index
2
## name
hintedRight(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(6)) ~($s(7)) $a(2))
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0

## index
3
## name
hintedRight(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(6)) ~($s(7)) $a(3))
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0

## index
4
## name
proficiencyMed(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(6)) $s(4)) : $c(1)) (and($s(6) $s(2)) : $c(1)) (and($s(6) $s(8)) : $c(1)) ($s(10) : $c(1)) ($c(1) : and($s(4) $s(6) $s(0))) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
5
## name
proficiencyMed(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(7)) $s(5)) : $c(1)) (and($s(7) $s(3)) : $c(1)) (and($s(7) $s(9)) : $c(1)) ($s(11) : $c(1)) ($c(1) : and($s(5) $s(7) $s(1))) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
6
## name
updateTurn(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(6)) ~($s(7)) or($a(0) $a(2)))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 2

## index
7
## name
updateTurn(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(6)) ~($s(7)) or($a(1) $a(3)))
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
answeredRight(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(6)) ~($s(7)) $a(0) $s(10)) : Bernoulli($c(0.8867099))) (and(~($s(6)) ~($s(7)) $a(0) $s(4)) : Bernoulli($c(0.78803456))) (and(~($s(6)) ~($s(7)) $a(0) $s(4) $a(0)) : $c(0)) (and(~($s(6)) ~($s(7)) $a(0)) : Bernoulli($c(0.6266419))) ($c(1) : $c(0)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1

## index
1
## name
answeredRight(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(6)) ~($s(7)) $a(1) $s(11)) : Bernoulli($c(0.882593))) (and(~($s(6)) ~($s(7)) $a(1) $s(5)) : Bernoulli($c(0.6979286))) (and(~($s(6)) ~($s(7)) $a(1) $s(5) $a(1)) : $c(0)) (and(~($s(6)) ~($s(7)) $a(1)) : Bernoulli($c(0.692982))) ($c(1) : $c(0)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0

## index
2
## name
proficiencyHigh(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(6)) ~($s(7))) : $s(10)) (and(~($s(6)) $s(10)) : Bernoulli($c(0.965098968148231))) (and($s(4) $s(6) $s(8)) : $c(1)) ($c(1) : and($s(10) $s(6) or($s(0) $s(8)))) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
3
## name
proficiencyHigh(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(6)) ~($s(7))) : $s(11)) (and(~($s(7)) $s(11)) : Bernoulli($c(0.971175396442413))) (and($s(5) $s(7) $s(9)) : $c(1)) ($c(1) : and($s(11) $s(7) or($s(1) $s(9)))) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0



#####REWARD#####
## formula
+(*($s(10) $c(1.4431845)) *($s(11) $c(1.4221066)) -($c(0) *(~($s(4)) $c(1.4431845))) -($c(0) *(~($s(5)) $c(1.4221066))))
## min
-2.8652911
## max
2.8652911
## independent from actions
1
## hash index
12
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
4 1
10 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
5 1
11 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
1
4 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
1
5 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
4 4
8 2
10 2
12 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
5 4
9 2
11 2
12 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
0 2
1 2
2 2
3 2
4 8
6 3
7 3
8 4
9 4
10 4
11 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
0 4
1 4
2 4
3 4
5 8
6 6
7 6
8 8
9 8
10 8
11 8
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
4 16
10 16
## kleene state fluent hash keys (first line is the number of keys)
2
27453712 81
10 81

## index
1
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
5 16
11 16
## kleene state fluent hash keys (first line is the number of keys)
2
27443344 81
11 81

## index
2
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
4 32
8 16
10 32
12 4
## kleene state fluent hash keys (first line is the number of keys)
4
27455344 243
8 54
10 243
12 9

## index
3
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
5 32
9 16
11 32
12 8
## kleene state fluent hash keys (first line is the number of keys)
4
27453856 243
9 54
11 243
12 27

