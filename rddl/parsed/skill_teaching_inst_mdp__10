#####TASK##### Here
## name
skill_teaching_inst_mdp__10
## horizon
40
## discount factor
1
## number of action fluents
16
## number of det state fluents
32
## number of prob state fluents
16
## number of preconds
0
## number of actions
17
## number of hashing functions
49
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
askProb(s0)
## number of values
2
## values
0 false
1 true

## index
1
## name
askProb(s1)
## number of values
2
## values
0 false
1 true

## index
2
## name
askProb(s2)
## number of values
2
## values
0 false
1 true

## index
3
## name
askProb(s3)
## number of values
2
## values
0 false
1 true

## index
4
## name
askProb(s4)
## number of values
2
## values
0 false
1 true

## index
5
## name
askProb(s5)
## number of values
2
## values
0 false
1 true

## index
6
## name
askProb(s6)
## number of values
2
## values
0 false
1 true

## index
7
## name
askProb(s7)
## number of values
2
## values
0 false
1 true

## index
8
## name
giveHint(s0)
## number of values
2
## values
0 false
1 true

## index
9
## name
giveHint(s1)
## number of values
2
## values
0 false
1 true

## index
10
## name
giveHint(s2)
## number of values
2
## values
0 false
1 true

## index
11
## name
giveHint(s3)
## number of values
2
## values
0 false
1 true

## index
12
## name
giveHint(s4)
## number of values
2
## values
0 false
1 true

## index
13
## name
giveHint(s5)
## number of values
2
## values
0 false
1 true

## index
14
## name
giveHint(s6)
## number of values
2
## values
0 false
1 true

## index
15
## name
giveHint(s7)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
hintDelayVar(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(8))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
1
## name
hintDelayVar(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(9))
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
2
## name
hintDelayVar(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(10))
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
3
## name
hintDelayVar(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(11))
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
4
## name
hintDelayVar(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(12))
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
5
## name
hintDelayVar(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(13))
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
6
## name
hintDelayVar(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(14))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
7
## name
hintDelayVar(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(15))
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
8
## name
hintedRight(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(8))
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
9
## name
hintedRight(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(9))
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
10
## name
hintedRight(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(10) $s(40) $s(41))
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
11
## name
hintedRight(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(11) $s(40) $s(41) $s(42))
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
12
## name
hintedRight(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(12) $s(40) $s(41) $s(43))
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
13
## name
hintedRight(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(13) $s(40) $s(41) $s(43))
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
14
## name
hintedRight(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(14) $s(41))
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
15
## name
hintedRight(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(15) $s(45))
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
16
## name
proficiencyMed(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) $s(16)) : $c(1)) (and($s(24) $s(8)) : $c(1)) (and($s(24) $s(32)) : $c(1)) ($s(40) : $c(1)) ($c(1) : and($s(16) $s(24) $s(0))) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
17
## name
proficiencyMed(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(25)) $s(17)) : $c(1)) (and($s(25) $s(9)) : $c(1)) (and($s(25) $s(33)) : $c(1)) ($s(41) : $c(1)) ($c(1) : and($s(17) $s(25) $s(1))) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
18
## name
proficiencyMed(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(26)) $s(18)) : $c(1)) (and($s(26) $s(10)) : $c(1)) (and($s(26) $s(34)) : $c(1)) ($s(42) : $c(1)) ($c(1) : and($s(18) $s(26) $s(2))) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
19
## name
proficiencyMed(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(27)) $s(19)) : $c(1)) (and($s(27) $s(11)) : $c(1)) (and($s(27) $s(35)) : $c(1)) ($s(43) : $c(1)) ($c(1) : and($s(19) $s(27) $s(3))) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
20
## name
proficiencyMed(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(28)) $s(20)) : $c(1)) (and($s(28) $s(12)) : $c(1)) (and($s(28) $s(36)) : $c(1)) ($s(44) : $c(1)) ($c(1) : and($s(20) $s(28) $s(4))) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
21
## name
proficiencyMed(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(29)) $s(21)) : $c(1)) (and($s(29) $s(13)) : $c(1)) (and($s(29) $s(37)) : $c(1)) ($s(45) : $c(1)) ($c(1) : and($s(21) $s(29) $s(5))) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
22
## name
proficiencyMed(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(30)) $s(22)) : $c(1)) (and($s(30) $s(14)) : $c(1)) (and($s(30) $s(38)) : $c(1)) ($s(46) : $c(1)) ($c(1) : and($s(22) $s(30) $s(6))) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
23
## name
proficiencyMed(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(31)) $s(23)) : $c(1)) (and($s(31) $s(15)) : $c(1)) (and($s(31) $s(39)) : $c(1)) ($s(47) : $c(1)) ($c(1) : and($s(23) $s(31) $s(7))) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
24
## name
updateTurn(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(0) $a(8)))
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 2

## index
25
## name
updateTurn(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(1) $a(9)))
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 2
16 0

## index
26
## name
updateTurn(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(2) $a(10)))
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 2
15 0
16 0

## index
27
## name
updateTurn(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(3) $a(11)))
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 2
14 0
15 0
16 0

## index
28
## name
updateTurn(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(4) $a(12)))
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 2
13 0
14 0
15 0
16 0

## index
29
## name
updateTurn(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(5) $a(13)))
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 2
12 0
13 0
14 0
15 0
16 0

## index
30
## name
updateTurn(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(6) $a(14)))
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 2
11 0
12 0
13 0
14 0
15 0
16 0

## index
31
## name
updateTurn(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) or($a(7) $a(15)))
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 2
10 0
11 0
12 0
13 0
14 0
15 0
16 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
answeredRight(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(0) $s(40)) : Bernoulli($c(0.86250937))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(0) $s(16)) : Bernoulli($c(0.7966592))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(0) $s(16) $a(0)) : $c(0)) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(0)) : Bernoulli($c(0.5379598))) ($c(1) : $c(0)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1

## index
1
## name
answeredRight(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(1) $s(41)) : Bernoulli($c(0.9738445))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(1) $s(17)) : Bernoulli($c(0.75465524))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(1) $s(17) $a(1)) : $c(0)) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(1)) : Bernoulli($c(0.5750398))) ($c(1) : $c(0)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0

## index
2
## name
answeredRight(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(2) $s(42)) : Bernoulli($c(0.91557336))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(2) $s(18) $s(40) $s(41)) : Bernoulli($c(0.7140531))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(2) $s(18) $a(2)) : Bernoulli($c(0.63604040145874))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(2) $s(40) $s(41)) : Bernoulli($c(0.66695064))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(2) $a(2)) : Bernoulli($c(0.588744342327118))) ($c(1) : $c(0)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0

## index
3
## name
answeredRight(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(3) $s(43)) : Bernoulli($c(0.86368424))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(3) $s(19) $s(40) $s(41) $s(42)) : Bernoulli($c(0.78798556))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(3) $s(19) $a(3)) : Bernoulli($c(0.745916765928268))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(3) $s(40) $s(41) $s(42)) : Bernoulli($c(0.62654245))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(3) $a(3)) : Bernoulli($c(0.591159036755562))) ($c(1) : $c(0)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0

## index
4
## name
answeredRight(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(4) $s(44)) : Bernoulli($c(0.850513))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(4) $s(20) $s(40) $s(41) $s(43)) : Bernoulli($c(0.73045695))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(4) $s(20) $a(4)) : Bernoulli($c(0.445496401190758))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(4) $s(40) $s(41) $s(43)) : Bernoulli($c(0.73045695))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(4) $a(4)) : Bernoulli($c(0.444308218359947))) ($c(1) : $c(0)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0

## index
5
## name
answeredRight(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(5) $s(45)) : Bernoulli($c(0.946712))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(5) $s(21) $s(40) $s(41) $s(43)) : Bernoulli($c(0.74796265))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(5) $s(21) $a(5)) : Bernoulli($c(0.609051641821861))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(5) $s(40) $s(41) $s(43)) : Bernoulli($c(0.5595663))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(5) $a(5)) : Bernoulli($c(0.470329418778419))) ($c(1) : $c(0)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0

## index
6
## name
answeredRight(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(6) $s(46)) : Bernoulli($c(0.94299585))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(6) $s(22) $s(41)) : Bernoulli($c(0.68700767))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(6) $s(22) $a(6)) : Bernoulli($c(0.665524584054947))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(6) $s(41)) : Bernoulli($c(0.58252585))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(6) $a(6)) : Bernoulli($c(0.501619637012482))) ($c(1) : $c(0)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0

## index
7
## name
answeredRight(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(7) $s(47)) : Bernoulli($c(0.9716682))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(7) $s(23) $s(45)) : Bernoulli($c(0.7564045))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(7) $s(23) $a(7)) : Bernoulli($c(0.696088790893555))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(7) $s(45)) : Bernoulli($c(0.56091326))) (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31)) $a(7) $a(7)) : Bernoulli($c(0.518845891952515))) ($c(1) : $c(0)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
8
## name
proficiencyHigh(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(40)) (and(~($s(24)) $s(40)) : Bernoulli($c(0.952764245867729))) (and($s(16) $s(24) $s(32)) : $c(1)) ($c(1) : and($s(40) $s(24) or($s(0) $s(32)))) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
9
## name
proficiencyHigh(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(41)) (and(~($s(25)) $s(41)) : Bernoulli($c(0.968918794393539))) (and($s(17) $s(25) $s(33)) : $c(1)) ($c(1) : and($s(41) $s(25) or($s(1) $s(33)))) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
10
## name
proficiencyHigh(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(42)) (and(~($s(26)) $s(42)) : Bernoulli($c(0.987853488326073))) (and($s(18) $s(26) $s(34)) : $c(1)) ($c(1) : and($s(42) $s(26) or($s(2) $s(34)))) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
11
## name
proficiencyHigh(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(43)) (and(~($s(27)) $s(43)) : Bernoulli($c(0.99))) (and($s(19) $s(27) $s(35)) : $c(1)) ($c(1) : and($s(43) $s(27) or($s(3) $s(35)))) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
12
## name
proficiencyHigh(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(44)) (and(~($s(28)) $s(44)) : Bernoulli($c(0.979324394464493))) (and($s(20) $s(28) $s(36)) : $c(1)) ($c(1) : and($s(44) $s(28) or($s(4) $s(36)))) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
13
## name
proficiencyHigh(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(45)) (and(~($s(29)) $s(45)) : Bernoulli($c(0.99))) (and($s(21) $s(29) $s(37)) : $c(1)) ($c(1) : and($s(45) $s(29) or($s(5) $s(37)))) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
14
## name
proficiencyHigh(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(46)) (and(~($s(30)) $s(46)) : Bernoulli($c(0.99))) (and($s(22) $s(30) $s(38)) : $c(1)) ($c(1) : and($s(46) $s(30) or($s(6) $s(38)))) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
15
## name
proficiencyHigh(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(24)) ~($s(25)) ~($s(26)) ~($s(27)) ~($s(28)) ~($s(29)) ~($s(30)) ~($s(31))) : $s(47)) (and(~($s(31)) $s(47)) : Bernoulli($c(0.968398353457451))) (and($s(23) $s(31) $s(39)) : $c(1)) ($c(1) : and($s(47) $s(31) or($s(7) $s(39)))) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0



#####REWARD#####
## formula
+(*($s(40) $c(1.3225485)) *($s(41) $c(1.3837464)) *($s(42) $c(2.206152)) *($s(43) $c(3.1999547)) *($s(44) $c(4.0810323)) *($s(45) $c(4.3929977)) *($s(46) $c(2.0293026)) *($s(47) $c(5.129872)) -($c(0) *(~($s(16)) $c(1.3225485))) -($c(0) *(~($s(17)) $c(1.3837464))) -($c(0) *(~($s(18)) $c(2.206152))) -($c(0) *(~($s(19)) $c(3.1999547))) -($c(0) *(~($s(20)) $c(4.0810323))) -($c(0) *(~($s(21)) $c(4.3929977))) -($c(0) *(~($s(22)) $c(2.0293026))) -($c(0) *(~($s(23)) $c(5.129872))))
## min
-23.7456062
## max
23.7456062
## independent from actions
1
## hash index
48
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
2
16 1
40 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
2
17 1
41 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
2
18 1
42 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
2
19 1
43 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
2
20 1
44 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
2
21 1
45 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
2
22 1
46 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
2
23 1
47 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
1
16 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
1
17 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
1
18 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
1
19 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
1
20 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
1
21 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
1
22 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
1
23 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
4
16 4
32 2
40 2
48 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
4
17 4
33 2
41 2
48 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
4
18 4
34 2
42 2
48 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
4
19 4
35 2
43 2
48 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
4
20 4
36 2
44 2
48 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
4
21 4
37 2
45 2
48 32
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
4
22 4
38 2
46 2
48 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
4
23 4
39 2
47 2
48 128
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
41
0 2
1 2
2 2
3 2
4 2
5 2
6 2
7 2
8 2
9 2
10 2
11 2
12 2
13 2
14 2
15 2
16 8
24 3
25 3
26 3
27 3
28 3
29 3
30 3
31 3
32 4
33 4
34 4
35 4
36 4
37 4
38 4
39 4
40 4
41 4
42 4
43 4
44 4
45 4
46 4
47 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
41
0 4
1 4
2 4
3 4
4 4
5 4
6 4
7 4
8 4
9 4
10 4
11 4
12 4
13 4
14 4
15 4
17 8
24 6
25 6
26 6
27 6
28 6
29 6
30 6
31 6
32 8
33 8
34 8
35 8
36 8
37 8
38 8
39 8
40 8
41 8
42 8
43 8
44 8
45 8
46 8
47 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
41
0 8
1 8
2 8
3 8
4 8
5 8
6 8
7 8
8 8
9 8
10 8
11 8
12 8
13 8
14 8
15 8
18 8
24 12
25 12
26 12
27 12
28 12
29 12
30 12
31 12
32 16
33 16
34 16
35 16
36 16
37 16
38 16
39 16
40 16
41 16
42 16
43 16
44 16
45 16
46 16
47 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
41
0 16
1 16
2 16
3 16
4 16
5 16
6 16
7 16
8 16
9 16
10 16
11 16
12 16
13 16
14 16
15 16
19 8
24 24
25 24
26 24
27 24
28 24
29 24
30 24
31 24
32 32
33 32
34 32
35 32
36 32
37 32
38 32
39 32
40 32
41 32
42 32
43 32
44 32
45 32
46 32
47 32
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
41
0 32
1 32
2 32
3 32
4 32
5 32
6 32
7 32
8 32
9 32
10 32
11 32
12 32
13 32
14 32
15 32
20 8
24 48
25 48
26 48
27 48
28 48
29 48
30 48
31 48
32 64
33 64
34 64
35 64
36 64
37 64
38 64
39 64
40 64
41 64
42 64
43 64
44 64
45 64
46 64
47 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
41
0 64
1 64
2 64
3 64
4 64
5 64
6 64
7 64
8 64
9 64
10 64
11 64
12 64
13 64
14 64
15 64
21 8
24 96
25 96
26 96
27 96
28 96
29 96
30 96
31 96
32 128
33 128
34 128
35 128
36 128
37 128
38 128
39 128
40 128
41 128
42 128
43 128
44 128
45 128
46 128
47 128
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
41
0 128
1 128
2 128
3 128
4 128
5 128
6 128
7 128
8 128
9 128
10 128
11 128
12 128
13 128
14 128
15 128
22 8
24 192
25 192
26 192
27 192
28 192
29 192
30 192
31 192
32 256
33 256
34 256
35 256
36 256
37 256
38 256
39 256
40 256
41 256
42 256
43 256
44 256
45 256
46 256
47 256
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
41
0 256
1 256
2 256
3 256
4 256
5 256
6 256
7 256
8 256
9 256
10 256
11 256
12 256
13 256
14 256
15 256
23 8
24 384
25 384
26 384
27 384
28 384
29 384
30 384
31 384
32 512
33 512
34 512
35 512
36 512
37 512
38 512
39 512
40 512
41 512
42 512
43 512
44 512
45 512
46 512
47 512
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
2
16 16
40 1024
## kleene state fluent hash keys (first line is the number of keys)
2
14728368 81
40 59049

## index
1
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
2
17 16
41 1024
## kleene state fluent hash keys (first line is the number of keys)
2
14958256 81
41 59049

## index
2
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
2
18 16
42 1024
## kleene state fluent hash keys (first line is the number of keys)
2
14958544 81
42 59049

## index
3
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
2
19 16
43 1024
## kleene state fluent hash keys (first line is the number of keys)
2
14958640 81
43 59049

## index
4
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
2
20 16
44 1024
## kleene state fluent hash keys (first line is the number of keys)
2
15189344 81
44 59049

## index
5
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
2
21 16
45 1024
## kleene state fluent hash keys (first line is the number of keys)
2
15189216 81
45 59049

## index
6
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
2
22 16
46 1024
## kleene state fluent hash keys (first line is the number of keys)
2
14751824 81
46 59049

## index
7
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
2
23 16
47 1024
## kleene state fluent hash keys (first line is the number of keys)
2
15388544 81
47 59049

## index
8
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
12
10 512
11 512
12 512
13 512
16 32
32 1024
34 1024
35 1024
36 1024
37 1024
40 2048
48 256
## kleene state fluent hash keys (first line is the number of keys)
12
15595024 15387312
11 13122
12 13122
13 13122
16 243
32 39366
34 39366
35 39366
36 39366
37 39366
40 177147
48 6561

## index
9
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
14
10 1024
11 1024
12 1024
13 1024
14 512
17 32
33 1024
34 2048
35 2048
36 2048
37 2048
38 1024
41 2048
48 512
## kleene state fluent hash keys (first line is the number of keys)
14
15388128 14902880
11 39366
12 39366
13 39366
14 13122
17 243
33 39366
34 118098
35 118098
36 118098
37 118098
38 39366
41 177147
48 19683

## index
10
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
6
11 2048
18 32
34 4096
35 4096
42 2048
48 1024
## kleene state fluent hash keys (first line is the number of keys)
6
11 118098
18 243
34 354294
35 354294
42 177147
48 59049

## index
11
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
8
12 2048
13 2048
19 32
35 8192
36 4096
37 4096
43 2048
48 2048
## kleene state fluent hash keys (first line is the number of keys)
8
14902880 14896944
13 118098
19 243
35 1062882
36 354294
37 354294
43 177147
48 177147

## index
12
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
4
20 32
36 8192
44 2048
48 4096
## kleene state fluent hash keys (first line is the number of keys)
4
14900640 243
36 1062882
44 177147
48 531441

## index
13
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
6
15 512
21 32
37 8192
39 1024
45 2048
48 8192
## kleene state fluent hash keys (first line is the number of keys)
6
14746304 140291593194360
21 243
37 1062882
39 39366
45 177147
48 1594323

## index
14
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
4
22 32
38 2048
46 2048
48 16384
## kleene state fluent hash keys (first line is the number of keys)
4
14895536 243
38 118098
46 177147
48 4782969

## index
15
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
4
23 32
39 2048
47 2048
48 32768
## kleene state fluent hash keys (first line is the number of keys)
4
14900720 243
39 118098
47 177147
48 14348907

