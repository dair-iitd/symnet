#####TASK##### Here
## name
tamarisk_inst_mdp__8
## horizon
40
## discount factor
1
## number of action fluents
14
## number of det state fluents
0
## number of prob state fluents
42
## number of preconds
0
## number of actions
15
## number of hashing functions
43
## initial state
1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 1 0 1 1 0 0 1 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
eradicate(r1)
## number of values
2
## values
0 false
1 true

## index
1
## name
eradicate(r2)
## number of values
2
## values
0 false
1 true

## index
2
## name
eradicate(r3)
## number of values
2
## values
0 false
1 true

## index
3
## name
eradicate(r4)
## number of values
2
## values
0 false
1 true

## index
4
## name
eradicate(r5)
## number of values
2
## values
0 false
1 true

## index
5
## name
eradicate(r6)
## number of values
2
## values
0 false
1 true

## index
6
## name
eradicate(r7)
## number of values
2
## values
0 false
1 true

## index
7
## name
restore(r1)
## number of values
2
## values
0 false
1 true

## index
8
## name
restore(r2)
## number of values
2
## values
0 false
1 true

## index
9
## name
restore(r3)
## number of values
2
## values
0 false
1 true

## index
10
## name
restore(r4)
## number of values
2
## values
0 false
1 true

## index
11
## name
restore(r5)
## number of values
2
## values
0 false
1 true

## index
12
## name
restore(r6)
## number of values
2
## values
0 false
1 true

## index
13
## name
restore(r7)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
native-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(0)) : Bernoulli($c(0.2))) (and(~($s(21)) $s(0) $a(7)) : $c(1)) (and(~($s(21)) ~($s(0)) $a(7)) : Bernoulli($c(0.9))) ($s(0) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(0))) : Bernoulli($c(0.1))) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
1
## name
native-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(1)) : Bernoulli($c(0.2))) (and(~($s(22)) $s(1) $a(7)) : $c(1)) (and(~($s(22)) ~($s(1)) $a(7)) : Bernoulli($c(0.9))) ($s(1) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(1))) : Bernoulli($c(0.1))) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
2
## name
native-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(2)) : Bernoulli($c(0.2))) (and(~($s(23)) $s(2) $a(7)) : $c(1)) (and(~($s(23)) ~($s(2)) $a(7)) : Bernoulli($c(0.9))) ($s(2) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(2))) : Bernoulli($c(0.1))) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
3
## name
native-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(3)) : Bernoulli($c(0.2))) (and(~($s(24)) $s(3) $a(8)) : $c(1)) (and(~($s(24)) ~($s(3)) $a(8)) : Bernoulli($c(0.9))) ($s(3) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(3))) : Bernoulli($c(0.1))) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
4
## name
native-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(4)) : Bernoulli($c(0.2))) (and(~($s(25)) $s(4) $a(8)) : $c(1)) (and(~($s(25)) ~($s(4)) $a(8)) : Bernoulli($c(0.9))) ($s(4) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(4))) : Bernoulli($c(0.1))) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
5
## name
native-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(5)) : Bernoulli($c(0.2))) (and(~($s(26)) $s(5) $a(8)) : $c(1)) (and(~($s(26)) ~($s(5)) $a(8)) : Bernoulli($c(0.9))) ($s(5) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(5))) : Bernoulli($c(0.1))) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
6
## name
native-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(6)) : Bernoulli($c(0.2))) (and(~($s(27)) $s(6) $a(9)) : $c(1)) (and(~($s(27)) ~($s(6)) $a(9)) : Bernoulli($c(0.9))) ($s(6) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(6))) : Bernoulli($c(0.1))) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
7
## name
native-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(7)) : Bernoulli($c(0.2))) (and(~($s(28)) $s(7) $a(9)) : $c(1)) (and(~($s(28)) ~($s(7)) $a(9)) : Bernoulli($c(0.9))) ($s(7) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(7))) : Bernoulli($c(0.1))) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
8
## name
native-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(8)) : Bernoulli($c(0.2))) (and(~($s(29)) $s(8) $a(9)) : $c(1)) (and(~($s(29)) ~($s(8)) $a(9)) : Bernoulli($c(0.9))) ($s(8) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(8))) : Bernoulli($c(0.1))) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
9
## name
native-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(9)) : Bernoulli($c(0.2))) (and(~($s(30)) $s(9) $a(10)) : $c(1)) (and(~($s(30)) ~($s(9)) $a(10)) : Bernoulli($c(0.9))) ($s(9) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(9))) : Bernoulli($c(0.1))) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
10
## name
native-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(10)) : Bernoulli($c(0.2))) (and(~($s(31)) $s(10) $a(10)) : $c(1)) (and(~($s(31)) ~($s(10)) $a(10)) : Bernoulli($c(0.9))) ($s(10) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(10))) : Bernoulli($c(0.1))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
11
## name
native-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(11)) : Bernoulli($c(0.2))) (and(~($s(32)) $s(11) $a(10)) : $c(1)) (and(~($s(32)) ~($s(11)) $a(10)) : Bernoulli($c(0.9))) ($s(11) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(11))) : Bernoulli($c(0.1))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
12
## name
native-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(12)) : Bernoulli($c(0.2))) (and(~($s(33)) $s(12) $a(11)) : $c(1)) (and(~($s(33)) ~($s(12)) $a(11)) : Bernoulli($c(0.9))) ($s(12) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(12))) : Bernoulli($c(0.1))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
13
## name
native-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(13)) : Bernoulli($c(0.2))) (and(~($s(34)) $s(13) $a(11)) : $c(1)) (and(~($s(34)) ~($s(13)) $a(11)) : Bernoulli($c(0.9))) ($s(13) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(13))) : Bernoulli($c(0.1))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
14
## name
native-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(14)) : Bernoulli($c(0.2))) (and(~($s(35)) $s(14) $a(11)) : $c(1)) (and(~($s(35)) ~($s(14)) $a(11)) : Bernoulli($c(0.9))) ($s(14) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(14))) : Bernoulli($c(0.1))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
15
## name
native-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(36) $s(15)) : Bernoulli($c(0.2))) (and(~($s(36)) $s(15) $a(12)) : $c(1)) (and(~($s(36)) ~($s(15)) $a(12)) : Bernoulli($c(0.9))) ($s(15) : Bernoulli($c(0.95))) (and(~($s(36)) ~($s(15))) : Bernoulli($c(0.1))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
16
## name
native-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(37) $s(16)) : Bernoulli($c(0.2))) (and(~($s(37)) $s(16) $a(12)) : $c(1)) (and(~($s(37)) ~($s(16)) $a(12)) : Bernoulli($c(0.9))) ($s(16) : Bernoulli($c(0.95))) (and(~($s(37)) ~($s(16))) : Bernoulli($c(0.1))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
17
## name
native-at(s6s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(38) $s(17)) : Bernoulli($c(0.2))) (and(~($s(38)) $s(17) $a(12)) : $c(1)) (and(~($s(38)) ~($s(17)) $a(12)) : Bernoulli($c(0.9))) ($s(17) : Bernoulli($c(0.95))) (and(~($s(38)) ~($s(17))) : Bernoulli($c(0.1))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
18
## name
native-at(s7s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(39) $s(18)) : Bernoulli($c(0.2))) (and(~($s(39)) $s(18) $a(13)) : $c(1)) (and(~($s(39)) ~($s(18)) $a(13)) : Bernoulli($c(0.9))) ($s(18) : Bernoulli($c(0.95))) (and(~($s(39)) ~($s(18))) : Bernoulli($c(0.1))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
19
## name
native-at(s7s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(40) $s(19)) : Bernoulli($c(0.2))) (and(~($s(40)) $s(19) $a(13)) : $c(1)) (and(~($s(40)) ~($s(19)) $a(13)) : Bernoulli($c(0.9))) ($s(19) : Bernoulli($c(0.95))) (and(~($s(40)) ~($s(19))) : Bernoulli($c(0.1))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
20
## name
native-at(s7s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(41) $s(20)) : Bernoulli($c(0.2))) (and(~($s(41)) $s(20) $a(13)) : $c(1)) (and(~($s(41)) ~($s(20)) $a(13)) : Bernoulli($c(0.9))) ($s(20) : Bernoulli($c(0.95))) (and(~($s(41)) ~($s(20))) : Bernoulli($c(0.1))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0

## index
21
## name
tamarisk-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(0)) : Bernoulli($c(0.8))) (and(~($s(21)) $a(0)) : $c(0)) (and($s(21) $a(0)) : Bernoulli($c(0.1))) ($s(21) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(0))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1

## index
22
## name
tamarisk-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(1)) : Bernoulli($c(0.8))) (and(~($s(22)) $a(0)) : $c(0)) (and($s(22) $a(0)) : Bernoulli($c(0.1))) ($s(22) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(1))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1

## index
23
## name
tamarisk-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(2)) : Bernoulli($c(0.8))) (and(~($s(23)) $a(0)) : $c(0)) (and($s(23) $a(0)) : Bernoulli($c(0.1))) ($s(23) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(2))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1

## index
24
## name
tamarisk-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(3)) : Bernoulli($c(0.8))) (and(~($s(24)) $a(1)) : $c(0)) (and($s(24) $a(1)) : Bernoulli($c(0.1))) ($s(24) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(3))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0

## index
25
## name
tamarisk-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(4)) : Bernoulli($c(0.8))) (and(~($s(25)) $a(1)) : $c(0)) (and($s(25) $a(1)) : Bernoulli($c(0.1))) ($s(25) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(4))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0

## index
26
## name
tamarisk-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(5)) : Bernoulli($c(0.8))) (and(~($s(26)) $a(1)) : $c(0)) (and($s(26) $a(1)) : Bernoulli($c(0.1))) ($s(26) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(5))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0

## index
27
## name
tamarisk-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(6)) : Bernoulli($c(0.8))) (and(~($s(27)) $a(2)) : $c(0)) (and($s(27) $a(2)) : Bernoulli($c(0.1))) ($s(27) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(6))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0

## index
28
## name
tamarisk-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(7)) : Bernoulli($c(0.8))) (and(~($s(28)) $a(2)) : $c(0)) (and($s(28) $a(2)) : Bernoulli($c(0.1))) ($s(28) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(7))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0

## index
29
## name
tamarisk-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(8)) : Bernoulli($c(0.8))) (and(~($s(29)) $a(2)) : $c(0)) (and($s(29) $a(2)) : Bernoulli($c(0.1))) ($s(29) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(8))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0

## index
30
## name
tamarisk-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(9)) : Bernoulli($c(0.8))) (and(~($s(30)) $a(3)) : $c(0)) (and($s(30) $a(3)) : Bernoulli($c(0.1))) ($s(30) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(9))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0

## index
31
## name
tamarisk-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(10)) : Bernoulli($c(0.8))) (and(~($s(31)) $a(3)) : $c(0)) (and($s(31) $a(3)) : Bernoulli($c(0.1))) ($s(31) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(10))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0

## index
32
## name
tamarisk-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(11)) : Bernoulli($c(0.8))) (and(~($s(32)) $a(3)) : $c(0)) (and($s(32) $a(3)) : Bernoulli($c(0.1))) ($s(32) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(11))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0

## index
33
## name
tamarisk-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(12)) : Bernoulli($c(0.8))) (and(~($s(33)) $a(4)) : $c(0)) (and($s(33) $a(4)) : Bernoulli($c(0.1))) ($s(33) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(12))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(36) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0

## index
34
## name
tamarisk-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(13)) : Bernoulli($c(0.8))) (and(~($s(34)) $a(4)) : $c(0)) (and($s(34) $a(4)) : Bernoulli($c(0.1))) ($s(34) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(13))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(36) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0

## index
35
## name
tamarisk-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(14)) : Bernoulli($c(0.8))) (and(~($s(35)) $a(4)) : $c(0)) (and($s(35) $a(4)) : Bernoulli($c(0.1))) ($s(35) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(14))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(36) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0

## index
36
## name
tamarisk-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(36) $s(15)) : Bernoulli($c(0.8))) (and(~($s(36)) $a(5)) : $c(0)) (and($s(36) $a(5)) : Bernoulli($c(0.1))) ($s(36) : Bernoulli($c(0.95))) (and(~($s(36)) ~($s(15))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(39) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0

## index
37
## name
tamarisk-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(37) $s(16)) : Bernoulli($c(0.8))) (and(~($s(37)) $a(5)) : $c(0)) (and($s(37) $a(5)) : Bernoulli($c(0.1))) ($s(37) : Bernoulli($c(0.95))) (and(~($s(37)) ~($s(16))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(39) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0

## index
38
## name
tamarisk-at(s6s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(38) $s(17)) : Bernoulli($c(0.8))) (and(~($s(38)) $a(5)) : $c(0)) (and($s(38) $a(5)) : Bernoulli($c(0.1))) ($s(38) : Bernoulli($c(0.95))) (and(~($s(38)) ~($s(17))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(39) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0

## index
39
## name
tamarisk-at(s7s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(39) $s(18)) : Bernoulli($c(0.8))) (and(~($s(39)) $a(6)) : $c(0)) (and($s(39) $a(6)) : Bernoulli($c(0.1))) ($s(39) : Bernoulli($c(0.95))) (and(~($s(39)) ~($s(18))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(40) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0

## index
40
## name
tamarisk-at(s7s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(40) $s(19)) : Bernoulli($c(0.8))) (and(~($s(40)) $a(6)) : $c(0)) (and($s(40) $a(6)) : Bernoulli($c(0.1))) ($s(40) : Bernoulli($c(0.95))) (and(~($s(40)) ~($s(19))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(39) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0

## index
41
## name
tamarisk-at(s7s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(41) $s(20)) : Bernoulli($c(0.8))) (and(~($s(41)) $a(6)) : $c(0)) (and($s(41) $a(6)) : Bernoulli($c(0.1))) ($s(41) : Bernoulli($c(0.95))) (and(~($s(41)) ~($s(20))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(39) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0



#####REWARD#####
## formula
+(*(or($s(21) $s(22) $s(23)) $c(-5)) *(or($s(24) $s(25) $s(26)) $c(-5)) *(or($s(27) $s(28) $s(29)) $c(-5)) *(or($s(30) $s(31) $s(32)) $c(-5)) *(or($s(33) $s(34) $s(35)) $c(-5)) *(or($s(36) $s(37) $s(38)) $c(-5)) *(or($s(39) $s(40) $s(41)) $c(-5)) *($s(21) $c(-0.5)) *($s(22) $c(-0.5)) *($s(23) $c(-0.5)) *($s(24) $c(-0.5)) *($s(25) $c(-0.5)) *($s(26) $c(-0.5)) *($s(27) $c(-0.5)) *($s(28) $c(-0.5)) *($s(29) $c(-0.5)) *($s(30) $c(-0.5)) *($s(31) $c(-0.5)) *($s(32) $c(-0.5)) *($s(33) $c(-0.5)) *($s(34) $c(-0.5)) *($s(35) $c(-0.5)) *($s(36) $c(-0.5)) *($s(37) $c(-0.5)) *($s(38) $c(-0.5)) *($s(39) $c(-0.5)) *($s(40) $c(-0.5)) *($s(41) $c(-0.5)) *(and(~($s(21)) ~($s(0))) $c(-0.25)) *(and(~($s(22)) ~($s(1))) $c(-0.25)) *(and(~($s(23)) ~($s(2))) $c(-0.25)) *(and(~($s(24)) ~($s(3))) $c(-0.25)) *(and(~($s(25)) ~($s(4))) $c(-0.25)) *(and(~($s(26)) ~($s(5))) $c(-0.25)) *(and(~($s(27)) ~($s(6))) $c(-0.25)) *(and(~($s(28)) ~($s(7))) $c(-0.25)) *(and(~($s(29)) ~($s(8))) $c(-0.25)) *(and(~($s(30)) ~($s(9))) $c(-0.25)) *(and(~($s(31)) ~($s(10))) $c(-0.25)) *(and(~($s(32)) ~($s(11))) $c(-0.25)) *(and(~($s(33)) ~($s(12))) $c(-0.25)) *(and(~($s(34)) ~($s(13))) $c(-0.25)) *(and(~($s(35)) ~($s(14))) $c(-0.25)) *(and(~($s(36)) ~($s(15))) $c(-0.25)) *(and(~($s(37)) ~($s(16))) $c(-0.25)) *(and(~($s(38)) ~($s(17))) $c(-0.25)) *(and(~($s(39)) ~($s(18))) $c(-0.25)) *(and(~($s(40)) ~($s(19))) $c(-0.25)) *(and(~($s(41)) ~($s(20))) $c(-0.25)) *($a(0) $c(-0.49)) *($a(1) $c(-0.49)) *($a(2) $c(-0.49)) *($a(3) $c(-0.49)) *($a(4) $c(-0.49)) *($a(5) $c(-0.49)) *($a(6) $c(-0.49)) *($a(7) $c(-0.9)) *($a(8) $c(-0.9)) *($a(9) $c(-0.9)) *($a(10) $c(-0.9)) *($a(11) $c(-0.9)) *($a(12) $c(-0.9)) *($a(13) $c(-0.9)) *(and($a(7) ~($s(21)) ~($s(0))) $c(-0.4)) *(and($a(7) ~($s(22)) ~($s(1))) $c(-0.4)) *(and($a(7) ~($s(23)) ~($s(2))) $c(-0.4)) *(and($a(8) ~($s(24)) ~($s(3))) $c(-0.4)) *(and($a(8) ~($s(25)) ~($s(4))) $c(-0.4)) *(and($a(8) ~($s(26)) ~($s(5))) $c(-0.4)) *(and($a(9) ~($s(27)) ~($s(6))) $c(-0.4)) *(and($a(9) ~($s(28)) ~($s(7))) $c(-0.4)) *(and($a(9) ~($s(29)) ~($s(8))) $c(-0.4)) *(and($a(10) ~($s(30)) ~($s(9))) $c(-0.4)) *(and($a(10) ~($s(31)) ~($s(10))) $c(-0.4)) *(and($a(10) ~($s(32)) ~($s(11))) $c(-0.4)) *(and($a(11) ~($s(33)) ~($s(12))) $c(-0.4)) *(and($a(11) ~($s(34)) ~($s(13))) $c(-0.4)) *(and($a(11) ~($s(35)) ~($s(14))) $c(-0.4)) *(and($a(12) ~($s(36)) ~($s(15))) $c(-0.4)) *(and($a(12) ~($s(37)) ~($s(16))) $c(-0.4)) *(and($a(12) ~($s(38)) ~($s(17))) $c(-0.4)) *(and($a(13) ~($s(39)) ~($s(18))) $c(-0.4)) *(and($a(13) ~($s(40)) ~($s(19))) $c(-0.4)) *(and($a(13) ~($s(41)) ~($s(20))) $c(-0.4)))
## min
-52.85
## max
-0
## independent from actions
0
## hash index
42
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
3
0 2
21 2
42 15
## kleene state fluent hash keys (first line is the number of keys)
2
0 2
21 2

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
3
1 2
22 2
42 30
## kleene state fluent hash keys (first line is the number of keys)
2
50281184 2
22 2

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
3
2 2
23 2
42 60
## kleene state fluent hash keys (first line is the number of keys)
2
50281408 2
23 2

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
3
3 2
24 2
42 120
## kleene state fluent hash keys (first line is the number of keys)
2
50296432 2
24 2

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
3
4 2
25 2
42 240
## kleene state fluent hash keys (first line is the number of keys)
2
50281776 2
25 2

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
3
5 2
26 2
42 480
## kleene state fluent hash keys (first line is the number of keys)
2
50312192 2
26 2

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
3
6 2
27 2
42 960
## kleene state fluent hash keys (first line is the number of keys)
2
50327776 2
27 2

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
3
7 2
28 2
42 1920
## kleene state fluent hash keys (first line is the number of keys)
2
50281584 2
28 2

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
3
8 2
29 2
42 3840
## kleene state fluent hash keys (first line is the number of keys)
2
50674304 2
29 2

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
3
9 2
30 2
42 7680
## kleene state fluent hash keys (first line is the number of keys)
2
50327200 2
30 2

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
3
10 2
31 2
42 15360
## kleene state fluent hash keys (first line is the number of keys)
2
50674352 2
31 2

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
3
11 2
32 2
42 30720
## kleene state fluent hash keys (first line is the number of keys)
2
51022016 2
32 2

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
3
12 2
33 2
42 61440
## kleene state fluent hash keys (first line is the number of keys)
2
50265344 2
33 2

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
3
13 2
34 2
42 122880
## kleene state fluent hash keys (first line is the number of keys)
2
50674608 2
34 2

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
3
14 2
35 2
42 245760
## kleene state fluent hash keys (first line is the number of keys)
2
50273264 2
35 2

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
3
15 2
36 2
42 491520
## kleene state fluent hash keys (first line is the number of keys)
2
50790336 2
36 2

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
3
16 2
37 2
42 983040
## kleene state fluent hash keys (first line is the number of keys)
2
50273312 2
37 2

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
3
17 2
38 2
42 1966080
## kleene state fluent hash keys (first line is the number of keys)
2
51369184 2
38 2

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
3
18 2
39 2
42 3932160
## kleene state fluent hash keys (first line is the number of keys)
2
50276784 2
39 2

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
3
19 2
40 2
42 7864320
## kleene state fluent hash keys (first line is the number of keys)
2
50270672 2
40 2

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
3
20 2
41 2
42 15728640
## kleene state fluent hash keys (first line is the number of keys)
2
51832624 2
41 2

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
8
0 4
21 4
22 4
23 4
24 4
25 4
26 4
42 31457280
## kleene state fluent hash keys (first line is the number of keys)
7
53079136 50296864
21 6
22 6
23 6
24 6
25 6
26 6

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
8
1 4
21 8
22 8
23 8
24 8
25 8
26 8
42 62914560
## kleene state fluent hash keys (first line is the number of keys)
7
50281232 50905920
21 18
22 18
23 18
24 18
25 18
26 18

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
8
2 4
21 16
22 16
23 16
24 16
25 16
26 16
42 125829120
## kleene state fluent hash keys (first line is the number of keys)
7
2 6
21 54
22 54
23 54
24 54
25 54
26 54

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
11
3 4
21 32
22 32
23 32
24 32
25 32
26 32
27 4
28 4
29 4
42 251658240
## kleene state fluent hash keys (first line is the number of keys)
10
50296864 50443104
21 162
22 162
23 162
24 162
25 162
26 162
27 6
28 6
29 6

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
11
4 4
21 64
22 64
23 64
24 64
25 64
26 64
27 8
28 8
29 8
42 503316480
## kleene state fluent hash keys (first line is the number of keys)
10
4 6
21 486
22 486
23 486
24 486
25 486
26 486
27 18
28 18
29 18

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
11
5 4
21 128
22 128
23 128
24 128
25 128
26 128
27 16
28 16
29 16
42 1006632960
## kleene state fluent hash keys (first line is the number of keys)
10
50905920 51253424
21 1458
22 1458
23 1458
24 1458
25 1458
26 1458
27 54
28 54
29 54

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
11
6 4
24 256
25 256
26 256
27 32
28 32
29 32
30 4
31 4
32 4
42 2013265920
## kleene state fluent hash keys (first line is the number of keys)
10
50443104 51600752
24 4374
25 4374
26 4374
27 162
28 162
29 162
30 6
31 6
32 6

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
11
7 4
24 512
25 512
26 512
27 64
28 64
29 64
30 8
31 8
32 8
42 4026531840
## kleene state fluent hash keys (first line is the number of keys)
10
7 6
24 13122
25 13122
26 13122
27 486
28 486
29 486
30 18
31 18
32 18

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
11
8 4
24 1024
25 1024
26 1024
27 128
28 128
29 128
30 16
31 16
32 16
42 8053063680
## kleene state fluent hash keys (first line is the number of keys)
10
8 6
24 39366
25 39366
26 39366
27 1458
28 1458
29 1458
30 54
31 54
32 54

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
11
9 4
27 256
28 256
29 256
30 32
31 32
32 32
33 4
34 4
35 4
42 16106127360
## kleene state fluent hash keys (first line is the number of keys)
10
51253424 51947936
27 4374
28 4374
29 4374
30 162
31 162
32 162
33 6
34 6
35 6

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
11
10 4
27 512
28 512
29 512
30 64
31 64
32 64
33 8
34 8
35 8
42 32212254720
## kleene state fluent hash keys (first line is the number of keys)
10
10 6
27 13122
28 13122
29 13122
30 486
31 486
32 486
33 18
34 18
35 18

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
11
11 4
27 1024
28 1024
29 1024
30 128
31 128
32 128
33 16
34 16
35 16
42 64424509440
## kleene state fluent hash keys (first line is the number of keys)
10
11 6
27 39366
28 39366
29 39366
30 1458
31 1458
32 1458
33 54
34 54
35 54

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
11
12 4
30 256
31 256
32 256
33 32
34 32
35 32
36 4
37 4
38 4
42 128849018880
## kleene state fluent hash keys (first line is the number of keys)
10
51600752 51716560
30 4374
31 4374
32 4374
33 162
34 162
35 162
36 6
37 6
38 6

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
11
13 4
30 512
31 512
32 512
33 64
34 64
35 64
36 8
37 8
38 8
42 257698037760
## kleene state fluent hash keys (first line is the number of keys)
10
13 6
30 13122
31 13122
32 13122
33 486
34 486
35 486
36 18
37 18
38 18

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
11
14 4
30 1024
31 1024
32 1024
33 128
34 128
35 128
36 16
37 16
38 16
42 515396075520
## kleene state fluent hash keys (first line is the number of keys)
10
14 6
30 39366
31 39366
32 39366
33 1458
34 1458
35 1458
36 54
37 54
38 54

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
11
15 4
33 256
34 256
35 256
36 32
37 32
38 32
39 4
40 4
41 4
42 1030792151040
## kleene state fluent hash keys (first line is the number of keys)
10
51947936 52094304
33 4374
34 4374
35 4374
36 162
37 162
38 162
39 6
40 6
41 6

## index
37
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
11
16 4
33 512
34 512
35 512
36 64
37 64
38 64
39 8
40 8
41 8
42 2061584302080
## kleene state fluent hash keys (first line is the number of keys)
10
51716560 52078544
33 13122
34 13122
35 13122
36 486
37 486
38 486
39 18
40 18
41 18

## index
38
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
11
17 4
33 1024
34 1024
35 1024
36 128
37 128
38 128
39 16
40 16
41 16
42 4123168604160
## kleene state fluent hash keys (first line is the number of keys)
10
17 6
33 39366
34 39366
35 39366
36 1458
37 1458
38 1458
39 54
40 54
41 54

## index
39
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
8
18 4
36 256
37 256
38 256
39 32
40 32
41 32
42 8246337208320
## kleene state fluent hash keys (first line is the number of keys)
7
52094304 140333517724536
36 4374
37 4374
38 4374
39 162
40 162
41 162

## index
40
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
8
19 4
36 512
37 512
38 512
39 64
40 64
41 64
42 16492674416640
## kleene state fluent hash keys (first line is the number of keys)
7
19 6
36 13122
37 13122
38 13122
39 486
40 486
41 486

## index
41
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
8
20 4
36 1024
37 1024
38 1024
39 128
40 128
41 128
42 32985348833280
## kleene state fluent hash keys (first line is the number of keys)
7
20 6
36 39366
37 39366
38 39366
39 1458
40 1458
41 1458

