#####TASK##### Here
## name
navigation_inst_mdp__4
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
10
## number of prob state fluents
20
## number of preconds
0
## number of actions
5
## number of hashing functions
31
## initial state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(0)) and($a(0) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(10)) and($a(0) $s(8)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x14, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(1)) and($a(0) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(13)) and($a(0) $s(9)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(14)) and($a(0) $s(0)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x21, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(17)) and($a(0) $s(1)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(18)) and($a(0) $s(2))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x30, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(5) : $c(1)) (or($s(5) and($a(2) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(21)) and($a(0) $s(3))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(6)) and($a(0) $s(6))) : $c(0)) (or(and($a(2) $s(22)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x6, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(7)) and($a(0) $s(7))) : $c(0)) (or(and($a(1) $s(25)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(26)) and($a(0) $s(6)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x9, y47)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(29)) and($a(0) $s(7)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(10)) and($a(2) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(11)) and($a(0) $s(26)) and($a(3) $s(14))) : Bernoulli($c(0.496592471376061))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(11)) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(12)) and($a(0) $s(27)) and($a(3) $s(15))) : Bernoulli($c(0.509218361228704))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x14, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(12)) and($a(2) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(1) $s(11)) and($a(2) $s(13)) and($a(0) $s(28)) and($a(3) $s(16))) : Bernoulli($c(0.524497988633811))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x14, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(13)) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(1)) and($a(0) $s(29)) and($a(3) $s(17))) : Bernoulli($c(0.525006419047713))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(14)) and($a(2) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(15)) and($a(0) $s(10)) and($a(3) $s(18))) : Bernoulli($c(0.297873362898827))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(15)) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(16)) and($a(0) $s(11)) and($a(3) $s(19))) : Bernoulli($c(0.272078393027186))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x21, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(16)) and($a(2) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(1) $s(15)) and($a(2) $s(17)) and($a(0) $s(12)) and($a(3) $s(20))) : Bernoulli($c(0.294511631131172))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x21, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(17)) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(3)) and($a(0) $s(13)) and($a(3) $s(21))) : Bernoulli($c(0.278771745041013))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(18)) and($a(2) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(19)) and($a(0) $s(14))) : Bernoulli($c(0.0800459077581763))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(19)) and($a(2) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(20)) and($a(0) $s(15))) : Bernoulli($c(0.0802786229178309))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x30, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(20)) and($a(2) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(1) $s(19)) and($a(2) $s(21)) and($a(0) $s(16))) : Bernoulli($c(0.0892714198562317))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x30, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(21)) and($a(2) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(5)) and($a(0) $s(17))) : Bernoulli($c(0.0502918232232332))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(22)) and($a(2) $s(22)) and($a(0) $s(22))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(23)) and($a(3) $s(26))) : Bernoulli($c(0.986827218206599))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(23)) and($a(2) $s(23)) and($a(0) $s(23))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(24)) and($a(3) $s(27))) : Bernoulli($c(0.975623976439238))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x6, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(24)) and($a(2) $s(24)) and($a(0) $s(24))) : $c(0)) (or(and($a(1) $s(23)) and($a(2) $s(25)) and($a(3) $s(28))) : Bernoulli($c(0.95541518740356))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x6, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(25)) and($a(2) $s(25)) and($a(0) $s(25))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(7)) and($a(3) $s(29))) : Bernoulli($c(0.944610694423318))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(26)) and($a(2) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(27)) and($a(0) $s(22)) and($a(3) $s(10))) : Bernoulli($c(0.761129587423056))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(27)) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(28)) and($a(0) $s(23)) and($a(3) $s(11))) : Bernoulli($c(0.7256391774863))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x9, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(28)) and($a(2) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(1) $s(27)) and($a(2) $s(29)) and($a(0) $s(24)) and($a(3) $s(12))) : Bernoulli($c(0.757241037208587))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x9, y36)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(5) and($a(1) $s(29)) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(9)) and($a(0) $s(25)) and($a(3) $s(13))) : Bernoulli($c(0.73500944674015))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(5)))
## min
-1
## max
0
## independent from actions
1
## hash index
30
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
0 5
2 5
8 5
10 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
1 5
3 5
9 5
13 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
0 10
2 10
4 5
14 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
1 10
3 10
5 5
17 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
2 20
4 10
18 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
31
0 20
1 20
2 40
3 20
4 20
5 10
6 5
7 5
8 10
9 10
10 10
11 5
12 5
13 10
14 10
15 5
16 5
17 10
18 10
19 5
20 5
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 5
29 5
30 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 10
8 20
22 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
7 10
9 20
25 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
0 40
6 20
8 40
26 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
1 40
7 20
9 40
29 10
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
0 80
10 20
11 10
14 20
26 20
## kleene state fluent hash keys (first line is the number of keys)
5
25448032 25519152
10 45
11 15
14 45
26 45

## index
1
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
10 40
11 20
12 10
15 10
27 10
## kleene state fluent hash keys (first line is the number of keys)
5
25556576 25373728
11 45
12 15
15 15
27 15

## index
2
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
11 40
12 20
13 20
16 10
28 10
## kleene state fluent hash keys (first line is the number of keys)
5
25575104 25612592
12 45
13 45
16 15
28 15

## index
3
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
1 80
12 40
13 40
17 20
29 20
## kleene state fluent hash keys (first line is the number of keys)
5
25519152 25476016
12 135
13 135
17 45
29 45

## index
4
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
2 80
10 80
14 40
15 20
18 20
## kleene state fluent hash keys (first line is the number of keys)
5
25373728 25485792
10 405
14 135
15 45
18 45

## index
5
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
11 80
14 80
15 40
16 20
19 10
## kleene state fluent hash keys (first line is the number of keys)
5
11 405
14 405
15 135
16 45
19 15

## index
6
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
12 80
15 80
16 40
17 40
20 10
## kleene state fluent hash keys (first line is the number of keys)
5
25476016 25500032
15 405
16 135
17 135
20 15

## index
7
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
3 40
13 80
16 80
17 80
21 10
## kleene state fluent hash keys (first line is the number of keys)
5
25485792 25575104
13 405
16 405
17 405
21 15

## index
8
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
4 40
14 160
18 40
19 20
## kleene state fluent hash keys (first line is the number of keys)
4
25316736 135
14 1215
18 135
19 45

## index
9
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
15 160
18 80
19 40
20 20
## kleene state fluent hash keys (first line is the number of keys)
4
25392288 1215
18 405
19 135
20 45

## index
10
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
16 160
19 80
20 40
21 20
## kleene state fluent hash keys (first line is the number of keys)
4
25410784 1215
19 405
20 135
21 45

## index
11
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
5 20
17 160
20 80
21 40
## kleene state fluent hash keys (first line is the number of keys)
4
0 45
17 1215
20 405
21 135

## index
12
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
6 40
22 20
23 10
26 40
## kleene state fluent hash keys (first line is the number of keys)
4
25314688 135
22 45
23 15
26 135

## index
13
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 40
23 20
24 10
27 20
## kleene state fluent hash keys (first line is the number of keys)
4
25509616 135
23 45
24 15
27 45

## index
14
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
23 40
24 20
25 20
28 20
## kleene state fluent hash keys (first line is the number of keys)
4
25466560 135
24 45
25 45
28 45

## index
15
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
7 40
24 40
25 40
29 40
## kleene state fluent hash keys (first line is the number of keys)
4
25509744 135
24 135
25 135
29 135

## index
16
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
8 80
10 160
22 80
26 80
27 40
## kleene state fluent hash keys (first line is the number of keys)
5
25500032 25593776
10 1215
22 405
26 405
27 135

## index
17
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
11 160
23 80
26 160
27 80
28 40
## kleene state fluent hash keys (first line is the number of keys)
5
11 1215
23 405
26 1215
27 405
28 135

## index
18
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
12 160
24 80
27 160
28 80
29 80
## kleene state fluent hash keys (first line is the number of keys)
5
25593776 139751745145720
24 405
27 1215
28 405
29 405

## index
19
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
9 80
13 160
25 80
28 160
29 160
## kleene state fluent hash keys (first line is the number of keys)
5
9 405
13 1215
25 405
28 1215
29 1215

