#####TASK##### Here
## name
tamarisk_inst_mdp__4
## horizon
40
## discount factor
1
## number of action fluents
10
## number of det state fluents
0
## number of prob state fluents
30
## number of preconds
0
## number of actions
11
## number of hashing functions
31
## initial state
1 1 1 0 0 0 1 0 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 0 0 1 0 1 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
eradicate(r1)
## number of values
2
## values
0 false
1 true

## index
1
## name
eradicate(r2)
## number of values
2
## values
0 false
1 true

## index
2
## name
eradicate(r3)
## number of values
2
## values
0 false
1 true

## index
3
## name
eradicate(r4)
## number of values
2
## values
0 false
1 true

## index
4
## name
eradicate(r5)
## number of values
2
## values
0 false
1 true

## index
5
## name
restore(r1)
## number of values
2
## values
0 false
1 true

## index
6
## name
restore(r2)
## number of values
2
## values
0 false
1 true

## index
7
## name
restore(r3)
## number of values
2
## values
0 false
1 true

## index
8
## name
restore(r4)
## number of values
2
## values
0 false
1 true

## index
9
## name
restore(r5)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
native-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(15) $s(0)) : Bernoulli($c(0.2))) (and(~($s(15)) $s(0) $a(5)) : $c(1)) (and(~($s(15)) ~($s(0)) $a(5)) : Bernoulli($c(0.9))) ($s(0) : Bernoulli($c(0.95))) (and(~($s(15)) ~($s(0))) : Bernoulli($c(0.1))) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0

## index
1
## name
native-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) $s(1)) : Bernoulli($c(0.2))) (and(~($s(16)) $s(1) $a(5)) : $c(1)) (and(~($s(16)) ~($s(1)) $a(5)) : Bernoulli($c(0.9))) ($s(1) : Bernoulli($c(0.95))) (and(~($s(16)) ~($s(1))) : Bernoulli($c(0.1))) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0

## index
2
## name
native-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) $s(2)) : Bernoulli($c(0.2))) (and(~($s(17)) $s(2) $a(5)) : $c(1)) (and(~($s(17)) ~($s(2)) $a(5)) : Bernoulli($c(0.9))) ($s(2) : Bernoulli($c(0.95))) (and(~($s(17)) ~($s(2))) : Bernoulli($c(0.1))) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0

## index
3
## name
native-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(3)) : Bernoulli($c(0.2))) (and(~($s(18)) $s(3) $a(6)) : $c(1)) (and(~($s(18)) ~($s(3)) $a(6)) : Bernoulli($c(0.9))) ($s(3) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(3))) : Bernoulli($c(0.1))) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0

## index
4
## name
native-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(4)) : Bernoulli($c(0.2))) (and(~($s(19)) $s(4) $a(6)) : $c(1)) (and(~($s(19)) ~($s(4)) $a(6)) : Bernoulli($c(0.9))) ($s(4) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(4))) : Bernoulli($c(0.1))) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0

## index
5
## name
native-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(5)) : Bernoulli($c(0.2))) (and(~($s(20)) $s(5) $a(6)) : $c(1)) (and(~($s(20)) ~($s(5)) $a(6)) : Bernoulli($c(0.9))) ($s(5) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(5))) : Bernoulli($c(0.1))) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0

## index
6
## name
native-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(6)) : Bernoulli($c(0.2))) (and(~($s(21)) $s(6) $a(7)) : $c(1)) (and(~($s(21)) ~($s(6)) $a(7)) : Bernoulli($c(0.9))) ($s(6) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(6))) : Bernoulli($c(0.1))) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
7
## name
native-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(7)) : Bernoulli($c(0.2))) (and(~($s(22)) $s(7) $a(7)) : $c(1)) (and(~($s(22)) ~($s(7)) $a(7)) : Bernoulli($c(0.9))) ($s(7) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(7))) : Bernoulli($c(0.1))) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
8
## name
native-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(8)) : Bernoulli($c(0.2))) (and(~($s(23)) $s(8) $a(7)) : $c(1)) (and(~($s(23)) ~($s(8)) $a(7)) : Bernoulli($c(0.9))) ($s(8) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(8))) : Bernoulli($c(0.1))) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
9
## name
native-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(9)) : Bernoulli($c(0.2))) (and(~($s(24)) $s(9) $a(8)) : $c(1)) (and(~($s(24)) ~($s(9)) $a(8)) : Bernoulli($c(0.9))) ($s(9) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(9))) : Bernoulli($c(0.1))) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
10
## name
native-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(10)) : Bernoulli($c(0.2))) (and(~($s(25)) $s(10) $a(8)) : $c(1)) (and(~($s(25)) ~($s(10)) $a(8)) : Bernoulli($c(0.9))) ($s(10) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(10))) : Bernoulli($c(0.1))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
11
## name
native-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(11)) : Bernoulli($c(0.2))) (and(~($s(26)) $s(11) $a(8)) : $c(1)) (and(~($s(26)) ~($s(11)) $a(8)) : Bernoulli($c(0.9))) ($s(11) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(11))) : Bernoulli($c(0.1))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
12
## name
native-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(12)) : Bernoulli($c(0.2))) (and(~($s(27)) $s(12) $a(9)) : $c(1)) (and(~($s(27)) ~($s(12)) $a(9)) : Bernoulli($c(0.9))) ($s(12) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(12))) : Bernoulli($c(0.1))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
13
## name
native-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(13)) : Bernoulli($c(0.2))) (and(~($s(28)) $s(13) $a(9)) : $c(1)) (and(~($s(28)) ~($s(13)) $a(9)) : Bernoulli($c(0.9))) ($s(13) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(13))) : Bernoulli($c(0.1))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
14
## name
native-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(14)) : Bernoulli($c(0.2))) (and(~($s(29)) $s(14) $a(9)) : $c(1)) (and(~($s(29)) ~($s(14)) $a(9)) : Bernoulli($c(0.9))) ($s(14) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(14))) : Bernoulli($c(0.1))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
15
## name
tamarisk-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(15) $s(0)) : Bernoulli($c(0.8))) (and(~($s(15)) $a(0)) : $c(0)) (and($s(15) $a(0)) : Bernoulli($c(0.1))) ($s(15) : Bernoulli($c(0.95))) (and(~($s(15)) ~($s(0))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1

## index
16
## name
tamarisk-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) $s(1)) : Bernoulli($c(0.8))) (and(~($s(16)) $a(0)) : $c(0)) (and($s(16) $a(0)) : Bernoulli($c(0.1))) ($s(16) : Bernoulli($c(0.95))) (and(~($s(16)) ~($s(1))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1

## index
17
## name
tamarisk-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) $s(2)) : Bernoulli($c(0.8))) (and(~($s(17)) $a(0)) : $c(0)) (and($s(17) $a(0)) : Bernoulli($c(0.1))) ($s(17) : Bernoulli($c(0.95))) (and(~($s(17)) ~($s(2))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1

## index
18
## name
tamarisk-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(3)) : Bernoulli($c(0.8))) (and(~($s(18)) $a(1)) : $c(0)) (and($s(18) $a(1)) : Bernoulli($c(0.1))) ($s(18) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(3))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0

## index
19
## name
tamarisk-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(4)) : Bernoulli($c(0.8))) (and(~($s(19)) $a(1)) : $c(0)) (and($s(19) $a(1)) : Bernoulli($c(0.1))) ($s(19) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(4))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0

## index
20
## name
tamarisk-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(5)) : Bernoulli($c(0.8))) (and(~($s(20)) $a(1)) : $c(0)) (and($s(20) $a(1)) : Bernoulli($c(0.1))) ($s(20) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(5))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0

## index
21
## name
tamarisk-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(6)) : Bernoulli($c(0.8))) (and(~($s(21)) $a(2)) : $c(0)) (and($s(21) $a(2)) : Bernoulli($c(0.1))) ($s(21) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(6))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0

## index
22
## name
tamarisk-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(7)) : Bernoulli($c(0.8))) (and(~($s(22)) $a(2)) : $c(0)) (and($s(22) $a(2)) : Bernoulli($c(0.1))) ($s(22) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(7))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0

## index
23
## name
tamarisk-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(8)) : Bernoulli($c(0.8))) (and(~($s(23)) $a(2)) : $c(0)) (and($s(23) $a(2)) : Bernoulli($c(0.1))) ($s(23) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(8))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0

## index
24
## name
tamarisk-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(9)) : Bernoulli($c(0.8))) (and(~($s(24)) $a(3)) : $c(0)) (and($s(24) $a(3)) : Bernoulli($c(0.1))) ($s(24) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(9))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0

## index
25
## name
tamarisk-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(10)) : Bernoulli($c(0.8))) (and(~($s(25)) $a(3)) : $c(0)) (and($s(25) $a(3)) : Bernoulli($c(0.1))) ($s(25) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(10))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0

## index
26
## name
tamarisk-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(11)) : Bernoulli($c(0.8))) (and(~($s(26)) $a(3)) : $c(0)) (and($s(26) $a(3)) : Bernoulli($c(0.1))) ($s(26) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(11))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0

## index
27
## name
tamarisk-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(12)) : Bernoulli($c(0.8))) (and(~($s(27)) $a(4)) : $c(0)) (and($s(27) $a(4)) : Bernoulli($c(0.1))) ($s(27) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(12))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0

## index
28
## name
tamarisk-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(13)) : Bernoulli($c(0.8))) (and(~($s(28)) $a(4)) : $c(0)) (and($s(28) $a(4)) : Bernoulli($c(0.1))) ($s(28) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(13))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0

## index
29
## name
tamarisk-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(14)) : Bernoulli($c(0.8))) (and(~($s(29)) $a(4)) : $c(0)) (and($s(29) $a(4)) : Bernoulli($c(0.1))) ($s(29) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(14))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0



#####REWARD#####
## formula
+(*(or($s(15) $s(16) $s(17)) $c(-5)) *(or($s(18) $s(19) $s(20)) $c(-5)) *(or($s(21) $s(22) $s(23)) $c(-5)) *(or($s(24) $s(25) $s(26)) $c(-5)) *(or($s(27) $s(28) $s(29)) $c(-5)) *($s(15) $c(-0.5)) *($s(16) $c(-0.5)) *($s(17) $c(-0.5)) *($s(18) $c(-0.5)) *($s(19) $c(-0.5)) *($s(20) $c(-0.5)) *($s(21) $c(-0.5)) *($s(22) $c(-0.5)) *($s(23) $c(-0.5)) *($s(24) $c(-0.5)) *($s(25) $c(-0.5)) *($s(26) $c(-0.5)) *($s(27) $c(-0.5)) *($s(28) $c(-0.5)) *($s(29) $c(-0.5)) *(and(~($s(15)) ~($s(0))) $c(-0.25)) *(and(~($s(16)) ~($s(1))) $c(-0.25)) *(and(~($s(17)) ~($s(2))) $c(-0.25)) *(and(~($s(18)) ~($s(3))) $c(-0.25)) *(and(~($s(19)) ~($s(4))) $c(-0.25)) *(and(~($s(20)) ~($s(5))) $c(-0.25)) *(and(~($s(21)) ~($s(6))) $c(-0.25)) *(and(~($s(22)) ~($s(7))) $c(-0.25)) *(and(~($s(23)) ~($s(8))) $c(-0.25)) *(and(~($s(24)) ~($s(9))) $c(-0.25)) *(and(~($s(25)) ~($s(10))) $c(-0.25)) *(and(~($s(26)) ~($s(11))) $c(-0.25)) *(and(~($s(27)) ~($s(12))) $c(-0.25)) *(and(~($s(28)) ~($s(13))) $c(-0.25)) *(and(~($s(29)) ~($s(14))) $c(-0.25)) *($a(0) $c(-0.49)) *($a(1) $c(-0.49)) *($a(2) $c(-0.49)) *($a(3) $c(-0.49)) *($a(4) $c(-0.49)) *($a(5) $c(-0.9)) *($a(6) $c(-0.9)) *($a(7) $c(-0.9)) *($a(8) $c(-0.9)) *($a(9) $c(-0.9)) *(and($a(5) ~($s(15)) ~($s(0))) $c(-0.4)) *(and($a(5) ~($s(16)) ~($s(1))) $c(-0.4)) *(and($a(5) ~($s(17)) ~($s(2))) $c(-0.4)) *(and($a(6) ~($s(18)) ~($s(3))) $c(-0.4)) *(and($a(6) ~($s(19)) ~($s(4))) $c(-0.4)) *(and($a(6) ~($s(20)) ~($s(5))) $c(-0.4)) *(and($a(7) ~($s(21)) ~($s(6))) $c(-0.4)) *(and($a(7) ~($s(22)) ~($s(7))) $c(-0.4)) *(and($a(7) ~($s(23)) ~($s(8))) $c(-0.4)) *(and($a(8) ~($s(24)) ~($s(9))) $c(-0.4)) *(and($a(8) ~($s(25)) ~($s(10))) $c(-0.4)) *(and($a(8) ~($s(26)) ~($s(11))) $c(-0.4)) *(and($a(9) ~($s(27)) ~($s(12))) $c(-0.4)) *(and($a(9) ~($s(28)) ~($s(13))) $c(-0.4)) *(and($a(9) ~($s(29)) ~($s(14))) $c(-0.4)))
## min
-38.35
## max
-0
## independent from actions
0
## hash index
30
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
15 2
30 11
## kleene state fluent hash keys (first line is the number of keys)
3
0 2
15 2
30 11

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
1 2
16 2
30 22
## kleene state fluent hash keys (first line is the number of keys)
3
35573536 2
16 2
30 33

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
2 2
17 2
30 44
## kleene state fluent hash keys (first line is the number of keys)
3
35573616 2
17 2
30 99

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
3 2
18 2
30 88
## kleene state fluent hash keys (first line is the number of keys)
3
35573696 2
18 2
30 297

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 2
19 2
30 176
## kleene state fluent hash keys (first line is the number of keys)
3
35572672 2
19 2
30 891

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
5 2
20 2
30 352
## kleene state fluent hash keys (first line is the number of keys)
3
35572752 2
20 2
30 2673

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 2
21 2
30 704
## kleene state fluent hash keys (first line is the number of keys)
3
35572832 2
21 2
30 8019

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
7 2
22 2
30 1408
## kleene state fluent hash keys (first line is the number of keys)
3
35572912 2
22 2
30 24057

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 2
23 2
30 2816
## kleene state fluent hash keys (first line is the number of keys)
3
35572992 2
23 2
30 72171

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 2
24 2
30 5632
## kleene state fluent hash keys (first line is the number of keys)
3
35573072 2
24 2
30 216513

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
10 2
25 2
30 11264
## kleene state fluent hash keys (first line is the number of keys)
3
35573152 2
25 2
30 649539

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
11 2
26 2
30 22528
## kleene state fluent hash keys (first line is the number of keys)
3
35575264 2
26 2
30 1948617

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
12 2
27 2
30 45056
## kleene state fluent hash keys (first line is the number of keys)
3
35575344 2
27 2
30 5845851

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
13 2
28 2
30 90112
## kleene state fluent hash keys (first line is the number of keys)
3
35575424 2
28 2
30 17537553

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
14 2
29 2
30 180224
## kleene state fluent hash keys (first line is the number of keys)
3
35575504 2
29 2
30 52612659

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
0 4
15 4
16 4
17 4
18 4
19 4
20 4
30 360448
## kleene state fluent hash keys (first line is the number of keys)
8
658021240 34486416
15 6
16 6
17 6
18 6
19 6
20 6
30 157837977

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
1 4
15 8
16 8
17 8
18 8
19 8
20 8
30 720896
## kleene state fluent hash keys (first line is the number of keys)
8
35064240 35411440
15 18
16 18
17 18
18 18
19 18
20 18
30 473513931

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
2 4
15 16
16 16
17 16
18 16
19 16
20 16
30 1441792
## kleene state fluent hash keys (first line is the number of keys)
8
2 6
15 54
16 54
17 54
18 54
19 54
20 54
30 1420541793

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
3 4
15 32
16 32
17 32
18 32
19 32
20 32
21 4
22 4
23 4
30 2883584
## kleene state fluent hash keys (first line is the number of keys)
11
3 6
15 162
16 162
17 162
18 162
19 162
20 162
21 6
22 6
23 6
30 4261625379

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
4 4
15 64
16 64
17 64
18 64
19 64
20 64
21 8
22 8
23 8
30 5767168
## kleene state fluent hash keys (first line is the number of keys)
11
34486416 34601744
15 486
16 486
17 486
18 486
19 486
20 486
21 18
22 18
23 18
30 12784876137

## index
20
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
5 4
15 128
16 128
17 128
18 128
19 128
20 128
21 16
22 16
23 16
30 11534336
## kleene state fluent hash keys (first line is the number of keys)
11
5 6
15 1458
16 1458
17 1458
18 1458
19 1458
20 1458
21 54
22 54
23 54
30 38354628411

## index
21
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
6 4
18 256
19 256
20 256
21 32
22 32
23 32
24 4
25 4
26 4
30 23068672
## kleene state fluent hash keys (first line is the number of keys)
11
34601744 35180016
18 4374
19 4374
20 4374
21 162
22 162
23 162
24 6
25 6
26 6
30 115063885233

## index
22
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
7 4
18 512
19 512
20 512
21 64
22 64
23 64
24 8
25 8
26 8
30 46137344
## kleene state fluent hash keys (first line is the number of keys)
11
7 6
18 13122
19 13122
20 13122
21 486
22 486
23 486
24 18
25 18
26 18
30 345191655699

## index
23
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
8 4
18 1024
19 1024
20 1024
21 128
22 128
23 128
24 16
25 16
26 16
30 92274688
## kleene state fluent hash keys (first line is the number of keys)
11
8 6
18 39366
19 39366
20 39366
21 1458
22 1458
23 1458
24 54
25 54
26 54
30 1035574967097

## index
24
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
9 4
21 256
22 256
23 256
24 32
25 32
26 32
27 4
28 4
29 4
30 184549376
## kleene state fluent hash keys (first line is the number of keys)
11
9 6
21 4374
22 4374
23 4374
24 162
25 162
26 162
27 6
28 6
29 6
30 3106724901291

## index
25
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
10 4
21 512
22 512
23 512
24 64
25 64
26 64
27 8
28 8
29 8
30 369098752
## kleene state fluent hash keys (first line is the number of keys)
11
35180016 35541904
21 13122
22 13122
23 13122
24 486
25 486
26 486
27 18
28 18
29 18
30 9320174703873

## index
26
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
11 4
21 1024
22 1024
23 1024
24 128
25 128
26 128
27 16
28 16
29 16
30 738197504
## kleene state fluent hash keys (first line is the number of keys)
11
11 6
21 39366
22 39366
23 39366
24 1458
25 1458
26 1458
27 54
28 54
29 54
30 27960524111619

## index
27
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
12 4
24 256
25 256
26 256
27 32
28 32
29 32
30 1476395008
## kleene state fluent hash keys (first line is the number of keys)
8
35557520 140033771740024
24 4374
25 4374
26 4374
27 162
28 162
29 162
30 83881572334857

## index
28
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
13 4
24 512
25 512
26 512
27 64
28 64
29 64
30 2952790016
## kleene state fluent hash keys (first line is the number of keys)
8
13 6
24 13122
25 13122
26 13122
27 486
28 486
29 486
30 251644717004571

## index
29
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
14 4
24 1024
25 1024
26 1024
27 128
28 128
29 128
30 5905580032
## kleene state fluent hash keys (first line is the number of keys)
8
14 6
24 39366
25 39366
26 39366
27 1458
28 1458
29 1458
30 754934151013713

