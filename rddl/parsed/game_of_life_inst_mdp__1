#####TASK##### Here
## name
game_of_life_inst_mdp__1
## horizon
40
## discount factor
1
## number of action fluents
9
## number of det state fluents
0
## number of prob state fluents
9
## number of preconds
0
## number of actions
10
## number of hashing functions
10
## initial state
1 0 1 1 1 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
set(x1, y1)
## number of values
2
## values
0 false
1 true

## index
1
## name
set(x1, y2)
## number of values
2
## values
0 false
1 true

## index
2
## name
set(x1, y3)
## number of values
2
## values
0 false
1 true

## index
3
## name
set(x2, y1)
## number of values
2
## values
0 false
1 true

## index
4
## name
set(x2, y2)
## number of values
2
## values
0 false
1 true

## index
5
## name
set(x2, y3)
## number of values
2
## values
0 false
1 true

## index
6
## name
set(x3, y1)
## number of values
2
## values
0 false
1 true

## index
7
## name
set(x3, y2)
## number of values
2
## values
0 false
1 true

## index
8
## name
set(x3, y3)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
alive(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(0) >=(+($s(1) $s(3) $s(4)) $c(2)) <=(+($s(1) $s(3) $s(4)) $c(3))) and(~($s(0)) ==(+($s(1) $s(3) $s(4)) $c(3))) $a(0)) : Bernoulli($c(0.979149733))) ($c(1) : Bernoulli($c(0.020850267))) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1

## index
1
## name
alive(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(1) >=(+($s(0) $s(2) $s(3) $s(4) $s(5)) $c(2)) <=(+($s(0) $s(2) $s(3) $s(4) $s(5)) $c(3))) and(~($s(1)) ==(+($s(0) $s(2) $s(3) $s(4) $s(5)) $c(3))) $a(1)) : Bernoulli($c(0.968422893))) ($c(1) : Bernoulli($c(0.031577107))) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0

## index
2
## name
alive(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(2) >=(+($s(1) $s(4) $s(5)) $c(2)) <=(+($s(1) $s(4) $s(5)) $c(3))) and(~($s(2)) ==(+($s(1) $s(4) $s(5)) $c(3))) $a(2)) : Bernoulli($c(0.97534661))) ($c(1) : Bernoulli($c(0.02465339))) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0

## index
3
## name
alive(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(3) >=(+($s(0) $s(1) $s(4) $s(6) $s(7)) $c(2)) <=(+($s(0) $s(1) $s(4) $s(6) $s(7)) $c(3))) and(~($s(3)) ==(+($s(0) $s(1) $s(4) $s(6) $s(7)) $c(3))) $a(3)) : Bernoulli($c(0.982865365))) ($c(1) : Bernoulli($c(0.017134635))) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0

## index
4
## name
alive(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(4) >=(+($s(0) $s(1) $s(2) $s(3) $s(5) $s(6) $s(7) $s(8)) $c(2)) <=(+($s(0) $s(1) $s(2) $s(3) $s(5) $s(6) $s(7) $s(8)) $c(3))) and(~($s(4)) ==(+($s(0) $s(1) $s(2) $s(3) $s(5) $s(6) $s(7) $s(8)) $c(3))) $a(4)) : Bernoulli($c(0.985782417))) ($c(1) : Bernoulli($c(0.014217583))) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0

## index
5
## name
alive(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(5) >=(+($s(1) $s(2) $s(4) $s(7) $s(8)) $c(2)) <=(+($s(1) $s(2) $s(4) $s(7) $s(8)) $c(3))) and(~($s(5)) ==(+($s(1) $s(2) $s(4) $s(7) $s(8)) $c(3))) $a(5)) : Bernoulli($c(0.962609835))) ($c(1) : Bernoulli($c(0.037390165))) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0

## index
6
## name
alive(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(6) >=(+($s(3) $s(4) $s(7)) $c(2)) <=(+($s(3) $s(4) $s(7)) $c(3))) and(~($s(6)) ==(+($s(3) $s(4) $s(7)) $c(3))) $a(6)) : Bernoulli($c(0.982644329))) ($c(1) : Bernoulli($c(0.017355671))) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0

## index
7
## name
alive(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(7) >=(+($s(3) $s(4) $s(5) $s(6) $s(8)) $c(2)) <=(+($s(3) $s(4) $s(5) $s(6) $s(8)) $c(3))) and(~($s(7)) ==(+($s(3) $s(4) $s(5) $s(6) $s(8)) $c(3))) $a(7)) : Bernoulli($c(0.955000654))) ($c(1) : Bernoulli($c(0.044999346))) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0

## index
8
## name
alive(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(8) >=(+($s(4) $s(5) $s(7)) $c(2)) <=(+($s(4) $s(5) $s(7)) $c(3))) and(~($s(8)) ==(+($s(4) $s(5) $s(7)) $c(3))) $a(8)) : Bernoulli($c(0.950443946))) ($c(1) : Bernoulli($c(0.049556054))) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0



#####REWARD#####
## formula
+(-($s(0) $a(0)) -($s(1) $a(1)) -($s(2) $a(2)) -($s(3) $a(3)) -($s(4) $a(4)) -($s(5) $a(5)) -($s(6) $a(6)) -($s(7) $a(7)) -($s(8) $a(8)))
## min
-1
## max
9
## independent from actions
0
## hash index
9
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
1 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
0 2
1 2
3 2
4 2
9 10
## kleene state fluent hash keys (first line is the number of keys)
5
-764093576 15076576
1 2
3 2
4 2
9 10

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
3 4
4 4
5 2
9 20
## kleene state fluent hash keys (first line is the number of keys)
7
0 6
1 6
2 2
3 6
4 6
5 2
9 30

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
1 8
2 4
4 8
5 4
9 40
## kleene state fluent hash keys (first line is the number of keys)
5
15076576 15144160
2 6
4 18
5 6
9 90

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 8
1 16
3 8
4 16
6 2
7 2
9 80
## kleene state fluent hash keys (first line is the number of keys)
7
15037008 15154560
1 54
3 18
4 54
6 2
7 2
9 270

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
0 16
1 32
2 8
3 16
4 32
5 8
6 4
7 4
8 2
9 160
## kleene state fluent hash keys (first line is the number of keys)
10
15144160 15152176
1 162
2 18
3 54
4 162
5 18
6 6
7 6
8 2
9 810

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 64
2 16
4 64
5 16
7 8
8 4
9 320
## kleene state fluent hash keys (first line is the number of keys)
7
15154560 15196784
2 54
4 486
5 54
7 18
8 6
9 2430

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
3 32
4 128
6 8
7 16
9 640
## kleene state fluent hash keys (first line is the number of keys)
5
15152176 140058119428984
4 1458
6 18
7 54
9 7290

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
3 64
4 256
5 32
6 16
7 32
8 8
9 1280
## kleene state fluent hash keys (first line is the number of keys)
7
3 486
4 4374
5 162
6 54
7 162
8 18
9 21870

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
4 512
5 64
7 64
8 16
9 2560
## kleene state fluent hash keys (first line is the number of keys)
5
4 13122
5 486
7 486
8 54
9 65610

