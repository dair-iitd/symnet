#####TASK##### Here
## name
triangle_tireworld_inst_mdp__3
## horizon
40
## discount factor
1
## number of action fluents
34
## number of det state fluents
26
## number of prob state fluents
1
## number of preconds
0
## number of actions
35
## number of hashing functions
28
## initial state
0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
changetire
## number of values
2
## values
0 false
1 true

## index
1
## name
loadtire(la2a1)
## number of values
2
## values
0 false
1 true

## index
2
## name
loadtire(la2a2)
## number of values
2
## values
0 false
1 true

## index
3
## name
loadtire(la2a3)
## number of values
2
## values
0 false
1 true

## index
4
## name
loadtire(la2a4)
## number of values
2
## values
0 false
1 true

## index
5
## name
loadtire(la3a1)
## number of values
2
## values
0 false
1 true

## index
6
## name
loadtire(la3a3)
## number of values
2
## values
0 false
1 true

## index
7
## name
loadtire(la4a1)
## number of values
2
## values
0 false
1 true

## index
8
## name
loadtire(la4a2)
## number of values
2
## values
0 false
1 true

## index
9
## name
loadtire(la5a1)
## number of values
2
## values
0 false
1 true

## index
10
## name
move-car(la1a1, la1a2)
## number of values
2
## values
0 false
1 true

## index
11
## name
move-car(la1a1, la2a1)
## number of values
2
## values
0 false
1 true

## index
12
## name
move-car(la1a2, la1a3)
## number of values
2
## values
0 false
1 true

## index
13
## name
move-car(la1a2, la2a2)
## number of values
2
## values
0 false
1 true

## index
14
## name
move-car(la1a3, la1a4)
## number of values
2
## values
0 false
1 true

## index
15
## name
move-car(la1a3, la2a3)
## number of values
2
## values
0 false
1 true

## index
16
## name
move-car(la1a4, la1a5)
## number of values
2
## values
0 false
1 true

## index
17
## name
move-car(la1a4, la2a4)
## number of values
2
## values
0 false
1 true

## index
18
## name
move-car(la2a1, la1a2)
## number of values
2
## values
0 false
1 true

## index
19
## name
move-car(la2a1, la3a1)
## number of values
2
## values
0 false
1 true

## index
20
## name
move-car(la2a2, la1a3)
## number of values
2
## values
0 false
1 true

## index
21
## name
move-car(la2a3, la1a4)
## number of values
2
## values
0 false
1 true

## index
22
## name
move-car(la2a3, la3a3)
## number of values
2
## values
0 false
1 true

## index
23
## name
move-car(la2a4, la1a5)
## number of values
2
## values
0 false
1 true

## index
24
## name
move-car(la3a1, la2a2)
## number of values
2
## values
0 false
1 true

## index
25
## name
move-car(la3a1, la3a2)
## number of values
2
## values
0 false
1 true

## index
26
## name
move-car(la3a1, la4a1)
## number of values
2
## values
0 false
1 true

## index
27
## name
move-car(la3a2, la3a3)
## number of values
2
## values
0 false
1 true

## index
28
## name
move-car(la3a2, la4a2)
## number of values
2
## values
0 false
1 true

## index
29
## name
move-car(la3a3, la2a4)
## number of values
2
## values
0 false
1 true

## index
30
## name
move-car(la4a1, la3a2)
## number of values
2
## values
0 false
1 true

## index
31
## name
move-car(la4a1, la5a1)
## number of values
2
## values
0 false
1 true

## index
32
## name
move-car(la4a2, la3a3)
## number of values
2
## values
0 false
1 true

## index
33
## name
move-car(la5a1, la4a2)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
goal-reward-received
## number of values
2
## values
0 false
1 true
## formula
or($s(0) $s(15))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
1
## name
hasspare
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(0) $s(1)) : $c(0)) (or(and($a(1) $s(16) $s(2)) and($a(2) $s(17) $s(3)) and($a(3) $s(18) $s(4)) and($a(4) $s(19) $s(5)) and($a(5) $s(20) $s(6)) and($a(6) $s(22) $s(7)) and($a(7) $s(23) $s(8)) and($a(8) $s(24) $s(9)) and($a(9) $s(25) $s(10))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 2
27 3
28 4
29 5
30 6
31 7
32 8
33 9
34 10

## index
2
## name
spare-in(la2a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(1) $s(16) $s(2)) : $c(0)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 1
34 0

## index
3
## name
spare-in(la2a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(2) $s(17) $s(3)) : $c(0)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 1
33 0
34 0

## index
4
## name
spare-in(la2a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(3) $s(18) $s(4)) : $c(0)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 0

## index
5
## name
spare-in(la2a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(4) $s(19) $s(5)) : $c(0)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 0

## index
6
## name
spare-in(la3a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(5) $s(20) $s(6)) : $c(0)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0

## index
7
## name
spare-in(la3a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(6) $s(22) $s(7)) : $c(0)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 0
34 0

## index
8
## name
spare-in(la4a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(7) $s(23) $s(8)) : $c(0)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
9
## name
spare-in(la4a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(8) $s(24) $s(9)) : $c(0)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
10
## name
spare-in(la5a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(9) $s(25) $s(10)) : $c(0)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
11
## name
vehicle-at(la1a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(10) $s(11) $s(26)) and($a(11) $s(11) $s(26))) : $c(0)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 1
24 2
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
12
## name
vehicle-at(la1a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(10) $s(11) $s(26)) and($a(18) $s(16) $s(26))) : $c(1)) (or(and($a(12) $s(12) $s(26)) and($a(13) $s(12) $s(26))) : $c(0)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 2
22 3
23 0
24 4
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
13
## name
vehicle-at(la1a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(12) $s(12) $s(26)) and($a(20) $s(17) $s(26))) : $c(1)) (or(and($a(14) $s(13) $s(26)) and($a(15) $s(13) $s(26))) : $c(0)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 2
20 3
21 0
22 4
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
14
## name
vehicle-at(la1a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(14) $s(13) $s(26)) and($a(21) $s(18) $s(26))) : $c(1)) (or(and($a(16) $s(14) $s(26)) and($a(17) $s(14) $s(26))) : $c(0)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 2
18 3
19 0
20 4
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
15
## name
vehicle-at(la1a5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(16) $s(14) $s(26)) and($a(23) $s(19) $s(26))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 2
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
16
## name
vehicle-at(la2a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(11) $s(11) $s(26)) : $c(1)) (or(and($a(18) $s(16) $s(26)) and($a(19) $s(16) $s(26))) : $c(0)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 2
17 0
18 0
19 0
20 0
21 0
22 0
23 3
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
17
## name
vehicle-at(la2a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(13) $s(12) $s(26)) and($a(24) $s(20) $s(26))) : $c(1)) (and($a(20) $s(17) $s(26)) : $c(0)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 2
15 0
16 0
17 0
18 0
19 0
20 0
21 3
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
18
## name
vehicle-at(la2a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(15) $s(13) $s(26)) : $c(1)) (or(and($a(21) $s(18) $s(26)) and($a(22) $s(18) $s(26))) : $c(0)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 2
14 0
15 0
16 0
17 0
18 0
19 3
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
19
## name
vehicle-at(la2a4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(17) $s(14) $s(26)) and($a(29) $s(22) $s(26))) : $c(1)) (and($a(23) $s(19) $s(26)) : $c(0)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 2
12 0
13 0
14 0
15 0
16 0
17 3
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
20
## name
vehicle-at(la3a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(19) $s(16) $s(26)) : $c(1)) (or(and($a(24) $s(20) $s(26)) and($a(25) $s(20) $s(26)) and($a(26) $s(20) $s(26))) : $c(0)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 2
10 3
11 0
12 0
13 0
14 0
15 4
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
21
## name
vehicle-at(la3a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(25) $s(20) $s(26)) and($a(30) $s(23) $s(26))) : $c(1)) (or(and($a(27) $s(21) $s(26)) and($a(28) $s(21) $s(26))) : $c(0)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 2
7 3
8 0
9 4
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
22
## name
vehicle-at(la3a3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(22) $s(18) $s(26)) and($a(27) $s(21) $s(26)) and($a(32) $s(24) $s(26))) : $c(1)) (and($a(29) $s(22) $s(26)) : $c(0)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 2
6 0
7 3
8 0
9 0
10 0
11 0
12 4
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
23
## name
vehicle-at(la4a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(26) $s(20) $s(26)) : $c(1)) (or(and($a(30) $s(23) $s(26)) and($a(31) $s(23) $s(26))) : $c(0)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 2
5 0
6 0
7 0
8 3
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
24
## name
vehicle-at(la4a2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(28) $s(21) $s(26)) and($a(33) $s(25) $s(26))) : $c(1)) (and($a(32) $s(24) $s(26)) : $c(0)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 0
4 0
5 0
6 3
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0

## index
25
## name
vehicle-at(la5a1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($a(31) $s(23) $s(26)) : $c(1)) (and($a(33) $s(25) $s(26)) : $c(0)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
not-flattire
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($a(10) $s(11) $s(26)) and($a(11) $s(11) $s(26)) and($a(12) $s(12) $s(26)) and($a(13) $s(12) $s(26)) and($a(14) $s(13) $s(26)) and($a(15) $s(13) $s(26)) and($a(16) $s(14) $s(26)) and($a(17) $s(14) $s(26)) and($a(18) $s(16) $s(26)) and($a(19) $s(16) $s(26)) and($a(20) $s(17) $s(26)) and($a(21) $s(18) $s(26)) and($a(22) $s(18) $s(26)) and($a(23) $s(19) $s(26)) and($a(24) $s(20) $s(26)) and($a(25) $s(20) $s(26)) and($a(26) $s(20) $s(26)) and($a(27) $s(21) $s(26)) and($a(28) $s(21) $s(26)) and($a(29) $s(22) $s(26)) and($a(30) $s(23) $s(26)) and($a(31) $s(23) $s(26)) and($a(32) $s(24) $s(26)) and($a(33) $s(25) $s(26))) : Bernoulli($c(0.35))) (and($a(0) $s(1)) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20
21 21
22 22
23 23
24 24
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 25



#####REWARD#####
## formula
switch( (and(~($s(0)) $s(15)) : $c(100)) ($s(0) : $c(0)) ($c(1) : $c(-1)) )
## min
-1
## max
100
## independent from actions
1
## hash index
27
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
28
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
29
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
30
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
31
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
32
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
33
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
34
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
0 1
27 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 11
26 26
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 22
2 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 44
3 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 88
4 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 176
5 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 352
6 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 704
7 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 1408
8 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 2816
9 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
1 5632
10 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
11 3
12 5
16 4
26 52
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
12 10
13 5
17 4
26 104
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
13 10
14 5
18 4
26 208
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
14 10
15 3
19 4
26 416
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
15 6
27 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
1 11264
2 4
12 20
16 8
20 5
26 832
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
1 22528
3 4
13 20
17 8
26 1664
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
1 45056
4 4
14 20
18 8
22 5
26 3328
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
1 90112
5 4
15 12
19 8
26 6656
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 180224
6 4
17 16
20 10
21 5
23 4
26 13312
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
21 10
22 10
24 4
26 26624
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
1 360448
7 4
19 16
22 20
26 53248
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
1 720896
8 4
21 20
23 8
25 3
26 106496
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
1 1441792
9 4
22 40
24 8
26 212992
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
1 2883584
10 4
24 16
25 6
26 425984
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
16
11 6
12 40
13 40
14 40
15 24
16 16
17 32
18 16
19 32
20 20
21 40
22 80
23 16
24 32
25 12
26 851968
## kleene state fluent hash keys (first line is the number of keys)
16
32410400 139974632979320
12 135
13 135
14 135
15 81
16 36
17 108
18 36
19 108
20 45
21 135
22 405
23 36
24 108
25 27
26 373071582

