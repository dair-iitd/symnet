#####TASK##### Here
## name
elevators_inst_mdp__10
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
10
## number of prob state fluents
8
## number of preconds
0
## number of actions
5
## number of hashing functions
19
## initial state
1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
close-door(e0)
## number of values
2
## values
0 false
1 true

## index
1
## name
move-current-dir(e0)
## number of values
2
## values
0 false
1 true

## index
2
## name
open-door-going-down(e0)
## number of values
2
## values
0 false
1 true

## index
3
## name
open-door-going-up(e0)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
elevator-at-floor(e0, f0)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(6)) ~($a(1))) : $s(0)) (and($a(1) ~($s(7)) $s(1)) : $c(1)) (and($a(1) $s(7) ~($s(0))) : $s(0)) (and($a(1) ~($s(7))) : $s(0)) ($c(1) : $c(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0

## index
1
## name
elevator-at-floor(e0, f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(6)) ~($a(1))) : $s(1)) (and($a(1) $s(7) $s(0)) : $c(1)) (and($a(1) ~($s(7)) $s(2)) : $c(1)) (and($a(1) $s(7) ~($s(1))) : $s(1)) (and($a(1) ~($s(7)) ~($s(1))) : $s(1)) ($c(1) : $c(0)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0

## index
2
## name
elevator-at-floor(e0, f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(6)) ~($a(1))) : $s(2)) (and($a(1) $s(7) $s(1)) : $c(1)) (and($a(1) ~($s(7)) $s(3)) : $c(1)) (and($a(1) $s(7) ~($s(2))) : $s(2)) (and($a(1) ~($s(7)) ~($s(2))) : $s(2)) ($c(1) : $c(0)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0

## index
3
## name
elevator-at-floor(e0, f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(6)) ~($a(1))) : $s(3)) (and($a(1) $s(7) $s(2)) : $c(1)) (and($a(1) ~($s(7)) $s(4)) : $c(1)) (and($a(1) $s(7) ~($s(3))) : $s(3)) (and($a(1) ~($s(7)) ~($s(3))) : $s(3)) ($c(1) : $c(0)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0

## index
4
## name
elevator-at-floor(e0, f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(6)) ~($a(1))) : $s(4)) (and($a(1) $s(7) $s(3)) : $c(1)) (and($a(1) ~($s(7)) $s(5)) : $c(1)) (and($a(1) $s(7) ~($s(4))) : $s(4)) (and($a(1) ~($s(7)) ~($s(4))) : $s(4)) ($c(1) : $c(0)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0

## index
5
## name
elevator-at-floor(e0, f5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(6)) ~($a(1))) : $s(5)) (and($a(1) $s(7) $s(4)) : $c(1)) (and($a(1) $s(7)) : $s(5)) (and($a(1) ~($s(7)) ~($s(5))) : $s(5)) ($c(1) : $c(0)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0

## index
6
## name
elevator-closed(e0)
## number of values
2
## values
0 false
1 true
## formula
or(and($s(6) ~($a(3)) ~($a(2))) $a(0))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 0
4 3

## index
7
## name
elevator-dir-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(3) : $c(1)) ($a(2) : $c(0)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 0
4 0

## index
8
## name
person-in-elevator-going-down(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(8) : ~($s(0))) ($c(1) : or(and($s(1) ~($s(7)) ~($s(6)) $s(10)) and($s(2) ~($s(7)) ~($s(6)) $s(11)) and($s(3) ~($s(7)) ~($s(6)) $s(12)) and($s(4) ~($s(7)) ~($s(6)) $s(13)))) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
9
## name
person-in-elevator-going-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(9) : ~($s(5))) ($c(1) : or(and($s(1) $s(7) ~($s(6)) $s(14)) and($s(2) $s(7) ~($s(6)) $s(15)) and($s(3) $s(7) ~($s(6)) $s(16)) and($s(4) $s(7) ~($s(6)) $s(17)))) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
person-waiting-down(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(10) ~(and($s(1) ~($s(7)) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.019988691))) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
1
## name
person-waiting-down(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(11) ~(and($s(2) ~($s(7)) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.03846489))) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
2
## name
person-waiting-down(f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(12) ~(and($s(3) ~($s(7)) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.024069317))) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
3
## name
person-waiting-down(f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(13) ~(and($s(4) ~($s(7)) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.025387743))) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
4
## name
person-waiting-up(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(14) ~(and($s(1) $s(7) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.019988691))) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
5
## name
person-waiting-up(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(15) ~(and($s(2) $s(7) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.03846489))) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
6
## name
person-waiting-up(f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) ~(and($s(3) $s(7) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.024069317))) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
7
## name
person-waiting-up(f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) ~(and($s(4) $s(7) ~($s(6))))) : $c(1)) ($c(1) : Bernoulli($c(0.025387743))) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0



#####REWARD#####
## formula
+(*(and($s(9) $s(7)) $c(-0.75)) *(and($s(8) ~($s(7))) $c(-0.75)) *(and($s(9) ~($s(7))) $c(-3)) *(and($s(8) $s(7)) $c(-3)) -(-($c(0) $s(14)) $s(10)) -(-($c(0) $s(15)) $s(11)) -(-($c(0) $s(16)) $s(12)) -(-($c(0) $s(17)) $s(13)))
## min
-15.5
## max
0
## independent from actions
1
## hash index
18
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
1 2
8 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
8 2
9 1
10 1
14 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 8
2 4
3 2
8 4
9 2
11 1
15 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
2 8
3 4
4 2
8 8
9 4
12 1
16 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
3 8
4 4
5 2
8 16
9 8
13 1
17 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 8
5 4
9 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
17
0 8
1 16
2 16
3 16
4 16
5 8
6 4
8 32
9 32
10 2
11 2
12 2
13 2
14 2
15 2
16 2
17 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
18
0 16
1 32
2 32
3 32
4 32
5 16
7 3
8 64
9 64
10 4
11 4
12 4
13 4
14 4
15 4
16 4
17 4
18 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
8 128
18 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
9 128
18 4
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 256
10 8
18 8
## kleene state fluent hash keys (first line is the number of keys)
3
23863552 6561
10 27
18 27

## index
1
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 512
11 8
18 16
## kleene state fluent hash keys (first line is the number of keys)
3
0 19683
11 27
18 81

## index
2
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 1024
12 8
18 32
## kleene state fluent hash keys (first line is the number of keys)
3
23853232 59049
12 27
18 243

## index
3
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 2048
13 8
18 64
## kleene state fluent hash keys (first line is the number of keys)
3
23859392 177147
13 27
18 729

## index
4
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 256
14 8
18 128
## kleene state fluent hash keys (first line is the number of keys)
3
23935632 6561
14 27
18 2187

## index
5
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 512
15 8
18 256
## kleene state fluent hash keys (first line is the number of keys)
3
23935712 19683
15 27
18 6561

## index
6
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 1024
16 8
18 512
## kleene state fluent hash keys (first line is the number of keys)
3
23852864 59049
16 27
18 19683

## index
7
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 2048
17 8
18 1024
## kleene state fluent hash keys (first line is the number of keys)
3
23935792 177147
17 27
18 59049

