#####TASK##### Here
## name
navigation_inst_mdp__9
## horizon
40
## discount factor
1
## number of action fluents
4
## number of det state fluents
40
## number of prob state fluents
40
## number of preconds
0
## number of actions
5
## number of hashing functions
81
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
0
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(0)) and($a(0) $s(0)) and($a(3) $s(0))) : $c(0)) (or(and($a(2) $s(40)) and($a(0) $s(36)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(1)) and($a(0) $s(1)) and($a(3) $s(1))) : $c(0)) (or(and($a(1) $s(41)) and($a(0) $s(37)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x126, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(42)) and($a(0) $s(0)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x126, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(43)) and($a(0) $s(1)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x14, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(44)) and($a(0) $s(38)) and($a(3) $s(12))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x14, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(45)) and($a(0) $s(39)) and($a(3) $s(13))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x149, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(46)) and($a(0) $s(2)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x149, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(47)) and($a(0) $s(3)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x174, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(48)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x174, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(49)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x201, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(50)) and($a(0) $s(8)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x201, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(51)) and($a(0) $s(9)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x21, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(2) $s(52)) and($a(0) $s(4)) and($a(3) $s(20))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x21, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(53)) and($a(0) $s(5)) and($a(3) $s(21))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x230, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(54)) and($a(0) $s(10)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x230, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(55)) and($a(0) $s(11)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x261, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(56)) and($a(0) $s(14)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x261, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(57)) and($a(0) $s(15)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x294, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(58)) and($a(0) $s(16)) and($a(3) $s(22))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x294, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(59)) and($a(0) $s(17)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x30, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(20)) and($a(0) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(2) $s(60)) and($a(0) $s(12)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x30, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(21)) and($a(0) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(61)) and($a(0) $s(13)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x329, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(2) $s(62)) and($a(0) $s(18)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x329, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(63)) and($a(0) $s(19)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x366, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(2) $s(64)) and($a(0) $s(22)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x366, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(65)) and($a(0) $s(23)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x405, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(2) $s(66)) and($a(0) $s(24))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x405, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(27) : $c(1)) (or($s(27) and($a(2) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(67)) and($a(0) $s(25))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x41, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(2) $s(68)) and($a(0) $s(20)) and($a(3) $s(30))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x41, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(69)) and($a(0) $s(21)) and($a(3) $s(31))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x54, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(2) $s(70)) and($a(0) $s(28)) and($a(3) $s(34))) : $c(1)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x54, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(71)) and($a(0) $s(29)) and($a(3) $s(35))) : $c(1)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x6, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(32)) and($a(0) $s(32))) : $c(0)) (or(and($a(2) $s(72)) and($a(3) $s(38))) : $c(1)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x6, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(33)) and($a(0) $s(33))) : $c(0)) (or(and($a(1) $s(73)) and($a(3) $s(39))) : $c(1)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x69, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(2) $s(74)) and($a(0) $s(30)) and($a(3) $s(36))) : $c(1)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x69, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(75)) and($a(0) $s(31)) and($a(3) $s(37))) : $c(1)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x86, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(2) $s(76)) and($a(0) $s(34)) and($a(3) $s(0))) : $c(1)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x86, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(77)) and($a(0) $s(35)) and($a(3) $s(1))) : $c(1)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x9, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(2) $s(78)) and($a(0) $s(32)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x9, y27)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(79)) and($a(0) $s(33)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x105, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40)) and($a(3) $s(40))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(41)) and($a(0) $s(76)) and($a(3) $s(42))) : Bernoulli($c(0.555314765262761))) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x105, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(40)) and($a(2) $s(1)) and($a(0) $s(77)) and($a(3) $s(43))) : Bernoulli($c(0.514730942386546))) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x126, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(43)) and($a(0) $s(40)) and($a(3) $s(46))) : Bernoulli($c(0.481645917323859))) ($c(1) : $s(42)) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x126, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(42)) and($a(2) $s(3)) and($a(0) $s(41)) and($a(3) $s(47))) : Bernoulli($c(0.474472632435592))) ($c(1) : $s(43)) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x14, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(45)) and($a(0) $s(78)) and($a(3) $s(52))) : Bernoulli($c(0.894883598249994))) ($c(1) : $s(44)) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x14, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(44)) and($a(2) $s(5)) and($a(0) $s(79)) and($a(3) $s(53))) : Bernoulli($c(0.88167652306392))) ($c(1) : $s(45)) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x149, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(47)) and($a(0) $s(42)) and($a(3) $s(48))) : Bernoulli($c(0.453877576185684))) ($c(1) : $s(46)) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x149, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(46)) and($a(2) $s(7)) and($a(0) $s(43)) and($a(3) $s(49))) : Bernoulli($c(0.447873820109587))) ($c(1) : $s(47)) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x174, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(49)) and($a(0) $s(46)) and($a(3) $s(50))) : Bernoulli($c(0.376048787742069))) ($c(1) : $s(48)) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x174, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(48)) and($a(2) $s(9)) and($a(0) $s(47)) and($a(3) $s(51))) : Bernoulli($c(0.417657445895633))) ($c(1) : $s(49)) )
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x201, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(50)) and($a(2) $s(50)) and($a(0) $s(50)) and($a(3) $s(50))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(51)) and($a(0) $s(48)) and($a(3) $s(54))) : Bernoulli($c(0.331928003677412))) ($c(1) : $s(50)) )
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x201, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(51)) and($a(2) $s(51)) and($a(0) $s(51)) and($a(3) $s(51))) : $c(0)) (or(and($a(1) $s(50)) and($a(2) $s(11)) and($a(0) $s(49)) and($a(3) $s(55))) : Bernoulli($c(0.357426872574969))) ($c(1) : $s(51)) )
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x21, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(52)) and($a(2) $s(52)) and($a(0) $s(52)) and($a(3) $s(52))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(53)) and($a(0) $s(44)) and($a(3) $s(60))) : Bernoulli($c(0.813005157109154))) ($c(1) : $s(52)) )
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x21, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(53)) and($a(2) $s(53)) and($a(0) $s(53)) and($a(3) $s(53))) : $c(0)) (or(and($a(1) $s(52)) and($a(2) $s(13)) and($a(0) $s(45)) and($a(3) $s(61))) : Bernoulli($c(0.840954197399122))) ($c(1) : $s(53)) )
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x230, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(54)) and($a(2) $s(54)) and($a(0) $s(54)) and($a(3) $s(54))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(55)) and($a(0) $s(50)) and($a(3) $s(56))) : Bernoulli($c(0.317322811896079))) ($c(1) : $s(54)) )
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x230, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(55)) and($a(2) $s(55)) and($a(0) $s(55)) and($a(3) $s(55))) : $c(0)) (or(and($a(1) $s(54)) and($a(2) $s(15)) and($a(0) $s(51)) and($a(3) $s(57))) : Bernoulli($c(0.318784519882971))) ($c(1) : $s(55)) )
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x261, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(56)) and($a(2) $s(56)) and($a(0) $s(56)) and($a(3) $s(56))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(57)) and($a(0) $s(54)) and($a(3) $s(58))) : Bernoulli($c(0.25332549930011))) ($c(1) : $s(56)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x261, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(57)) and($a(2) $s(57)) and($a(0) $s(57)) and($a(3) $s(57))) : $c(0)) (or(and($a(1) $s(56)) and($a(2) $s(17)) and($a(0) $s(55)) and($a(3) $s(59))) : Bernoulli($c(0.276234672576385))) ($c(1) : $s(57)) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x294, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(58)) and($a(2) $s(58)) and($a(0) $s(58)) and($a(3) $s(58))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(59)) and($a(0) $s(56)) and($a(3) $s(62))) : Bernoulli($c(0.206229059417781))) ($c(1) : $s(58)) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x294, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(59)) and($a(2) $s(59)) and($a(0) $s(59)) and($a(3) $s(59))) : $c(0)) (or(and($a(1) $s(58)) and($a(2) $s(19)) and($a(0) $s(57)) and($a(3) $s(63))) : Bernoulli($c(0.182525398601827))) ($c(1) : $s(59)) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x30, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(60)) and($a(2) $s(60)) and($a(0) $s(60)) and($a(3) $s(60))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(61)) and($a(0) $s(52)) and($a(3) $s(68))) : Bernoulli($c(0.792114344523533))) ($c(1) : $s(60)) )
## hash index
60
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x30, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(61)) and($a(2) $s(61)) and($a(0) $s(61)) and($a(3) $s(61))) : $c(0)) (or(and($a(1) $s(60)) and($a(2) $s(21)) and($a(0) $s(53)) and($a(3) $s(69))) : Bernoulli($c(0.779337020688935))) ($c(1) : $s(61)) )
## hash index
61
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x329, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(62)) and($a(2) $s(62)) and($a(0) $s(62)) and($a(3) $s(62))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(63)) and($a(0) $s(58)) and($a(3) $s(64))) : Bernoulli($c(0.176201005613333))) ($c(1) : $s(62)) )
## hash index
62
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x329, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(63)) and($a(2) $s(63)) and($a(0) $s(63)) and($a(3) $s(63))) : $c(0)) (or(and($a(1) $s(62)) and($a(2) $s(23)) and($a(0) $s(59)) and($a(3) $s(65))) : Bernoulli($c(0.154408118834621))) ($c(1) : $s(63)) )
## hash index
63
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x366, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(64)) and($a(2) $s(64)) and($a(0) $s(64)) and($a(3) $s(64))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(65)) and($a(0) $s(62)) and($a(3) $s(66))) : Bernoulli($c(0.0878532937678852))) ($c(1) : $s(64)) )
## hash index
64
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x366, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(65)) and($a(2) $s(65)) and($a(0) $s(65)) and($a(3) $s(65))) : $c(0)) (or(and($a(1) $s(64)) and($a(2) $s(25)) and($a(0) $s(63)) and($a(3) $s(67))) : Bernoulli($c(0.109894012934283))) ($c(1) : $s(65)) )
## hash index
65
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x405, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(66)) and($a(2) $s(66)) and($a(3) $s(66))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(67)) and($a(0) $s(64))) : Bernoulli($c(0.0534960952048239))) ($c(1) : $s(66)) )
## hash index
66
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x405, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(67)) and($a(2) $s(67)) and($a(3) $s(67))) : $c(0)) (or(and($a(1) $s(66)) and($a(2) $s(27)) and($a(0) $s(65))) : Bernoulli($c(0.0432620074992117))) ($c(1) : $s(67)) )
## hash index
67
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x41, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(68)) and($a(2) $s(68)) and($a(0) $s(68)) and($a(3) $s(68))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(69)) and($a(0) $s(60)) and($a(3) $s(70))) : Bernoulli($c(0.714750021598057))) ($c(1) : $s(68)) )
## hash index
68
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x41, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(69)) and($a(2) $s(69)) and($a(0) $s(69)) and($a(3) $s(69))) : $c(0)) (or(and($a(1) $s(68)) and($a(2) $s(29)) and($a(0) $s(61)) and($a(3) $s(71))) : Bernoulli($c(0.751383479586557))) ($c(1) : $s(69)) )
## hash index
69
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x54, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(70)) and($a(2) $s(70)) and($a(0) $s(70)) and($a(3) $s(70))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(71)) and($a(0) $s(68)) and($a(3) $s(74))) : Bernoulli($c(0.690702217287923))) ($c(1) : $s(70)) )
## hash index
70
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x54, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(71)) and($a(2) $s(71)) and($a(0) $s(71)) and($a(3) $s(71))) : $c(0)) (or(and($a(1) $s(70)) and($a(2) $s(31)) and($a(0) $s(69)) and($a(3) $s(75))) : Bernoulli($c(0.704425742623004))) ($c(1) : $s(71)) )
## hash index
71
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x6, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(72)) and($a(2) $s(72)) and($a(0) $s(72))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(73)) and($a(3) $s(78))) : Bernoulli($c(0.961260529235005))) ($c(1) : $s(72)) )
## hash index
72
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x6, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(73)) and($a(2) $s(73)) and($a(0) $s(73))) : $c(0)) (or(and($a(1) $s(72)) and($a(2) $s(33)) and($a(3) $s(79))) : Bernoulli($c(0.941572720184922))) ($c(1) : $s(73)) )
## hash index
73
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x69, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(74)) and($a(2) $s(74)) and($a(0) $s(74)) and($a(3) $s(74))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(75)) and($a(0) $s(70)) and($a(3) $s(76))) : Bernoulli($c(0.637930810843643))) ($c(1) : $s(74)) )
## hash index
74
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x69, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(75)) and($a(2) $s(75)) and($a(0) $s(75)) and($a(3) $s(75))) : $c(0)) (or(and($a(1) $s(74)) and($a(2) $s(35)) and($a(0) $s(71)) and($a(3) $s(77))) : Bernoulli($c(0.623690763880548))) ($c(1) : $s(75)) )
## hash index
75
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x86, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(76)) and($a(2) $s(76)) and($a(0) $s(76)) and($a(3) $s(76))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(77)) and($a(0) $s(74)) and($a(3) $s(40))) : Bernoulli($c(0.603530148240296))) ($c(1) : $s(76)) )
## hash index
76
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x86, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(77)) and($a(2) $s(77)) and($a(0) $s(77)) and($a(3) $s(77))) : $c(0)) (or(and($a(1) $s(76)) and($a(2) $s(37)) and($a(0) $s(75)) and($a(3) $s(41))) : Bernoulli($c(0.587990543069808))) ($c(1) : $s(77)) )
## hash index
77
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x9, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(78)) and($a(2) $s(78)) and($a(0) $s(78)) and($a(3) $s(78))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(79)) and($a(0) $s(72)) and($a(3) $s(44))) : Bernoulli($c(0.930515645562034))) ($c(1) : $s(78)) )
## hash index
78
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x9, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(27) and($a(1) $s(79)) and($a(2) $s(79)) and($a(0) $s(79)) and($a(3) $s(79))) : $c(0)) (or(and($a(1) $s(78)) and($a(2) $s(39)) and($a(0) $s(73)) and($a(3) $s(45))) : Bernoulli($c(0.922824282689314))) ($c(1) : $s(79)) )
## hash index
79
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(27)))
## min
-1
## max
0
## independent from actions
1
## hash index
80
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
4
0 5
2 5
36 5
40 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1

## state fluent hash keys (first line is the number of keys)
4
1 5
3 5
37 5
41 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2

## state fluent hash keys (first line is the number of keys)
4
0 10
2 10
6 5
42 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3

## state fluent hash keys (first line is the number of keys)
4
1 10
3 10
7 5
43 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4

## state fluent hash keys (first line is the number of keys)
4
4 5
12 5
38 5
44 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5

## state fluent hash keys (first line is the number of keys)
4
5 5
13 5
39 5
45 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6

## state fluent hash keys (first line is the number of keys)
4
2 20
6 10
8 5
46 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7

## state fluent hash keys (first line is the number of keys)
4
3 20
7 10
9 5
47 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8

## state fluent hash keys (first line is the number of keys)
4
6 20
8 10
10 5
48 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9

## state fluent hash keys (first line is the number of keys)
4
7 20
9 10
11 5
49 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10

## state fluent hash keys (first line is the number of keys)
4
8 20
10 10
14 5
50 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11

## state fluent hash keys (first line is the number of keys)
4
9 20
11 10
15 5
51 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12

## state fluent hash keys (first line is the number of keys)
4
4 10
12 10
20 5
52 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13

## state fluent hash keys (first line is the number of keys)
4
5 10
13 10
21 5
53 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14

## state fluent hash keys (first line is the number of keys)
4
10 20
14 10
16 5
54 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15

## state fluent hash keys (first line is the number of keys)
4
11 20
15 10
17 5
55 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16

## state fluent hash keys (first line is the number of keys)
4
14 20
16 10
18 5
56 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17

## state fluent hash keys (first line is the number of keys)
4
15 20
17 10
19 5
57 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18

## state fluent hash keys (first line is the number of keys)
4
16 20
18 10
22 5
58 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19

## state fluent hash keys (first line is the number of keys)
4
17 20
19 10
23 5
59 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20

## state fluent hash keys (first line is the number of keys)
4
12 20
20 10
28 5
60 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21

## state fluent hash keys (first line is the number of keys)
4
13 20
21 10
29 5
61 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22

## state fluent hash keys (first line is the number of keys)
4
18 20
22 10
24 5
62 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23

## state fluent hash keys (first line is the number of keys)
4
19 20
23 10
25 5
63 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24

## state fluent hash keys (first line is the number of keys)
4
22 20
24 10
26 5
64 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25

## state fluent hash keys (first line is the number of keys)
4
23 20
25 10
27 5
65 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26

## state fluent hash keys (first line is the number of keys)
3
24 20
26 10
66 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27

## state fluent hash keys (first line is the number of keys)
81
0 20
1 20
2 40
3 40
4 20
5 20
6 40
7 40
8 40
9 40
10 40
11 40
12 40
13 40
14 40
15 40
16 40
17 40
18 40
19 40
20 20
21 20
22 40
23 40
24 40
25 20
26 20
27 10
28 10
29 10
30 5
31 5
32 5
33 5
34 5
35 5
36 10
37 10
38 10
39 10
40 10
41 10
42 10
43 10
44 10
45 10
46 10
47 10
48 10
49 10
50 10
51 10
52 10
53 10
54 10
55 10
56 10
57 10
58 10
59 10
60 10
61 10
62 10
63 10
64 10
65 10
66 10
67 5
68 5
69 5
70 5
71 5
72 5
73 5
74 5
75 5
76 5
77 5
78 5
79 5
80 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28

## state fluent hash keys (first line is the number of keys)
4
20 40
28 20
30 10
68 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29

## state fluent hash keys (first line is the number of keys)
4
21 40
29 20
31 10
69 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30

## state fluent hash keys (first line is the number of keys)
4
28 40
30 20
34 10
70 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31

## state fluent hash keys (first line is the number of keys)
4
29 40
31 20
35 10
71 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32

## state fluent hash keys (first line is the number of keys)
3
32 10
38 20
72 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33

## state fluent hash keys (first line is the number of keys)
3
33 10
39 20
73 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34

## state fluent hash keys (first line is the number of keys)
4
30 40
34 20
36 20
74 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35

## state fluent hash keys (first line is the number of keys)
4
31 40
35 20
37 20
75 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36

## state fluent hash keys (first line is the number of keys)
4
0 40
34 40
36 40
76 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37

## state fluent hash keys (first line is the number of keys)
4
1 40
35 40
37 40
77 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38

## state fluent hash keys (first line is the number of keys)
4
4 40
32 20
38 40
78 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39

## state fluent hash keys (first line is the number of keys)
4
5 40
33 20
39 40
79 10
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
5
0 80
40 20
41 20
42 20
76 20
## kleene state fluent hash keys (first line is the number of keys)
5
0 405
40 45
41 45
42 45
76 45

## index
1

## state fluent hash keys (first line is the number of keys)
5
1 80
40 40
41 40
43 20
77 20
## kleene state fluent hash keys (first line is the number of keys)
5
38980912 38501296
40 135
41 135
43 45
77 45

## index
2

## state fluent hash keys (first line is the number of keys)
5
2 80
40 80
42 40
43 40
46 20
## kleene state fluent hash keys (first line is the number of keys)
5
2 405
40 405
42 135
43 135
46 45

## index
3

## state fluent hash keys (first line is the number of keys)
5
3 80
41 80
42 80
43 80
47 20
## kleene state fluent hash keys (first line is the number of keys)
5
38501296 38556688
41 405
42 405
43 405
47 45

## index
4

## state fluent hash keys (first line is the number of keys)
5
4 80
44 20
45 20
52 20
78 20
## kleene state fluent hash keys (first line is the number of keys)
5
38538304 39092400
44 45
45 45
52 45
78 45

## index
5

## state fluent hash keys (first line is the number of keys)
5
5 80
44 40
45 40
53 20
79 20
## kleene state fluent hash keys (first line is the number of keys)
5
39055344 140241067215736
44 135
45 135
53 45
79 45

## index
6

## state fluent hash keys (first line is the number of keys)
5
6 80
42 160
46 40
47 40
48 20
## kleene state fluent hash keys (first line is the number of keys)
5
38538304 38575344
42 1215
46 135
47 135
48 45

## index
7

## state fluent hash keys (first line is the number of keys)
5
7 80
43 160
46 80
47 80
49 20
## kleene state fluent hash keys (first line is the number of keys)
5
38556688 38593728
43 1215
46 405
47 405
49 45

## index
8

## state fluent hash keys (first line is the number of keys)
5
8 80
46 160
48 40
49 40
50 20
## kleene state fluent hash keys (first line is the number of keys)
5
38575344 38612304
46 1215
48 135
49 135
50 45

## index
9

## state fluent hash keys (first line is the number of keys)
5
9 80
47 160
48 80
49 80
51 20
## kleene state fluent hash keys (first line is the number of keys)
5
38593728 38667504
47 1215
48 405
49 405
51 45

## index
10

## state fluent hash keys (first line is the number of keys)
5
10 80
48 160
50 40
51 40
54 20
## kleene state fluent hash keys (first line is the number of keys)
5
38612304 38778640
48 1215
50 135
51 135
54 45

## index
11

## state fluent hash keys (first line is the number of keys)
5
11 80
49 160
50 80
51 80
55 20
## kleene state fluent hash keys (first line is the number of keys)
5
38797376 38723200
49 1215
50 405
51 405
55 45

## index
12

## state fluent hash keys (first line is the number of keys)
5
12 80
44 80
52 40
53 40
60 20
## kleene state fluent hash keys (first line is the number of keys)
5
38667504 38797376
44 405
52 135
53 135
60 45

## index
13

## state fluent hash keys (first line is the number of keys)
5
13 80
45 80
52 80
53 80
61 20
## kleene state fluent hash keys (first line is the number of keys)
5
38778640 38686112
45 405
52 405
53 405
61 45

## index
14

## state fluent hash keys (first line is the number of keys)
5
14 80
50 160
54 40
55 40
56 20
## kleene state fluent hash keys (first line is the number of keys)
5
14 405
50 1215
54 135
55 135
56 45

## index
15

## state fluent hash keys (first line is the number of keys)
5
15 80
51 160
54 80
55 80
57 20
## kleene state fluent hash keys (first line is the number of keys)
5
38686112 38741728
51 1215
54 405
55 405
57 45

## index
16

## state fluent hash keys (first line is the number of keys)
5
16 80
54 160
56 40
57 40
58 20
## kleene state fluent hash keys (first line is the number of keys)
5
38723200 38760256
54 1215
56 135
57 135
58 45

## index
17

## state fluent hash keys (first line is the number of keys)
5
17 80
55 160
56 80
57 80
59 20
## kleene state fluent hash keys (first line is the number of keys)
5
38741728 38815840
55 1215
56 405
57 405
59 45

## index
18

## state fluent hash keys (first line is the number of keys)
5
18 80
56 160
58 40
59 40
62 20
## kleene state fluent hash keys (first line is the number of keys)
5
38760256 38906336
56 1215
58 135
59 135
62 45

## index
19

## state fluent hash keys (first line is the number of keys)
5
19 80
57 160
58 80
59 80
63 20
## kleene state fluent hash keys (first line is the number of keys)
5
19 405
57 1215
58 405
59 405
63 45

## index
20

## state fluent hash keys (first line is the number of keys)
5
20 80
52 160
60 40
61 40
68 20
## kleene state fluent hash keys (first line is the number of keys)
5
38815840 38924912
52 1215
60 135
61 135
68 45

## index
21

## state fluent hash keys (first line is the number of keys)
5
21 80
53 160
60 80
61 80
69 20
## kleene state fluent hash keys (first line is the number of keys)
5
38906336 38834416
53 1215
60 405
61 405
69 45

## index
22

## state fluent hash keys (first line is the number of keys)
5
22 80
58 160
62 40
63 40
64 20
## kleene state fluent hash keys (first line is the number of keys)
5
38924912 38376432
58 1215
62 135
63 135
64 45

## index
23

## state fluent hash keys (first line is the number of keys)
5
23 80
59 160
62 80
63 80
65 20
## kleene state fluent hash keys (first line is the number of keys)
5
38834416 38377840
59 1215
62 405
63 405
65 45

## index
24

## state fluent hash keys (first line is the number of keys)
5
24 80
62 160
64 40
65 40
66 20
## kleene state fluent hash keys (first line is the number of keys)
5
38376432 38378496
62 1215
64 135
65 135
66 45

## index
25

## state fluent hash keys (first line is the number of keys)
5
25 40
63 160
64 80
65 80
67 10
## kleene state fluent hash keys (first line is the number of keys)
5
38377840 38943296
63 1215
64 405
65 405
67 15

## index
26

## state fluent hash keys (first line is the number of keys)
4
26 40
64 160
66 40
67 20
## kleene state fluent hash keys (first line is the number of keys)
4
38390320 135
64 1215
66 135
67 45

## index
27

## state fluent hash keys (first line is the number of keys)
4
27 20
65 160
66 80
67 40
## kleene state fluent hash keys (first line is the number of keys)
4
38427392 45
65 1215
66 405
67 135

## index
28

## state fluent hash keys (first line is the number of keys)
5
28 80
60 160
68 40
69 40
70 20
## kleene state fluent hash keys (first line is the number of keys)
5
38378496 38961872
60 1215
68 135
69 135
70 45

## index
29

## state fluent hash keys (first line is the number of keys)
5
29 80
61 160
68 80
69 80
71 20
## kleene state fluent hash keys (first line is the number of keys)
5
38943296 38999456
61 1215
68 405
69 405
71 45

## index
30

## state fluent hash keys (first line is the number of keys)
5
30 80
68 160
70 40
71 40
74 20
## kleene state fluent hash keys (first line is the number of keys)
5
38961872 38999760
68 1215
70 135
71 135
74 45

## index
31

## state fluent hash keys (first line is the number of keys)
5
31 80
69 160
70 80
71 80
75 20
## kleene state fluent hash keys (first line is the number of keys)
5
38999456 39036528
69 1215
70 405
71 405
75 45

## index
32

## state fluent hash keys (first line is the number of keys)
4
32 40
72 20
73 20
78 40
## kleene state fluent hash keys (first line is the number of keys)
4
38723344 135
72 45
73 45
78 135

## index
33

## state fluent hash keys (first line is the number of keys)
4
33 40
72 40
73 40
79 40
## kleene state fluent hash keys (first line is the number of keys)
4
38971536 135
72 135
73 135
79 135

## index
34

## state fluent hash keys (first line is the number of keys)
5
34 80
70 160
74 40
75 40
76 40
## kleene state fluent hash keys (first line is the number of keys)
5
38999760 39055344
70 1215
74 135
75 135
76 135

## index
35

## state fluent hash keys (first line is the number of keys)
5
35 80
71 160
74 80
75 80
77 40
## kleene state fluent hash keys (first line is the number of keys)
5
39036528 39092400
71 1215
74 405
75 405
77 135

## index
36

## state fluent hash keys (first line is the number of keys)
5
36 80
40 160
74 160
76 80
77 80
## kleene state fluent hash keys (first line is the number of keys)
5
36 405
40 1215
74 1215
76 405
77 405

## index
37

## state fluent hash keys (first line is the number of keys)
5
37 80
41 160
75 160
76 160
77 160
## kleene state fluent hash keys (first line is the number of keys)
5
37 405
41 1215
75 1215
76 1215
77 1215

## index
38

## state fluent hash keys (first line is the number of keys)
5
38 80
44 160
72 80
78 80
79 80
## kleene state fluent hash keys (first line is the number of keys)
5
38 405
44 1215
72 405
78 405
79 405

## index
39

## state fluent hash keys (first line is the number of keys)
5
39 80
45 160
73 80
78 160
79 160
## kleene state fluent hash keys (first line is the number of keys)
5
39 405
45 1215
73 405
78 1215
79 1215

