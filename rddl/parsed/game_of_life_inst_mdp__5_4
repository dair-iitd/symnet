#####TASK##### Here
## name
game_of_life_inst_mdp__5_4
## horizon
40
## discount factor
1
## number of action fluents
16
## number of det state fluents
0
## number of prob state fluents
16
## number of preconds
0
## number of actions
17
## number of hashing functions
17
## initial state
0 0 1 0 0 0 0 1 0 1 0 1 0 0 1 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
set(x1, y1)
## number of values
2
## values
0 false
1 true

## index
1
## name
set(x1, y2)
## number of values
2
## values
0 false
1 true

## index
2
## name
set(x1, y3)
## number of values
2
## values
0 false
1 true

## index
3
## name
set(x1, y4)
## number of values
2
## values
0 false
1 true

## index
4
## name
set(x2, y1)
## number of values
2
## values
0 false
1 true

## index
5
## name
set(x2, y2)
## number of values
2
## values
0 false
1 true

## index
6
## name
set(x2, y3)
## number of values
2
## values
0 false
1 true

## index
7
## name
set(x2, y4)
## number of values
2
## values
0 false
1 true

## index
8
## name
set(x3, y1)
## number of values
2
## values
0 false
1 true

## index
9
## name
set(x3, y2)
## number of values
2
## values
0 false
1 true

## index
10
## name
set(x3, y3)
## number of values
2
## values
0 false
1 true

## index
11
## name
set(x3, y4)
## number of values
2
## values
0 false
1 true

## index
12
## name
set(x4, y1)
## number of values
2
## values
0 false
1 true

## index
13
## name
set(x4, y2)
## number of values
2
## values
0 false
1 true

## index
14
## name
set(x4, y3)
## number of values
2
## values
0 false
1 true

## index
15
## name
set(x4, y4)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
alive(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(0) >=(+($s(1) $s(4) $s(5)) $c(2)) <=(+($s(1) $s(4) $s(5)) $c(3))) and(~($s(0)) ==(+($s(1) $s(4) $s(5)) $c(3))) $a(0)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1

## index
1
## name
alive(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(1) >=(+($s(0) $s(2) $s(4) $s(5) $s(6)) $c(2)) <=(+($s(0) $s(2) $s(4) $s(5) $s(6)) $c(3))) and(~($s(1)) ==(+($s(0) $s(2) $s(4) $s(5) $s(6)) $c(3))) $a(1)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0

## index
2
## name
alive(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(2) >=(+($s(1) $s(3) $s(5) $s(6) $s(7)) $c(2)) <=(+($s(1) $s(3) $s(5) $s(6) $s(7)) $c(3))) and(~($s(2)) ==(+($s(1) $s(3) $s(5) $s(6) $s(7)) $c(3))) $a(2)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0

## index
3
## name
alive(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(3) >=(+($s(2) $s(6) $s(7)) $c(2)) <=(+($s(2) $s(6) $s(7)) $c(3))) and(~($s(3)) ==(+($s(2) $s(6) $s(7)) $c(3))) $a(3)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0

## index
4
## name
alive(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(4) >=(+($s(0) $s(1) $s(5) $s(8) $s(9)) $c(2)) <=(+($s(0) $s(1) $s(5) $s(8) $s(9)) $c(3))) and(~($s(4)) ==(+($s(0) $s(1) $s(5) $s(8) $s(9)) $c(3))) $a(4)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0

## index
5
## name
alive(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(5) >=(+($s(0) $s(1) $s(2) $s(4) $s(6) $s(8) $s(9) $s(10)) $c(2)) <=(+($s(0) $s(1) $s(2) $s(4) $s(6) $s(8) $s(9) $s(10)) $c(3))) and(~($s(5)) ==(+($s(0) $s(1) $s(2) $s(4) $s(6) $s(8) $s(9) $s(10)) $c(3))) $a(5)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0

## index
6
## name
alive(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(6) >=(+($s(1) $s(2) $s(3) $s(5) $s(7) $s(9) $s(10) $s(11)) $c(2)) <=(+($s(1) $s(2) $s(3) $s(5) $s(7) $s(9) $s(10) $s(11)) $c(3))) and(~($s(6)) ==(+($s(1) $s(2) $s(3) $s(5) $s(7) $s(9) $s(10) $s(11)) $c(3))) $a(6)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0

## index
7
## name
alive(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(7) >=(+($s(2) $s(3) $s(6) $s(10) $s(11)) $c(2)) <=(+($s(2) $s(3) $s(6) $s(10) $s(11)) $c(3))) and(~($s(7)) ==(+($s(2) $s(3) $s(6) $s(10) $s(11)) $c(3))) $a(7)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
8
## name
alive(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(8) >=(+($s(4) $s(5) $s(9) $s(12) $s(13)) $c(2)) <=(+($s(4) $s(5) $s(9) $s(12) $s(13)) $c(3))) and(~($s(8)) ==(+($s(4) $s(5) $s(9) $s(12) $s(13)) $c(3))) $a(8)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
9
## name
alive(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(9) >=(+($s(4) $s(5) $s(6) $s(8) $s(10) $s(12) $s(13) $s(14)) $c(2)) <=(+($s(4) $s(5) $s(6) $s(8) $s(10) $s(12) $s(13) $s(14)) $c(3))) and(~($s(9)) ==(+($s(4) $s(5) $s(6) $s(8) $s(10) $s(12) $s(13) $s(14)) $c(3))) $a(9)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
10
## name
alive(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(10) >=(+($s(5) $s(6) $s(7) $s(9) $s(11) $s(13) $s(14) $s(15)) $c(2)) <=(+($s(5) $s(6) $s(7) $s(9) $s(11) $s(13) $s(14) $s(15)) $c(3))) and(~($s(10)) ==(+($s(5) $s(6) $s(7) $s(9) $s(11) $s(13) $s(14) $s(15)) $c(3))) $a(10)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
11
## name
alive(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(11) >=(+($s(6) $s(7) $s(10) $s(14) $s(15)) $c(2)) <=(+($s(6) $s(7) $s(10) $s(14) $s(15)) $c(3))) and(~($s(11)) ==(+($s(6) $s(7) $s(10) $s(14) $s(15)) $c(3))) $a(11)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
12
## name
alive(x4, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(12) >=(+($s(8) $s(9) $s(13)) $c(2)) <=(+($s(8) $s(9) $s(13)) $c(3))) and(~($s(12)) ==(+($s(8) $s(9) $s(13)) $c(3))) $a(12)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
13
## name
alive(x4, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(13) >=(+($s(8) $s(9) $s(10) $s(12) $s(14)) $c(2)) <=(+($s(8) $s(9) $s(10) $s(12) $s(14)) $c(3))) and(~($s(13)) ==(+($s(8) $s(9) $s(10) $s(12) $s(14)) $c(3))) $a(13)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
14
## name
alive(x4, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(14) >=(+($s(9) $s(10) $s(11) $s(13) $s(15)) $c(2)) <=(+($s(9) $s(10) $s(11) $s(13) $s(15)) $c(3))) and(~($s(14)) ==(+($s(9) $s(10) $s(11) $s(13) $s(15)) $c(3))) $a(14)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0

## index
15
## name
alive(x4, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(15) >=(+($s(10) $s(11) $s(14)) $c(2)) <=(+($s(10) $s(11) $s(14)) $c(3))) and(~($s(15)) ==(+($s(10) $s(11) $s(14)) $c(3))) $a(15)) : Bernoulli($c(0.9))) ($c(1) : Bernoulli($c(0.1))) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0



#####REWARD#####
## formula
+(-($s(0) $a(0)) -($s(1) $a(1)) -($s(2) $a(2)) -($s(3) $a(3)) -($s(4) $a(4)) -($s(5) $a(5)) -($s(6) $a(6)) -($s(7) $a(7)) -($s(8) $a(8)) -($s(9) $a(9)) -($s(10) $a(10)) -($s(11) $a(11)) -($s(12) $a(12)) -($s(13) $a(13)) -($s(14) $a(14)) -($s(15) $a(15)))
## min
-1
## max
16
## independent from actions
0
## hash index
16
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
0 2
1 2
4 2
5 2
16 17
## kleene state fluent hash keys (first line is the number of keys)
5
-1939944584 30479264
1 2
4 2
5 2
16 17

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
4 4
5 4
6 2
16 34
## kleene state fluent hash keys (first line is the number of keys)
7
-1939944584 30537808
1 6
2 2
4 6
5 6
6 2
16 51

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 8
2 4
3 2
5 8
6 4
7 2
16 68
## kleene state fluent hash keys (first line is the number of keys)
7
30479264 30610864
2 6
3 2
5 18
6 6
7 2
16 153

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
2 8
3 4
6 8
7 4
16 136
## kleene state fluent hash keys (first line is the number of keys)
5
2 18
3 6
6 18
7 6
16 459

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 8
1 16
4 8
5 16
8 2
9 2
16 272
## kleene state fluent hash keys (first line is the number of keys)
7
30537808 30727840
1 54
4 18
5 54
8 2
9 2
16 1377

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
0 16
1 32
2 16
4 16
5 32
6 16
8 4
9 4
10 2
16 544
## kleene state fluent hash keys (first line is the number of keys)
10
30610864 30735728
1 162
2 54
4 54
5 162
6 54
8 6
9 6
10 2
16 4131

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
1 64
2 32
3 8
5 64
6 32
7 8
9 8
10 4
11 2
16 1088
## kleene state fluent hash keys (first line is the number of keys)
10
30727840 30670048
2 162
3 18
5 486
6 162
7 18
9 18
10 6
11 2
16 12393

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
2 64
3 16
6 64
7 16
10 8
11 4
16 2176
## kleene state fluent hash keys (first line is the number of keys)
7
30735728 30738048
3 54
6 486
7 54
10 18
11 6
16 37179

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
4 32
5 128
8 8
9 16
12 2
13 2
16 4352
## kleene state fluent hash keys (first line is the number of keys)
7
30670048 30756384
5 1458
8 18
9 54
12 2
13 2
16 111537

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
4 64
5 256
6 128
8 16
9 32
10 16
12 4
13 4
14 2
16 8704
## kleene state fluent hash keys (first line is the number of keys)
10
30738336 30757824
5 4374
6 1458
8 54
9 162
10 54
12 6
13 6
14 2
16 334611

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
5 512
6 256
7 32
9 64
10 32
11 8
13 8
14 4
15 2
16 17408
## kleene state fluent hash keys (first line is the number of keys)
10
30738048 30611152
6 4374
7 162
9 486
10 162
11 18
13 18
14 6
15 2
16 1003833

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
6 512
7 64
10 64
11 16
14 8
15 4
16 34816
## kleene state fluent hash keys (first line is the number of keys)
7
30756384 30738336
7 486
10 486
11 54
14 18
15 6
16 3011499

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
8 32
9 128
12 8
13 16
16 69632
## kleene state fluent hash keys (first line is the number of keys)
5
8 162
9 1458
12 18
13 54
16 9034497

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
8 64
9 256
10 128
12 16
13 32
14 16
16 139264
## kleene state fluent hash keys (first line is the number of keys)
7
30611152 30753872
9 4374
10 1458
12 54
13 162
14 54
16 27103491

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
9 512
10 256
11 32
13 64
14 32
15 8
16 278528
## kleene state fluent hash keys (first line is the number of keys)
7
9 13122
10 4374
11 162
13 486
14 162
15 18
16 81310473

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
10 512
11 64
14 64
15 16
16 557056
## kleene state fluent hash keys (first line is the number of keys)
5
10 13122
11 486
14 486
15 54
16 243931419

