#####TASK##### Here
## name
tamarisk_inst_mdp__3
## horizon
40
## discount factor
1
## number of action fluents
10
## number of det state fluents
0
## number of prob state fluents
20
## number of preconds
0
## number of actions
11
## number of hashing functions
21
## initial state
0 0 0 1 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
eradicate(r1)
## number of values
2
## values
0 false
1 true

## index
1
## name
eradicate(r2)
## number of values
2
## values
0 false
1 true

## index
2
## name
eradicate(r3)
## number of values
2
## values
0 false
1 true

## index
3
## name
eradicate(r4)
## number of values
2
## values
0 false
1 true

## index
4
## name
eradicate(r5)
## number of values
2
## values
0 false
1 true

## index
5
## name
restore(r1)
## number of values
2
## values
0 false
1 true

## index
6
## name
restore(r2)
## number of values
2
## values
0 false
1 true

## index
7
## name
restore(r3)
## number of values
2
## values
0 false
1 true

## index
8
## name
restore(r4)
## number of values
2
## values
0 false
1 true

## index
9
## name
restore(r5)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
native-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(10) $s(0)) : Bernoulli($c(0.2))) (and(~($s(10)) $s(0) $a(5)) : $c(1)) (and(~($s(10)) ~($s(0)) $a(5)) : Bernoulli($c(0.9))) ($s(0) : Bernoulli($c(0.95))) (and(~($s(10)) ~($s(0))) : Bernoulli($c(0.1))) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0

## index
1
## name
native-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(11) $s(1)) : Bernoulli($c(0.2))) (and(~($s(11)) $s(1) $a(5)) : $c(1)) (and(~($s(11)) ~($s(1)) $a(5)) : Bernoulli($c(0.9))) ($s(1) : Bernoulli($c(0.95))) (and(~($s(11)) ~($s(1))) : Bernoulli($c(0.1))) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0

## index
2
## name
native-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(12) $s(2)) : Bernoulli($c(0.2))) (and(~($s(12)) $s(2) $a(6)) : $c(1)) (and(~($s(12)) ~($s(2)) $a(6)) : Bernoulli($c(0.9))) ($s(2) : Bernoulli($c(0.95))) (and(~($s(12)) ~($s(2))) : Bernoulli($c(0.1))) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0

## index
3
## name
native-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(13) $s(3)) : Bernoulli($c(0.2))) (and(~($s(13)) $s(3) $a(6)) : $c(1)) (and(~($s(13)) ~($s(3)) $a(6)) : Bernoulli($c(0.9))) ($s(3) : Bernoulli($c(0.95))) (and(~($s(13)) ~($s(3))) : Bernoulli($c(0.1))) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0

## index
4
## name
native-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(14) $s(4)) : Bernoulli($c(0.2))) (and(~($s(14)) $s(4) $a(7)) : $c(1)) (and(~($s(14)) ~($s(4)) $a(7)) : Bernoulli($c(0.9))) ($s(4) : Bernoulli($c(0.95))) (and(~($s(14)) ~($s(4))) : Bernoulli($c(0.1))) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
5
## name
native-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(15) $s(5)) : Bernoulli($c(0.2))) (and(~($s(15)) $s(5) $a(7)) : $c(1)) (and(~($s(15)) ~($s(5)) $a(7)) : Bernoulli($c(0.9))) ($s(5) : Bernoulli($c(0.95))) (and(~($s(15)) ~($s(5))) : Bernoulli($c(0.1))) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
6
## name
native-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) $s(6)) : Bernoulli($c(0.2))) (and(~($s(16)) $s(6) $a(8)) : $c(1)) (and(~($s(16)) ~($s(6)) $a(8)) : Bernoulli($c(0.9))) ($s(6) : Bernoulli($c(0.95))) (and(~($s(16)) ~($s(6))) : Bernoulli($c(0.1))) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
7
## name
native-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) $s(7)) : Bernoulli($c(0.2))) (and(~($s(17)) $s(7) $a(8)) : $c(1)) (and(~($s(17)) ~($s(7)) $a(8)) : Bernoulli($c(0.9))) ($s(7) : Bernoulli($c(0.95))) (and(~($s(17)) ~($s(7))) : Bernoulli($c(0.1))) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
8
## name
native-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(8)) : Bernoulli($c(0.2))) (and(~($s(18)) $s(8) $a(9)) : $c(1)) (and(~($s(18)) ~($s(8)) $a(9)) : Bernoulli($c(0.9))) ($s(8) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(8))) : Bernoulli($c(0.1))) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
9
## name
native-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(9)) : Bernoulli($c(0.2))) (and(~($s(19)) $s(9) $a(9)) : $c(1)) (and(~($s(19)) ~($s(9)) $a(9)) : Bernoulli($c(0.9))) ($s(9) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(9))) : Bernoulli($c(0.1))) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0

## index
10
## name
tamarisk-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(10) $s(0)) : Bernoulli($c(0.8))) (and(~($s(10)) $a(0)) : $c(0)) (and($s(10) $a(0)) : Bernoulli($c(0.1))) ($s(10) : Bernoulli($c(0.95))) (and(~($s(10)) ~($s(0))) : Bernoulli(+(*(-($c(1) *(switch( ($s(11) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(12) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1

## index
11
## name
tamarisk-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(11) $s(1)) : Bernoulli($c(0.8))) (and(~($s(11)) $a(0)) : $c(0)) (and($s(11) $a(0)) : Bernoulli($c(0.1))) ($s(11) : Bernoulli($c(0.95))) (and(~($s(11)) ~($s(1))) : Bernoulli(+(*(-($c(1) *(switch( ($s(10) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(12) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1

## index
12
## name
tamarisk-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(12) $s(2)) : Bernoulli($c(0.8))) (and(~($s(12)) $a(1)) : $c(0)) (and($s(12) $a(1)) : Bernoulli($c(0.1))) ($s(12) : Bernoulli($c(0.95))) (and(~($s(12)) ~($s(2))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(10) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(11) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(14) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(15) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0

## index
13
## name
tamarisk-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(13) $s(3)) : Bernoulli($c(0.8))) (and(~($s(13)) $a(1)) : $c(0)) (and($s(13) $a(1)) : Bernoulli($c(0.1))) ($s(13) : Bernoulli($c(0.95))) (and(~($s(13)) ~($s(3))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(10) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(11) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(14) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(15) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0

## index
14
## name
tamarisk-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(14) $s(4)) : Bernoulli($c(0.8))) (and(~($s(14)) $a(2)) : $c(0)) (and($s(14) $a(2)) : Bernoulli($c(0.1))) ($s(14) : Bernoulli($c(0.95))) (and(~($s(14)) ~($s(4))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(16) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0

## index
15
## name
tamarisk-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(15) $s(5)) : Bernoulli($c(0.8))) (and(~($s(15)) $a(2)) : $c(0)) (and($s(15) $a(2)) : Bernoulli($c(0.1))) ($s(15) : Bernoulli($c(0.95))) (and(~($s(15)) ~($s(5))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(12) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(13) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(16) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0

## index
16
## name
tamarisk-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) $s(6)) : Bernoulli($c(0.8))) (and(~($s(16)) $a(3)) : $c(0)) (and($s(16) $a(3)) : Bernoulli($c(0.1))) ($s(16) : Bernoulli($c(0.95))) (and(~($s(16)) ~($s(6))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0

## index
17
## name
tamarisk-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) $s(7)) : Bernoulli($c(0.8))) (and(~($s(17)) $a(3)) : $c(0)) (and($s(17) $a(3)) : Bernoulli($c(0.1))) ($s(17) : Bernoulli($c(0.95))) (and(~($s(17)) ~($s(7))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(14) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(15) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(18) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0

## index
18
## name
tamarisk-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(8)) : Bernoulli($c(0.8))) (and(~($s(18)) $a(4)) : $c(0)) (and($s(18) $a(4)) : Bernoulli($c(0.1))) ($s(18) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(8))) : Bernoulli(+(*(-($c(1) *(switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0

## index
19
## name
tamarisk-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(9)) : Bernoulli($c(0.8))) (and(~($s(19)) $a(4)) : $c(0)) (and($s(19) $a(4)) : Bernoulli($c(0.1))) ($s(19) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(9))) : Bernoulli(+(*(-($c(1) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(16) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(17) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0



#####REWARD#####
## formula
+(*(or($s(10) $s(11)) $c(-5)) *(or($s(12) $s(13)) $c(-5)) *(or($s(14) $s(15)) $c(-5)) *(or($s(16) $s(17)) $c(-5)) *(or($s(18) $s(19)) $c(-5)) *($s(10) $c(-0.5)) *($s(11) $c(-0.5)) *($s(12) $c(-0.5)) *($s(13) $c(-0.5)) *($s(14) $c(-0.5)) *($s(15) $c(-0.5)) *($s(16) $c(-0.5)) *($s(17) $c(-0.5)) *($s(18) $c(-0.5)) *($s(19) $c(-0.5)) *(and(~($s(10)) ~($s(0))) $c(-0.25)) *(and(~($s(11)) ~($s(1))) $c(-0.25)) *(and(~($s(12)) ~($s(2))) $c(-0.25)) *(and(~($s(13)) ~($s(3))) $c(-0.25)) *(and(~($s(14)) ~($s(4))) $c(-0.25)) *(and(~($s(15)) ~($s(5))) $c(-0.25)) *(and(~($s(16)) ~($s(6))) $c(-0.25)) *(and(~($s(17)) ~($s(7))) $c(-0.25)) *(and(~($s(18)) ~($s(8))) $c(-0.25)) *(and(~($s(19)) ~($s(9))) $c(-0.25)) *($a(0) $c(-0.49)) *($a(1) $c(-0.49)) *($a(2) $c(-0.49)) *($a(3) $c(-0.49)) *($a(4) $c(-0.49)) *($a(5) $c(-0.9)) *($a(6) $c(-0.9)) *($a(7) $c(-0.9)) *($a(8) $c(-0.9)) *($a(9) $c(-0.9)) *(and($a(5) ~($s(10)) ~($s(0))) $c(-0.4)) *(and($a(5) ~($s(11)) ~($s(1))) $c(-0.4)) *(and($a(6) ~($s(12)) ~($s(2))) $c(-0.4)) *(and($a(6) ~($s(13)) ~($s(3))) $c(-0.4)) *(and($a(7) ~($s(14)) ~($s(4))) $c(-0.4)) *(and($a(7) ~($s(15)) ~($s(5))) $c(-0.4)) *(and($a(8) ~($s(16)) ~($s(6))) $c(-0.4)) *(and($a(8) ~($s(17)) ~($s(7))) $c(-0.4)) *(and($a(9) ~($s(18)) ~($s(8))) $c(-0.4)) *(and($a(9) ~($s(19)) ~($s(9))) $c(-0.4)))
## min
-34.2
## max
-0
## independent from actions
0
## hash index
20
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
10 2
20 11
## kleene state fluent hash keys (first line is the number of keys)
3
0 2
10 2
20 11

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
1 2
11 2
20 22
## kleene state fluent hash keys (first line is the number of keys)
3
38822512 2
11 2
20 33

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
2 2
12 2
20 44
## kleene state fluent hash keys (first line is the number of keys)
3
38822592 2
12 2
20 99

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
3 2
13 2
20 88
## kleene state fluent hash keys (first line is the number of keys)
3
38822672 2
13 2
20 297

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 2
14 2
20 176
## kleene state fluent hash keys (first line is the number of keys)
3
38821712 2
14 2
20 891

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
5 2
15 2
20 352
## kleene state fluent hash keys (first line is the number of keys)
3
38821792 2
15 2
20 2673

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 2
16 2
20 704
## kleene state fluent hash keys (first line is the number of keys)
3
38821872 2
16 2
20 8019

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
7 2
17 2
20 1408
## kleene state fluent hash keys (first line is the number of keys)
3
38821952 2
17 2
20 24057

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 2
18 2
20 2816
## kleene state fluent hash keys (first line is the number of keys)
3
38822032 2
18 2
20 72171

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 2
19 2
20 5632
## kleene state fluent hash keys (first line is the number of keys)
3
38822112 2
19 2
20 216513

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
0 4
10 4
11 4
12 4
13 4
20 11264
## kleene state fluent hash keys (first line is the number of keys)
6
-1296123016 38782832
10 6
11 6
12 6
13 6
20 649539

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
1 4
10 8
11 8
12 8
13 8
20 22528
## kleene state fluent hash keys (first line is the number of keys)
6
1 6
10 18
11 18
12 18
13 18
20 1948617

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
2 4
10 16
11 16
12 16
13 16
14 4
15 4
20 45056
## kleene state fluent hash keys (first line is the number of keys)
8
2 6
10 54
11 54
12 54
13 54
14 6
15 6
20 5845851

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
3 4
10 32
11 32
12 32
13 32
14 8
15 8
20 90112
## kleene state fluent hash keys (first line is the number of keys)
8
3 6
10 162
11 162
12 162
13 162
14 18
15 18
20 17537553

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
4 4
12 64
13 64
14 16
15 16
16 4
17 4
20 180224
## kleene state fluent hash keys (first line is the number of keys)
8
38752816 38812848
12 486
13 486
14 54
15 54
16 6
17 6
20 52612659

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
5 4
12 128
13 128
14 32
15 32
16 8
17 8
20 360448
## kleene state fluent hash keys (first line is the number of keys)
8
5 6
12 1458
13 1458
14 162
15 162
16 18
17 18
20 157837977

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
6 4
14 64
15 64
16 16
17 16
18 4
19 4
20 720896
## kleene state fluent hash keys (first line is the number of keys)
8
38782832 38821040
14 486
15 486
16 54
17 54
18 6
19 6
20 473513931

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
7 4
14 128
15 128
16 32
17 32
18 8
19 8
20 1441792
## kleene state fluent hash keys (first line is the number of keys)
8
7 6
14 1458
15 1458
16 162
17 162
18 18
19 18
20 1420541793

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
8 4
16 64
17 64
18 16
19 16
20 2883584
## kleene state fluent hash keys (first line is the number of keys)
6
38812848 140418364652408
16 486
17 486
18 54
19 54
20 4261625379

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
9 4
16 128
17 128
18 32
19 32
20 5767168
## kleene state fluent hash keys (first line is the number of keys)
6
9 6
16 1458
17 1458
18 162
19 162
20 12784876137

