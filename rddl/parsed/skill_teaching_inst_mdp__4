#####TASK##### Here
## name
skill_teaching_inst_mdp__4
## horizon
40
## discount factor
1
## number of action fluents
8
## number of det state fluents
16
## number of prob state fluents
8
## number of preconds
0
## number of actions
9
## number of hashing functions
25
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
askProb(s0)
## number of values
2
## values
0 false
1 true

## index
1
## name
askProb(s1)
## number of values
2
## values
0 false
1 true

## index
2
## name
askProb(s2)
## number of values
2
## values
0 false
1 true

## index
3
## name
askProb(s3)
## number of values
2
## values
0 false
1 true

## index
4
## name
giveHint(s0)
## number of values
2
## values
0 false
1 true

## index
5
## name
giveHint(s1)
## number of values
2
## values
0 false
1 true

## index
6
## name
giveHint(s2)
## number of values
2
## values
0 false
1 true

## index
7
## name
giveHint(s3)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
hintDelayVar(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(4))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0

## index
1
## name
hintDelayVar(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(5))
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0

## index
2
## name
hintDelayVar(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(6))
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0

## index
3
## name
hintDelayVar(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(7))
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
4
## name
hintedRight(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(4))
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0

## index
5
## name
hintedRight(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(5))
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0

## index
6
## name
hintedRight(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(6) $s(21))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0

## index
7
## name
hintedRight(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(7) $s(20) $s(22))
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
8
## name
proficiencyMed(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) $s(8)) : $c(1)) (and($s(12) $s(4)) : $c(1)) (and($s(12) $s(16)) : $c(1)) ($s(20) : $c(1)) ($c(1) : and($s(8) $s(12) $s(0))) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
9
## name
proficiencyMed(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(13)) $s(9)) : $c(1)) (and($s(13) $s(5)) : $c(1)) (and($s(13) $s(17)) : $c(1)) ($s(21) : $c(1)) ($c(1) : and($s(9) $s(13) $s(1))) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
10
## name
proficiencyMed(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(14)) $s(10)) : $c(1)) (and($s(14) $s(6)) : $c(1)) (and($s(14) $s(18)) : $c(1)) ($s(22) : $c(1)) ($c(1) : and($s(10) $s(14) $s(2))) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
11
## name
proficiencyMed(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(15)) $s(11)) : $c(1)) (and($s(15) $s(7)) : $c(1)) (and($s(15) $s(19)) : $c(1)) ($s(23) : $c(1)) ($c(1) : and($s(11) $s(15) $s(3))) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
12
## name
updateTurn(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(0) $a(4)))
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 2

## index
13
## name
updateTurn(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(1) $a(5)))
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 2
8 0

## index
14
## name
updateTurn(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(2) $a(6)))
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 2
7 0
8 0

## index
15
## name
updateTurn(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) or($a(3) $a(7)))
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 2
6 0
7 0
8 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
answeredRight(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(20)) : Bernoulli($c(0.8716181))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(8)) : Bernoulli($c(0.7270725))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0) $s(8) $a(0)) : $c(0)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(0)) : Bernoulli($c(0.5896874))) ($c(1) : $c(0)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1

## index
1
## name
answeredRight(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(21)) : Bernoulli($c(0.9575662))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(9)) : Bernoulli($c(0.7719059))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1) $s(9) $a(1)) : $c(0)) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(1)) : Bernoulli($c(0.7384989))) ($c(1) : $c(0)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0

## index
2
## name
answeredRight(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(22)) : Bernoulli($c(0.8832095))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(10) $s(21)) : Bernoulli($c(0.71999276))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(10) $a(2)) : Bernoulli($c(0.656938505172729))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $s(21)) : Bernoulli($c(0.55139333))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(2) $a(2)) : Bernoulli($c(0.502592098712921))) ($c(1) : $c(0)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
3
## name
answeredRight(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(23)) : Bernoulli($c(0.95536256))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(11) $s(20) $s(22)) : Bernoulli($c(0.68164736))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(11) $a(3)) : Bernoulli($c(0.574335193634033))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $s(20) $s(22)) : Bernoulli($c(0.59788907))) (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15)) $a(3) $a(3)) : Bernoulli($c(0.517476999759674))) ($c(1) : $c(0)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
4
## name
proficiencyHigh(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(20)) (and(~($s(12)) $s(20)) : Bernoulli($c(0.963988092541695))) (and($s(8) $s(12) $s(16)) : $c(1)) ($c(1) : and($s(20) $s(12) or($s(0) $s(16)))) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
5
## name
proficiencyHigh(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(21)) (and(~($s(13)) $s(21)) : Bernoulli($c(0.985323312878609))) (and($s(9) $s(13) $s(17)) : $c(1)) ($c(1) : and($s(21) $s(13) or($s(1) $s(17)))) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
6
## name
proficiencyHigh(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(22)) (and(~($s(14)) $s(22)) : Bernoulli($c(0.982758969068527))) (and($s(10) $s(14) $s(18)) : $c(1)) ($c(1) : and($s(22) $s(14) or($s(2) $s(18)))) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
7
## name
proficiencyHigh(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(12)) ~($s(13)) ~($s(14)) ~($s(15))) : $s(23)) (and(~($s(15)) $s(23)) : Bernoulli($c(0.99))) (and($s(11) $s(15) $s(19)) : $c(1)) ($c(1) : and($s(23) $s(15) or($s(3) $s(19)))) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0



#####REWARD#####
## formula
+(*($s(20) $c(1.3676419)) *($s(21) $c(1.4597329)) *($s(22) $c(2.210034)) *($s(23) $c(3.3674781)) -($c(0) *(~($s(8)) $c(1.3676419))) -($c(0) *(~($s(9)) $c(1.4597329))) -($c(0) *(~($s(10)) $c(2.210034))) -($c(0) *(~($s(11)) $c(3.3674781))))
## min
-8.4048869
## max
8.4048869
## independent from actions
1
## hash index
24
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
1 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
8 1
20 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
9 1
21 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
10 1
22 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
11 1
23 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
1
8 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
1
9 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
1
10 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
1
11 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
8 4
16 2
20 2
24 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
9 4
17 2
21 2
24 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
10 4
18 2
22 2
24 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
11 4
19 2
23 2
24 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
21
0 2
1 2
2 2
3 2
4 2
5 2
6 2
7 2
8 8
12 3
13 3
14 3
15 3
16 4
17 4
18 4
19 4
20 4
21 4
22 4
23 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
21
0 4
1 4
2 4
3 4
4 4
5 4
6 4
7 4
9 8
12 6
13 6
14 6
15 6
16 8
17 8
18 8
19 8
20 8
21 8
22 8
23 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
21
0 8
1 8
2 8
3 8
4 8
5 8
6 8
7 8
10 8
12 12
13 12
14 12
15 12
16 16
17 16
18 16
19 16
20 16
21 16
22 16
23 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
21
0 16
1 16
2 16
3 16
4 16
5 16
6 16
7 16
11 8
12 24
13 24
14 24
15 24
16 32
17 32
18 32
19 32
20 32
21 32
22 32
23 32
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
8 16
20 64
## kleene state fluent hash keys (first line is the number of keys)
2
29653552 81
20 729

## index
1
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
9 16
21 64
## kleene state fluent hash keys (first line is the number of keys)
2
29662464 81
21 729

## index
2
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
10 16
22 64
## kleene state fluent hash keys (first line is the number of keys)
2
29655424 81
22 729

## index
3
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
11 16
23 64
## kleene state fluent hash keys (first line is the number of keys)
2
29649120 81
23 729

## index
4
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
7 32
8 32
16 64
19 64
20 128
24 16
## kleene state fluent hash keys (first line is the number of keys)
6
29723056 29657824
8 243
16 486
19 486
20 2187
24 81

## index
5
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
6 32
9 32
17 64
18 64
21 128
24 32
## kleene state fluent hash keys (first line is the number of keys)
6
29654688 29768272
9 243
17 486
18 486
21 2187
24 243

## index
6
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
7 64
10 32
18 128
19 128
22 128
24 64
## kleene state fluent hash keys (first line is the number of keys)
6
29657824 139868515900280
10 243
18 1458
19 1458
22 2187
24 729

## index
7
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
11 32
19 256
23 128
24 128
## kleene state fluent hash keys (first line is the number of keys)
4
29677280 243
19 4374
23 2187
24 2187

