#####TASK##### Here
## name
elevators_inst_mdp__6
## horizon
40
## discount factor
1
## number of action fluents
8
## number of det state fluents
16
## number of prob state fluents
4
## number of preconds
0
## number of actions
25
## number of hashing functions
21
## initial state
1 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
close-door(e0)
## number of values
2
## values
0 false
1 true

## index
1
## name
close-door(e1)
## number of values
2
## values
0 false
1 true

## index
2
## name
move-current-dir(e0)
## number of values
2
## values
0 false
1 true

## index
3
## name
move-current-dir(e1)
## number of values
2
## values
0 false
1 true

## index
4
## name
open-door-going-down(e0)
## number of values
2
## values
0 false
1 true

## index
5
## name
open-door-going-down(e1)
## number of values
2
## values
0 false
1 true

## index
6
## name
open-door-going-up(e0)
## number of values
2
## values
0 false
1 true

## index
7
## name
open-door-going-up(e1)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
elevator-at-floor(e0, f0)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(8)) ~($a(2))) : $s(0)) (and($a(2) ~($s(10)) $s(1)) : $c(1)) (and($a(2) $s(10) ~($s(0))) : $s(0)) (and($a(2) ~($s(10))) : $s(0)) ($c(1) : $c(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 1
17 1
18 0
19 0
20 1
21 0
22 0
23 0
24 0

## index
1
## name
elevator-at-floor(e0, f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(8)) ~($a(2))) : $s(1)) (and($a(2) $s(10) $s(0)) : $c(1)) (and($a(2) ~($s(10)) $s(2)) : $c(1)) (and($a(2) $s(10) ~($s(1))) : $s(1)) (and($a(2) ~($s(10)) ~($s(1))) : $s(1)) ($c(1) : $c(0)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 1
17 1
18 0
19 0
20 1
21 0
22 0
23 0
24 0

## index
2
## name
elevator-at-floor(e0, f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(8)) ~($a(2))) : $s(2)) (and($a(2) $s(10) $s(1)) : $c(1)) (and($a(2) ~($s(10)) $s(3)) : $c(1)) (and($a(2) $s(10) ~($s(2))) : $s(2)) (and($a(2) ~($s(10)) ~($s(2))) : $s(2)) ($c(1) : $c(0)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 1
17 1
18 0
19 0
20 1
21 0
22 0
23 0
24 0

## index
3
## name
elevator-at-floor(e0, f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(8)) ~($a(2))) : $s(3)) (and($a(2) $s(10) $s(2)) : $c(1)) (and($a(2) $s(10)) : $s(3)) (and($a(2) ~($s(10)) ~($s(3))) : $s(3)) ($c(1) : $c(0)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 1
17 1
18 0
19 0
20 1
21 0
22 0
23 0
24 0

## index
4
## name
elevator-at-floor(e1, f0)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(9)) ~($a(3))) : $s(4)) (and($a(3) ~($s(11)) $s(5)) : $c(1)) (and($a(3) $s(11) ~($s(4))) : $s(4)) (and($a(3) ~($s(11))) : $s(4)) ($c(1) : $c(0)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 1
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 1
24 0

## index
5
## name
elevator-at-floor(e1, f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(9)) ~($a(3))) : $s(5)) (and($a(3) $s(11) $s(4)) : $c(1)) (and($a(3) ~($s(11)) $s(6)) : $c(1)) (and($a(3) $s(11) ~($s(5))) : $s(5)) (and($a(3) ~($s(11)) ~($s(5))) : $s(5)) ($c(1) : $c(0)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 1
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 1
24 0

## index
6
## name
elevator-at-floor(e1, f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(9)) ~($a(3))) : $s(6)) (and($a(3) $s(11) $s(5)) : $c(1)) (and($a(3) ~($s(11)) $s(7)) : $c(1)) (and($a(3) $s(11) ~($s(6))) : $s(6)) (and($a(3) ~($s(11)) ~($s(6))) : $s(6)) ($c(1) : $c(0)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 1
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 1
24 0

## index
7
## name
elevator-at-floor(e1, f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(9)) ~($a(3))) : $s(7)) (and($a(3) $s(11) $s(6)) : $c(1)) (and($a(3) $s(11)) : $s(7)) (and($a(3) ~($s(11)) ~($s(7))) : $s(7)) ($c(1) : $c(0)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 1
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 1
24 0

## index
8
## name
elevator-closed(e0)
## number of values
2
## values
0 false
1 true
## formula
or(and($s(8) ~($a(6)) ~($a(4))) $a(0))
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 2
5 0
6 0
7 0
8 3
9 1
10 1
11 2
12 2
13 1
14 2
15 0
16 0
17 0
18 1
19 2
20 0
21 3
22 3
23 3
24 3

## index
9
## name
elevator-closed(e1)
## number of values
2
## values
0 false
1 true
## formula
or(and($s(9) ~($a(7)) ~($a(5))) $a(1))
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 3
8 0
9 1
10 2
11 1
12 2
13 0
14 0
15 1
16 2
17 0
18 3
19 3
20 3
21 1
22 2
23 0
24 3

## index
10
## name
elevator-dir-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(6) : $c(1)) ($a(4) : $c(0)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 2
5 0
6 0
7 0
8 0
9 1
10 1
11 2
12 2
13 1
14 2
15 0
16 0
17 0
18 1
19 2
20 0
21 0
22 0
23 0
24 0

## index
11
## name
elevator-dir-up(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(7) : $c(1)) ($a(5) : $c(0)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 0
8 0
9 1
10 2
11 1
12 2
13 0
14 0
15 1
16 2
17 0
18 0
19 0
20 0
21 1
22 2
23 0
24 0

## index
12
## name
person-in-elevator-going-down(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(12) : ~($s(0))) ($c(1) : or(and($s(1) ~($s(10)) ~($s(8)) $s(16)) and($s(2) ~($s(10)) ~($s(8)) $s(17)))) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0

## index
13
## name
person-in-elevator-going-down(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(13) : ~($s(4))) ($c(1) : or(and($s(5) ~($s(11)) ~($s(9)) $s(16)) and($s(6) ~($s(11)) ~($s(9)) $s(17)))) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0

## index
14
## name
person-in-elevator-going-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(14) : ~($s(3))) ($c(1) : or(and($s(1) $s(10) ~($s(8)) $s(18)) and($s(2) $s(10) ~($s(8)) $s(19)))) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0

## index
15
## name
person-in-elevator-going-up(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(15) : ~($s(7))) ($c(1) : or(and($s(5) $s(11) ~($s(9)) $s(18)) and($s(6) $s(11) ~($s(9)) $s(19)))) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
person-waiting-down(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(16) ~(or(and($s(1) ~($s(10)) ~($s(8))) and($s(5) ~($s(11)) ~($s(9)))))) : $c(1)) ($c(1) : Bernoulli($c(0.089050114))) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0

## index
1
## name
person-waiting-down(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(17) ~(or(and($s(2) ~($s(10)) ~($s(8))) and($s(6) ~($s(11)) ~($s(9)))))) : $c(1)) ($c(1) : Bernoulli($c(0.1175044))) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0

## index
2
## name
person-waiting-up(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) ~(or(and($s(1) $s(10) ~($s(8))) and($s(5) $s(11) ~($s(9)))))) : $c(1)) ($c(1) : Bernoulli($c(0.089050114))) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0

## index
3
## name
person-waiting-up(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) ~(or(and($s(2) $s(10) ~($s(8))) and($s(6) $s(11) ~($s(9)))))) : $c(1)) ($c(1) : Bernoulli($c(0.1175044))) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0



#####REWARD#####
## formula
+(*(and($s(14) $s(10)) $c(-0.75)) *(and($s(15) $s(11)) $c(-0.75)) *(and($s(12) ~($s(10))) $c(-0.75)) *(and($s(13) ~($s(11))) $c(-0.75)) *(and($s(14) ~($s(10))) $c(-3)) *(and($s(15) ~($s(11))) $c(-3)) *(and($s(12) $s(10)) $c(-3)) *(and($s(13) $s(11)) $c(-3)) -(-($c(0) $s(18)) $s(16)) -(-($c(0) $s(19)) $s(17)))
## min
-19
## max
0
## independent from actions
1
## hash index
20
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 1 1 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 1 1 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 1 0 0 1 
## relevant preconditions
0


## index
12
## state
0 0 0 0 1 1 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 1 0 0 1 0 
## relevant preconditions
0


## index
14
## state
0 0 0 1 1 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 1 0 0 0 0 1 
## relevant preconditions
0


## index
16
## state
0 0 1 0 0 1 0 0 
## relevant preconditions
0


## index
17
## state
0 0 1 1 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 1 0 0 0 0 1 0 
## relevant preconditions
0


## index
19
## state
0 1 0 0 1 0 0 0 
## relevant preconditions
0


## index
20
## state
0 1 1 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
1 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
22
## state
1 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
23
## state
1 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
24
## state
1 1 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
1 2
12 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
12 2
14 1
16 1
18 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 8
2 4
3 2
12 4
14 2
17 1
19 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
2 8
3 4
14 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 2
5 2
13 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
4 4
5 4
6 2
13 2
15 1
16 2
18 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
5 8
6 4
7 2
13 4
15 2
17 2
19 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 8
7 4
15 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
0 8
1 16
2 16
3 8
8 4
12 8
14 8
16 4
17 4
18 4
19 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
11
4 8
5 16
6 16
7 8
9 4
13 8
15 8
16 8
17 8
18 8
19 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
12
0 16
1 32
2 32
3 16
10 3
12 16
14 16
16 16
17 16
18 16
19 16
20 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
12
4 16
5 32
6 32
7 16
11 3
13 16
15 16
16 32
17 32
18 32
19 32
20 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
12 32
20 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
13 32
20 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
14 32
20 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
15 32
20 32
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
12 64
13 64
16 64
20 64
## kleene state fluent hash keys (first line is the number of keys)
4
36184128 729
13 729
16 729
20 729

## index
1
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
12 128
13 128
17 64
20 128
## kleene state fluent hash keys (first line is the number of keys)
4
36146864 2187
13 2187
17 729
20 2187

## index
2
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
14 64
15 64
18 64
20 256
## kleene state fluent hash keys (first line is the number of keys)
4
36177936 729
15 729
18 729
20 6561

## index
3
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
14 128
15 128
19 64
20 512
## kleene state fluent hash keys (first line is the number of keys)
4
36185120 2187
15 2187
19 729
20 19683

